Decoding compiled method 0x00000001065085d0:
Code:
[Disassembling for mach='i386:x86-64']
[Entry Point]
[Constants]
  # {method} {0x000000011a2a2098} 'hashCode' '()I' in 'java/lang/String'
  #           [sp+0x40]  (sp of caller)
  0x0000000106508740: mov    0x8(%rsi),%r10d
  0x0000000106508744: shl    $0x3,%r10
  0x0000000106508748: cmp    %rax,%r10
  0x000000010650874b: jne    0x000000010644ee20  ;   {runtime_call}
  0x0000000106508751: data32 data32 nopw 0x0(%rax,%rax,1)
  0x000000010650875c: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x0000000106508760: mov    %eax,-0x14000(%rsp)
  0x0000000106508767: push   %rbp
  0x0000000106508768: sub    $0x30,%rsp
  0x000000010650876c: movabs $0x11a46be08,%rax  ;   {metadata(method data for {method} {0x000000011a2a2098} 'hashCode' '()I' in 'java/lang/String')}
  0x0000000106508776: mov    0xdc(%rax),%edi
  0x000000010650877c: add    $0x8,%edi
  0x000000010650877f: mov    %edi,0xdc(%rax)
  0x0000000106508785: movabs $0x11a2a2098,%rax  ;   {metadata({method} {0x000000011a2a2098} 'hashCode' '()I' in 'java/lang/String')}
  0x000000010650878f: and    $0x1ff8,%edi
  0x0000000106508795: cmp    $0x0,%edi
  0x0000000106508798: je     0x00000001065088d1  ;*aload_0
                                                ; - java.lang.String::hashCode@0 (line 1466)

  0x000000010650879e: mov    0x10(%rsi),%eax    ;*getfield hash
                                                ; - java.lang.String::hashCode@1 (line 1466)

  0x00000001065087a1: cmp    $0x0,%eax
  0x00000001065087a4: movabs $0x11a46be08,%rdi  ;   {metadata(method data for {method} {0x000000011a2a2098} 'hashCode' '()I' in 'java/lang/String')}
  0x00000001065087ae: movabs $0x108,%rbx
  0x00000001065087b8: jne    0x00000001065087c8
  0x00000001065087be: movabs $0x118,%rbx
  0x00000001065087c8: mov    (%rdi,%rbx,1),%rdx
  0x00000001065087cc: lea    0x1(%rdx),%rdx
  0x00000001065087d0: mov    %rdx,(%rdi,%rbx,1)
  0x00000001065087d4: jne    0x00000001065088c5  ;*ifne
                                                ; - java.lang.String::hashCode@6 (line 1467)

  0x00000001065087da: mov    0xc(%rsi),%edi
  0x00000001065087dd: shl    $0x3,%rdi          ;*getfield value
                                                ; - java.lang.String::hashCode@10 (line 1467)

  0x00000001065087e1: mov    0xc(%rdi),%ebx     ;*arraylength
                                                ; - java.lang.String::hashCode@13 (line 1467)
                                                ; implicit exception: dispatches to 0x00000001065088e8
  0x00000001065087e4: cmp    $0x0,%ebx
  0x00000001065087e7: movabs $0x11a46be08,%rdx  ;   {metadata(method data for {method} {0x000000011a2a2098} 'hashCode' '()I' in 'java/lang/String')}
  0x00000001065087f1: movabs $0x128,%rcx
  0x00000001065087fb: jle    0x000000010650880b
  0x0000000106508801: movabs $0x138,%rcx
  0x000000010650880b: mov    (%rdx,%rcx,1),%r8
  0x000000010650880f: lea    0x1(%r8),%r8
  0x0000000106508813: mov    %r8,(%rdx,%rcx,1)
  0x0000000106508817: jle    0x00000001065088c5  ;*ifle
                                                ; - java.lang.String::hashCode@14 (line 1467)

  0x000000010650881d: mov    $0x0,%edx
  0x0000000106508822: jmpq   0x000000010650888a  ;*iload_3
                                                ; - java.lang.String::hashCode@24 (line 1470)

  0x0000000106508827: nop
  0x0000000106508828: movslq %edx,%rcx
  0x000000010650882b: movzwl 0x10(%rdi,%rcx,2),%ecx  ;*caload
                                                ; - java.lang.String::hashCode@39 (line 1471)

  0x0000000106508830: mov    %rax,%r8
  0x0000000106508833: shl    $0x5,%eax
  0x0000000106508836: sub    %r8d,%eax
  0x0000000106508839: add    %ecx,%eax
  0x000000010650883b: inc    %edx
  0x000000010650883d: movabs $0x11a46be08,%rcx  ;   {metadata(method data for {method} {0x000000011a2a2098} 'hashCode' '()I' in 'java/lang/String')}
  0x0000000106508847: mov    0xe0(%rcx),%r8d
  0x000000010650884e: add    $0x8,%r8d
  0x0000000106508852: mov    %r8d,0xe0(%rcx)
  0x0000000106508859: movabs $0x11a2a2098,%rcx  ;   {metadata({method} {0x000000011a2a2098} 'hashCode' '()I' in 'java/lang/String')}
  0x0000000106508863: and    $0xfff8,%r8d
  0x000000010650886a: cmp    $0x0,%r8d
  0x000000010650886e: je     0x00000001065088ed  ; OopMap{rdi=Oop rsi=Oop off=308}
                                                ;*goto
                                                ; - java.lang.String::hashCode@45 (line 1470)

  0x0000000106508874: test   %eax,-0x96677a(%rip)        # 0x0000000105ba2100
                                                ;   {poll}
  0x000000010650887a: movabs $0x11a46be08,%rcx  ;   {metadata(method data for {method} {0x000000011a2a2098} 'hashCode' '()I' in 'java/lang/String')}
  0x0000000106508884: incl   0x168(%rcx)        ;*goto
                                                ; - java.lang.String::hashCode@45 (line 1470)

  0x000000010650888a: cmp    %ebx,%edx
  0x000000010650888c: movabs $0x11a46be08,%rcx  ;   {metadata(method data for {method} {0x000000011a2a2098} 'hashCode' '()I' in 'java/lang/String')}
  0x0000000106508896: movabs $0x148,%r8
  0x00000001065088a0: jge    0x00000001065088b0
  0x00000001065088a6: movabs $0x158,%r8
  0x00000001065088b0: mov    (%rcx,%r8,1),%r9
  0x00000001065088b4: lea    0x1(%r9),%r9
  0x00000001065088b8: mov    %r9,(%rcx,%r8,1)
  0x00000001065088bc: jl     0x0000000106508828  ;*if_icmpge
                                                ; - java.lang.String::hashCode@30 (line 1470)

  0x00000001065088c2: mov    %eax,0x10(%rsi)    ;*putfield hash
                                                ; - java.lang.String::hashCode@50 (line 1473)

  0x00000001065088c5: add    $0x30,%rsp
  0x00000001065088c9: pop    %rbp
  0x00000001065088ca: test   %eax,-0x9667d0(%rip)        # 0x0000000105ba2100
                                                ;   {poll_return}
  0x00000001065088d0: retq
  0x00000001065088d1: mov    %rax,0x8(%rsp)
  0x00000001065088d6: movq   $0xffffffffffffffff,(%rsp)
  0x00000001065088de: callq  0x0000000106507020  ; OopMap{rsi=Oop off=419}
                                                ;*synchronization entry
                                                ; - java.lang.String::hashCode@-1 (line 1466)
                                                ;   {runtime_call}
  0x00000001065088e3: jmpq   0x000000010650879e
  0x00000001065088e8: callq  0x0000000106476b40  ; OopMap{rsi=Oop rdi=Oop off=429}
                                                ;*arraylength
                                                ; - java.lang.String::hashCode@13 (line 1467)
                                                ;   {runtime_call}
  0x00000001065088ed: mov    %rcx,0x8(%rsp)
  0x00000001065088f2: movq   $0x2d,(%rsp)
  0x00000001065088fa: callq  0x0000000106507020  ; OopMap{rdi=Oop rsi=Oop off=447}
                                                ;*goto
                                                ; - java.lang.String::hashCode@45 (line 1470)
                                                ;   {runtime_call}
  0x00000001065088ff: jmpq   0x0000000106508874
  0x0000000106508904: nop
  0x0000000106508905: nop
  0x0000000106508906: mov    0x2a8(%r15),%rax
  0x000000010650890d: movabs $0x0,%r10
  0x0000000106508917: mov    %r10,0x2a8(%r15)
  0x000000010650891e: movabs $0x0,%r10
  0x0000000106508928: mov    %r10,0x2b0(%r15)
  0x000000010650892f: add    $0x30,%rsp
  0x0000000106508933: pop    %rbp
  0x0000000106508934: jmpq   0x00000001064776a0  ;   {runtime_call}
  0x0000000106508939: hlt
  0x000000010650893a: hlt
  0x000000010650893b: hlt
  0x000000010650893c: hlt
  0x000000010650893d: hlt
  0x000000010650893e: hlt
  0x000000010650893f: hlt
[Exception Handler]
[Stub Code]
  0x0000000106508940: callq  0x00000001065049a0  ;   {no_reloc}
  0x0000000106508945: mov    %rsp,-0x28(%rsp)
  0x000000010650894a: sub    $0x80,%rsp
  0x0000000106508951: mov    %rax,0x78(%rsp)
  0x0000000106508956: mov    %rcx,0x70(%rsp)
  0x000000010650895b: mov    %rdx,0x68(%rsp)
  0x0000000106508960: mov    %rbx,0x60(%rsp)
  0x0000000106508965: mov    %rbp,0x50(%rsp)
  0x000000010650896a: mov    %rsi,0x48(%rsp)
  0x000000010650896f: mov    %rdi,0x40(%rsp)
  0x0000000106508974: mov    %r8,0x38(%rsp)
  0x0000000106508979: mov    %r9,0x30(%rsp)
  0x000000010650897e: mov    %r10,0x28(%rsp)
  0x0000000106508983: mov    %r11,0x20(%rsp)
  0x0000000106508988: mov    %r12,0x18(%rsp)
  0x000000010650898d: mov    %r13,0x10(%rsp)
  0x0000000106508992: mov    %r14,0x8(%rsp)
  0x0000000106508997: mov    %r15,(%rsp)
  0x000000010650899b: movabs $0x105194e90,%rdi  ;   {external_word}
  0x00000001065089a5: movabs $0x106508945,%rsi  ;   {internal_word}
  0x00000001065089af: mov    %rsp,%rdx
  0x00000001065089b2: and    $0xfffffffffffffff0,%rsp
  0x00000001065089b6: callq  0x0000000104fc0196  ;   {runtime_call}
  0x00000001065089bb: hlt
[Deopt Handler Code]
  0x00000001065089bc: movabs $0x1065089bc,%r10  ;   {section_word}
  0x00000001065089c6: push   %r10
  0x00000001065089c8: jmpq   0x00000001064503c0  ;   {runtime_call}
  0x00000001065089cd: hlt
  0x00000001065089ce: hlt
  0x00000001065089cf: hlt
[Loaded sun.misc.PostVMInitHook from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.usagetracker.UsageTrackerClient from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.concurrent.atomic.AtomicBoolean from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.usagetracker.UsageTrackerClient$1 from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.usagetracker.UsageTrackerClient$4 from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
Decoding compiled method 0x0000000106510b10:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000011a2a0cf8} 'length' '()I' in 'java/lang/String'
  #           [sp+0x40]  (sp of caller)
  0x0000000106510c80: mov    0x8(%rsi),%r10d
  0x0000000106510c84: shl    $0x3,%r10
  0x0000000106510c88: cmp    %rax,%r10
  0x0000000106510c8b: jne    0x000000010644ee20  ;   {runtime_call}
  0x0000000106510c91: data32 data32 nopw 0x0(%rax,%rax,1)
  0x0000000106510c9c: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x0000000106510ca0: mov    %eax,-0x14000(%rsp)
  0x0000000106510ca7: push   %rbp
  0x0000000106510ca8: sub    $0x30,%rsp
  0x0000000106510cac: movabs $0x11a4760c0,%rax  ;   {metadata(method data for {method} {0x000000011a2a0cf8} 'length' '()I' in 'java/lang/String')}
  0x0000000106510cb6: mov    0xdc(%rax),%edi
  0x0000000106510cbc: add    $0x8,%edi
  0x0000000106510cbf: mov    %edi,0xdc(%rax)
  0x0000000106510cc5: movabs $0x11a2a0cf8,%rax  ;   {metadata({method} {0x000000011a2a0cf8} 'length' '()I' in 'java/lang/String')}
  0x0000000106510ccf: and    $0x1ff8,%edi
  0x0000000106510cd5: cmp    $0x0,%edi
  0x0000000106510cd8: je     0x0000000106510cf4  ;*aload_0
                                                ; - java.lang.String::length@0 (line 623)

  0x0000000106510cde: mov    0xc(%rsi),%eax
  0x0000000106510ce1: shl    $0x3,%rax          ;*getfield value
                                                ; - java.lang.String::length@1 (line 623)

  0x0000000106510ce5: mov    0xc(%rax),%eax     ;*arraylength
                                                ; - java.lang.String::length@4 (line 623)
                                                ; implicit exception: dispatches to 0x0000000106510d08
  0x0000000106510ce8: add    $0x30,%rsp
  0x0000000106510cec: pop    %rbp
  0x0000000106510ced: test   %eax,-0x96ebf3(%rip)        # 0x0000000105ba2100
                                                ;   {poll_return}
  0x0000000106510cf3: retq
  0x0000000106510cf4: mov    %rax,0x8(%rsp)
  0x0000000106510cf9: movq   $0xffffffffffffffff,(%rsp)
  0x0000000106510d01: callq  0x0000000106507020  ; OopMap{rsi=Oop off=134}
                                                ;*synchronization entry
                                                ; - java.lang.String::length@-1 (line 623)
                                                ;   {runtime_call}
  0x0000000106510d06: jmp    0x0000000106510cde
  0x0000000106510d08: callq  0x0000000106476b40  ; OopMap{rsi=Oop off=141}
                                                ;*arraylength
                                                ; - java.lang.String::length@4 (line 623)
                                                ;   {runtime_call}
  0x0000000106510d0d: nop
  0x0000000106510d0e: nop
  0x0000000106510d0f: mov    0x2a8(%r15),%rax
  0x0000000106510d16: movabs $0x0,%r10
  0x0000000106510d20: mov    %r10,0x2a8(%r15)
  0x0000000106510d27: movabs $0x0,%r10
  0x0000000106510d31: mov    %r10,0x2b0(%r15)
  0x0000000106510d38: add    $0x30,%rsp
  0x0000000106510d3c: pop    %rbp
  0x0000000106510d3d: jmpq   0x00000001064776a0  ;   {runtime_call}
  0x0000000106510d42: hlt
  0x0000000106510d43: hlt
  0x0000000106510d44: hlt
  0x0000000106510d45: hlt
  0x0000000106510d46: hlt
  0x0000000106510d47: hlt
  0x0000000106510d48: hlt
  0x0000000106510d49: hlt
  0x0000000106510d4a: hlt
  0x0000000106510d4b: hlt
  0x0000000106510d4c: hlt
  0x0000000106510d4d: hlt
  0x0000000106510d4e: hlt
  0x0000000106510d4f: hlt
  0x0000000106510d50: hlt
  0x0000000106510d51: hlt
  0x0000000106510d52: hlt
  0x0000000106510d53: hlt
  0x0000000106510d54: hlt
  0x0000000106510d55: hlt
  0x0000000106510d56: hlt
  0x0000000106510d57: hlt
  0x0000000106510d58: hlt
  0x0000000106510d59: hlt
  0x0000000106510d5a: hlt
  0x0000000106510d5b: hlt
  0x0000000106510d5c: hlt
  0x0000000106510d5d: hlt
  0x0000000106510d5e: hlt
  0x0000000106510d5f: hlt
[Exception Handler]
[Stub Code]
  0x0000000106510d60: callq  0x00000001065049a0  ;   {no_reloc}
  0x0000000106510d65: mov    %rsp,-0x28(%rsp)
  0x0000000106510d6a: sub    $0x80,%rsp
  0x0000000106510d71: mov    %rax,0x78(%rsp)
  0x0000000106510d76: mov    %rcx,0x70(%rsp)
  0x0000000106510d7b: mov    %rdx,0x68(%rsp)
  0x0000000106510d80: mov    %rbx,0x60(%rsp)
  0x0000000106510d85: mov    %rbp,0x50(%rsp)
  0x0000000106510d8a: mov    %rsi,0x48(%rsp)
  0x0000000106510d8f: mov    %rdi,0x40(%rsp)
  0x0000000106510d94: mov    %r8,0x38(%rsp)
  0x0000000106510d99: mov    %r9,0x30(%rsp)
  0x0000000106510d9e: mov    %r10,0x28(%rsp)
  0x0000000106510da3: mov    %r11,0x20(%rsp)
  0x0000000106510da8: mov    %r12,0x18(%rsp)
  0x0000000106510dad: mov    %r13,0x10(%rsp)
  0x0000000106510db2: mov    %r14,0x8(%rsp)
  0x0000000106510db7: mov    %r15,(%rsp)
  0x0000000106510dbb: movabs $0x105194e90,%rdi  ;   {external_word}
  0x0000000106510dc5: movabs $0x106510d65,%rsi  ;   {internal_word}
  0x0000000106510dcf: mov    %rsp,%rdx
  0x0000000106510dd2: and    $0xfffffffffffffff0,%rsp
  0x0000000106510dd6: callq  0x0000000104fc0196  ;   {runtime_call}
  0x0000000106510ddb: hlt
[Deopt Handler Code]
  0x0000000106510ddc: movabs $0x106510ddc,%r10  ;   {section_word}
  0x0000000106510de6: push   %r10
  0x0000000106510de8: jmpq   0x00000001064503c0  ;   {runtime_call}
  0x0000000106510ded: hlt
  0x0000000106510dee: hlt
  0x0000000106510def: hlt
Decoding compiled method 0x0000000106510ed0:
Code:
[Entry Point]
  # {method} {0x000000011a2b6f00} 'arraycopy' '(Ljava/lang/Object;ILjava/lang/Object;II)V' in 'java/lang/System'
  # parm0:    rsi:rsi   = 'java/lang/Object'
  # parm1:    rdx       = int
  # parm2:    rcx:rcx   = 'java/lang/Object'
  # parm3:    r8        = int
  # parm4:    r9        = int
  #           [sp+0x60]  (sp of caller)
  0x0000000106511040: mov    0x8(%rsi),%r10d
  0x0000000106511044: shl    $0x3,%r10
  0x0000000106511048: cmp    %r10,%rax
  0x000000010651104b: je     0x0000000106511058
  0x0000000106511051: jmpq   0x000000010644ee20  ;   {runtime_call}
  0x0000000106511056: xchg   %ax,%ax
[Verified Entry Point]
  0x0000000106511058: mov    %eax,-0x14000(%rsp)
  0x000000010651105f: push   %rbp
  0x0000000106511060: mov    %rsp,%rbp
  0x0000000106511063: sub    $0x50,%rsp
  0x0000000106511067: mov    %r9,(%rsp)
  0x000000010651106b: mov    %r8,%r9
  0x000000010651106e: mov    %rcx,0x18(%rsp)
  0x0000000106511073: cmp    $0x0,%rcx
  0x0000000106511077: lea    0x18(%rsp),%r8
  0x000000010651107c: cmove  0x18(%rsp),%r8
  0x0000000106511082: mov    %rdx,%rcx
  0x0000000106511085: mov    %rsi,0x8(%rsp)
  0x000000010651108a: cmp    $0x0,%rsi
  0x000000010651108e: lea    0x8(%rsp),%rdx
  0x0000000106511093: cmove  0x8(%rsp),%rdx
  0x0000000106511099: movabs $0x795580c78,%r14  ;   {oop(a 'java/lang/Class' = 'java/lang/System')}
  0x00000001065110a3: mov    %r14,0x38(%rsp)
  0x00000001065110a8: lea    0x38(%rsp),%r14
  0x00000001065110ad: mov    %r14,%rsi          ; OopMap{[24]=Oop [8]=Oop [56]=Oop off=112}
  0x00000001065110b0: movabs $0x1065110b0,%r10  ;   {section_word}
  0x00000001065110ba: mov    %r10,0x1e0(%r15)
  0x00000001065110c1: mov    %rsp,0x1d8(%r15)
  0x00000001065110c8: cmpb   $0x0,-0x106cca5(%rip)        # 0x00000001054a442a
                                                ;   {external_word}
  0x00000001065110cf: je     0x0000000106511113
  0x00000001065110d5: push   %rsi
  0x00000001065110d6: push   %rdx
  0x00000001065110d7: push   %rcx
  0x00000001065110d8: push   %r8
  0x00000001065110da: push   %r9
  0x00000001065110dc: movabs $0x11a2b6f00,%rsi  ;   {metadata({method} {0x000000011a2b6f00} 'arraycopy' '(Ljava/lang/Object;ILjava/lang/Object;II)V' in 'java/lang/System')}
  0x00000001065110e6: mov    %r15,%rdi
  0x00000001065110e9: test   $0xf,%esp
  0x00000001065110ef: je     0x0000000106511107
  0x00000001065110f5: sub    $0x8,%rsp
  0x00000001065110f9: callq  0x00000001050a4488  ;   {runtime_call}
  0x00000001065110fe: add    $0x8,%rsp
  0x0000000106511102: jmpq   0x000000010651110c
  0x0000000106511107: callq  0x00000001050a4488  ;   {runtime_call}
  0x000000010651110c: pop    %r9
  0x000000010651110e: pop    %r8
  0x0000000106511110: pop    %rcx
  0x0000000106511111: pop    %rdx
  0x0000000106511112: pop    %rsi
  0x0000000106511113: lea    0x1f8(%r15),%rdi
  0x000000010651111a: movl   $0x4,0x270(%r15)
  0x0000000106511125: callq  0x0000000104f005f0  ;   {runtime_call}
  0x000000010651112a: vzeroupper
  0x000000010651112d: movl   $0x5,0x270(%r15)
  0x0000000106511138: lock addl $0x0,(%rsp)
  0x000000010651113d: cmpl   $0x0,-0x1062377(%rip)        # 0x00000001054aedd0
                                                ;   {external_word}
  0x0000000106511147: jne    0x000000010651115b
  0x000000010651114d: cmpl   $0x0,0x30(%r15)
  0x0000000106511155: je     0x0000000106511174
  0x000000010651115b: mov    %r15,%rdi
  0x000000010651115e: mov    %rsp,%r12
  0x0000000106511161: sub    $0x0,%rsp
  0x0000000106511165: and    $0xfffffffffffffff0,%rsp
  0x0000000106511169: callq  0x0000000105126b30  ;   {runtime_call}
  0x000000010651116e: mov    %r12,%rsp
  0x0000000106511171: xor    %r12,%r12
  0x0000000106511174: movl   $0x8,0x270(%r15)
  0x000000010651117f: cmpl   $0x1,0x29c(%r15)
  0x000000010651118a: je     0x0000000106511212
  0x0000000106511190: cmpb   $0x0,-0x106cd6d(%rip)        # 0x00000001054a442a
                                                ;   {external_word}
  0x0000000106511197: je     0x00000001065111cd
  0x000000010651119d: movabs $0x11a2b6f00,%rsi  ;   {metadata({method} {0x000000011a2b6f00} 'arraycopy' '(Ljava/lang/Object;ILjava/lang/Object;II)V' in 'java/lang/System')}
  0x00000001065111a7: mov    %r15,%rdi
  0x00000001065111aa: test   $0xf,%esp
  0x00000001065111b0: je     0x00000001065111c8
  0x00000001065111b6: sub    $0x8,%rsp
  0x00000001065111ba: callq  0x00000001050a43fa  ;   {runtime_call}
  0x00000001065111bf: add    $0x8,%rsp
  0x00000001065111c3: jmpq   0x00000001065111cd
  0x00000001065111c8: callq  0x00000001050a43fa  ;   {runtime_call}
  0x00000001065111cd: movabs $0x0,%r10
  0x00000001065111d7: mov    %r10,0x1d8(%r15)
  0x00000001065111de: movabs $0x0,%r10
  0x00000001065111e8: mov    %r10,0x1e0(%r15)
  0x00000001065111ef: mov    0x38(%r15),%rcx
  0x00000001065111f3: movl   $0x0,0x100(%rcx)
  0x00000001065111fd: leaveq
  0x00000001065111fe: cmpq   $0x0,0x8(%r15)
  0x0000000106511206: jne    0x000000010651120d
  0x000000010651120c: retq
  0x000000010651120d: jmpq   Stub::forward exception  ;   {runtime_call}
  0x0000000106511212: mov    %rsp,%r12
  0x0000000106511215: sub    $0x0,%rsp
  0x0000000106511219: and    $0xfffffffffffffff0,%rsp
  0x000000010651121d: callq  0x00000001050a2260  ;   {runtime_call}
  0x0000000106511222: mov    %r12,%rsp
  0x0000000106511225: xor    %r12,%r12
  0x0000000106511228: jmpq   0x0000000106511190
  0x000000010651122d: hlt
  0x000000010651122e: hlt
  0x000000010651122f: hlt
[Loaded sun.usagetracker.UsageTrackerClient$3 from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
Decoding compiled method 0x0000000106511250:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000011a2a0e48} 'charAt' '(I)C' in 'java/lang/String'
  # this:     rsi:rsi   = 'java/lang/String'
  # parm0:    rdx       = int
  #           [sp+0x50]  (sp of caller)
  0x00000001065113e0: mov    0x8(%rsi),%r10d
  0x00000001065113e4: shl    $0x3,%r10
  0x00000001065113e8: cmp    %rax,%r10
  0x00000001065113eb: jne    0x000000010644ee20  ;   {runtime_call}
  0x00000001065113f1: data32 data32 nopw 0x0(%rax,%rax,1)
  0x00000001065113fc: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x0000000106511400: mov    %eax,-0x14000(%rsp)
  0x0000000106511407: push   %rbp
  0x0000000106511408: sub    $0x40,%rsp
  0x000000010651140c: movabs $0x11a426b08,%rax  ;   {metadata(method data for {method} {0x000000011a2a0e48} 'charAt' '(I)C' in 'java/lang/String')}
  0x0000000106511416: mov    0xdc(%rax),%edi
  0x000000010651141c: add    $0x8,%edi
  0x000000010651141f: mov    %edi,0xdc(%rax)
  0x0000000106511425: movabs $0x11a2a0e48,%rax  ;   {metadata({method} {0x000000011a2a0e48} 'charAt' '(I)C' in 'java/lang/String')}
  0x000000010651142f: and    $0x1ff8,%edi
  0x0000000106511435: cmp    $0x0,%edi
  0x0000000106511438: je     0x0000000106511531  ;*iload_1
                                                ; - java.lang.String::charAt@0 (line 657)

  0x000000010651143e: cmp    $0x0,%edx
  0x0000000106511441: movabs $0x11a426b08,%rax  ;   {metadata(method data for {method} {0x000000011a2a0e48} 'charAt' '(I)C' in 'java/lang/String')}
  0x000000010651144b: movabs $0x108,%rdi
  0x0000000106511455: jl     0x0000000106511465
  0x000000010651145b: movabs $0x118,%rdi
  0x0000000106511465: mov    (%rax,%rdi,1),%rbx
  0x0000000106511469: lea    0x1(%rbx),%rbx
  0x000000010651146d: mov    %rbx,(%rax,%rdi,1)
  0x0000000106511471: jl     0x00000001065114d3  ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)

  0x0000000106511477: mov    0xc(%rsi),%eax
  0x000000010651147a: shl    $0x3,%rax          ;*getfield value
                                                ; - java.lang.String::charAt@6 (line 657)

  0x000000010651147e: mov    0xc(%rax),%edi     ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ; implicit exception: dispatches to 0x0000000106511548
  0x0000000106511481: cmp    %edi,%edx
  0x0000000106511483: movabs $0x11a426b08,%rdi  ;   {metadata(method data for {method} {0x000000011a2a0e48} 'charAt' '(I)C' in 'java/lang/String')}
  0x000000010651148d: movabs $0x128,%rbx
  0x0000000106511497: jl     0x00000001065114a7
  0x000000010651149d: movabs $0x138,%rbx
  0x00000001065114a7: mov    (%rdi,%rbx,1),%rcx
  0x00000001065114ab: lea    0x1(%rcx),%rcx
  0x00000001065114af: mov    %rcx,(%rdi,%rbx,1)
  0x00000001065114b3: jge    0x00000001065114d3  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)

  0x00000001065114b9: movslq %edx,%rdx
  0x00000001065114bc: movzwl 0x10(%rax,%rdx,2),%eax  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)

  0x00000001065114c1: and    $0xffff,%eax
  0x00000001065114c7: add    $0x40,%rsp
  0x00000001065114cb: pop    %rbp
  0x00000001065114cc: test   %eax,-0x96f3d2(%rip)        # 0x0000000105ba2100
                                                ;   {poll_return}
  0x00000001065114d2: retq                      ;*ireturn
                                                ; - java.lang.String::charAt@28 (line 660)

  0x00000001065114d3: mov    %rsi,0x28(%rsp)
  0x00000001065114d8: mov    %rdx,%rdi
  0x00000001065114db: nopl   0x0(%rax,%rax,1)
  0x00000001065114e0: jmpq   0x000000010651155c  ;   {no_reloc}
  0x00000001065114e5: add    %al,(%rax)
  0x00000001065114e7: add    %al,(%rax)
  0x00000001065114e9: add    %ch,%cl
  0x00000001065114eb: ja     0x00000001065114ed
  0x00000001065114ed: add    %al,(%rax)         ;*new  ; - java.lang.String::charAt@13 (line 658)

  0x00000001065114ef: mov    %rax,%rdx
  0x00000001065114f2: movabs $0x11a426b08,%rbx  ;   {metadata(method data for {method} {0x000000011a2a0e48} 'charAt' '(I)C' in 'java/lang/String')}
  0x00000001065114fc: addq   $0x1,0x148(%rbx)
  0x0000000106511504: mov    %rdi,%rdx
  0x0000000106511507: mov    %rax,%rsi          ;*invokespecial <init>
                                                ; - java.lang.String::charAt@18 (line 658)

  0x000000010651150a: mov    %edi,0x30(%rsp)
  0x000000010651150e: mov    %rax,0x20(%rsp)
  0x0000000106511513: nop
  0x0000000106511514: nop
  0x0000000106511515: nop
  0x0000000106511516: nop
  0x0000000106511517: callq  0x000000010644f020  ; OopMap{[40]=Oop [32]=Oop off=316}
                                                ;*invokespecial <init>
                                                ; - java.lang.String::charAt@18 (line 658)
                                                ;   {optimized virtual_call}
  0x000000010651151c: mov    0x20(%rsp),%rax    ; OopMap{[40]=Oop rax=Oop off=321}
                                                ;*athrow
                                                ; - java.lang.String::charAt@21 (line 658)

  0x0000000106511521: movabs $0x106511521,%rdx  ;   {section_word}
  0x000000010651152b: callq  0x0000000106474fa0  ;   {runtime_call}
  0x0000000106511530: nop
  0x0000000106511531: mov    %rax,0x8(%rsp)
  0x0000000106511536: movq   $0xffffffffffffffff,(%rsp)
  0x000000010651153e: callq  0x0000000106507020  ; OopMap{rsi=Oop off=355}
                                                ;*synchronization entry
                                                ; - java.lang.String::charAt@-1 (line 657)
                                                ;   {runtime_call}
  0x0000000106511543: jmpq   0x000000010651143e
  0x0000000106511548: callq  0x0000000106476b40  ; OopMap{rsi=Oop rax=Oop off=365}
                                                ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ;   {runtime_call}
  0x000000010651154d: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x0000000106511557: mov    $0xa050f00,%eax
  0x000000010651155c: callq  0x0000000106506020  ; OopMap{[40]=Oop off=385}
                                                ;*new  ; - java.lang.String::charAt@13 (line 658)
                                                ;   {runtime_call}
  0x0000000106511561: jmpq   0x00000001065114e0
  0x0000000106511566: mov    %rdx,%rdx
  0x0000000106511569: callq  0x0000000106476620  ; OopMap{[40]=Oop off=398}
                                                ;*new  ; - java.lang.String::charAt@13 (line 658)
                                                ;   {runtime_call}
  0x000000010651156e: jmpq   0x00000001065114ef
  0x0000000106511573: nop
  0x0000000106511574: nop
  0x0000000106511575: mov    0x2a8(%r15),%rax
  0x000000010651157c: movabs $0x0,%r10
  0x0000000106511586: mov    %r10,0x2a8(%r15)
  0x000000010651158d: movabs $0x0,%r10
  0x0000000106511597: mov    %r10,0x2b0(%r15)
  0x000000010651159e: add    $0x40,%rsp
  0x00000001065115a2: pop    %rbp
  0x00000001065115a3: jmpq   0x00000001064776a0  ;   {runtime_call}
  0x00000001065115a8: hlt
  0x00000001065115a9: hlt
  0x00000001065115aa: hlt
  0x00000001065115ab: hlt
  0x00000001065115ac: hlt
  0x00000001065115ad: hlt
  0x00000001065115ae: hlt
  0x00000001065115af: hlt
  0x00000001065115b0: hlt
  0x00000001065115b1: hlt
  0x00000001065115b2: hlt
  0x00000001065115b3: hlt
  0x00000001065115b4: hlt
  0x00000001065115b5: hlt
  0x00000001065115b6: hlt
  0x00000001065115b7: hlt
  0x00000001065115b8: hlt
  0x00000001065115b9: hlt
  0x00000001065115ba: hlt
  0x00000001065115bb: hlt
  0x00000001065115bc: hlt
  0x00000001065115bd: hlt
  0x00000001065115be: hlt
  0x00000001065115bf: hlt
[Stub Code]
  0x00000001065115c0: nop                       ;   {no_reloc}
  0x00000001065115c1: nop
  0x00000001065115c2: nop
  0x00000001065115c3: nop
  0x00000001065115c4: nop
  0x00000001065115c5: movabs $0x0,%rbx          ;   {static_stub}
  0x00000001065115cf: jmpq   0x00000001065115cf  ;   {runtime_call}
[Exception Handler]
  0x00000001065115d4: callq  0x00000001065049a0  ;   {runtime_call}
  0x00000001065115d9: mov    %rsp,-0x28(%rsp)
  0x00000001065115de: sub    $0x80,%rsp
  0x00000001065115e5: mov    %rax,0x78(%rsp)
  0x00000001065115ea: mov    %rcx,0x70(%rsp)
  0x00000001065115ef: mov    %rdx,0x68(%rsp)
  0x00000001065115f4: mov    %rbx,0x60(%rsp)
  0x00000001065115f9: mov    %rbp,0x50(%rsp)
  0x00000001065115fe: mov    %rsi,0x48(%rsp)
  0x0000000106511603: mov    %rdi,0x40(%rsp)
  0x0000000106511608: mov    %r8,0x38(%rsp)
  0x000000010651160d: mov    %r9,0x30(%rsp)
  0x0000000106511612: mov    %r10,0x28(%rsp)
  0x0000000106511617: mov    %r11,0x20(%rsp)
  0x000000010651161c: mov    %r12,0x18(%rsp)
  0x0000000106511621: mov    %r13,0x10(%rsp)
  0x0000000106511626: mov    %r14,0x8(%rsp)
  0x000000010651162b: mov    %r15,(%rsp)
  0x000000010651162f: movabs $0x105194e90,%rdi  ;   {external_word}
  0x0000000106511639: movabs $0x1065115d9,%rsi  ;   {internal_word}
  0x0000000106511643: mov    %rsp,%rdx
  0x0000000106511646: and    $0xfffffffffffffff0,%rsp
  0x000000010651164a: callq  0x0000000104fc0196  ;   {runtime_call}
  0x000000010651164f: hlt
[Deopt Handler Code]
  0x0000000106511650: movabs $0x106511650,%r10  ;   {section_word}
  0x000000010651165a: push   %r10
  0x000000010651165c: jmpq   0x00000001064503c0  ;   {runtime_call}
  0x0000000106511661: hlt
  0x0000000106511662: hlt
  0x0000000106511663: hlt
  0x0000000106511664: hlt
  0x0000000106511665: hlt
  0x0000000106511666: hlt
  0x0000000106511667: hlt
[Loaded java.io.FileOutputStream$1 from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
Decoding compiled method 0x0000000106511850:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000011a2a0238} '<init>' '([CII)V' in 'java/lang/String'
  # this:     rsi:rsi   = 'java/lang/String'
  # parm0:    rdx:rdx   = '[C'
  # parm1:    rcx       = int
  # parm2:    r8        = int
  #           [sp+0x80]  (sp of caller)
  0x0000000106511a40: mov    0x8(%rsi),%r10d
  0x0000000106511a44: shl    $0x3,%r10
  0x0000000106511a48: cmp    %rax,%r10
  0x0000000106511a4b: jne    0x000000010644ee20  ;   {runtime_call}
  0x0000000106511a51: data32 data32 nopw 0x0(%rax,%rax,1)
  0x0000000106511a5c: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x0000000106511a60: mov    %eax,-0x14000(%rsp)
  0x0000000106511a67: push   %rbp
  0x0000000106511a68: sub    $0x70,%rsp
  0x0000000106511a6c: mov    %rsi,0x38(%rsp)
  0x0000000106511a71: mov    %rdx,0x48(%rsp)
  0x0000000106511a76: mov    %ecx,0x44(%rsp)
  0x0000000106511a7a: mov    %r8d,0x40(%rsp)
  0x0000000106511a7f: movabs $0x11a4921b8,%rdi  ;   {metadata(method data for {method} {0x000000011a2a0238} '<init>' '([CII)V' in 'java/lang/String')}
  0x0000000106511a89: mov    0xdc(%rdi),%ebx
  0x0000000106511a8f: add    $0x8,%ebx
  0x0000000106511a92: mov    %ebx,0xdc(%rdi)
  0x0000000106511a98: movabs $0x11a2a0238,%rdi  ;   {metadata({method} {0x000000011a2a0238} '<init>' '([CII)V' in 'java/lang/String')}
  0x0000000106511aa2: and    $0x1ff8,%ebx
  0x0000000106511aa8: cmp    $0x0,%ebx
  0x0000000106511aab: je     0x0000000106511db1  ;*aload_0
                                                ; - java.lang.String::<init>@0 (line 190)

  0x0000000106511ab1: mov    %rsi,%rdi
  0x0000000106511ab4: movabs $0x11a4921b8,%rbx  ;   {metadata(method data for {method} {0x000000011a2a0238} '<init>' '([CII)V' in 'java/lang/String')}
  0x0000000106511abe: addq   $0x1,0x108(%rbx)
  0x0000000106511ac6: movabs $0x11a418460,%rdi  ;   {metadata(method data for {method} {0x000000011a29d480} '<init>' '()V' in 'java/lang/Object')}
  0x0000000106511ad0: mov    0xdc(%rdi),%ebx
  0x0000000106511ad6: add    $0x8,%ebx
  0x0000000106511ad9: mov    %ebx,0xdc(%rdi)
  0x0000000106511adf: movabs $0x11a29d480,%rdi  ;   {metadata({method} {0x000000011a29d480} '<init>' '()V' in 'java/lang/Object')}
  0x0000000106511ae9: and    $0x7ffff8,%ebx
  0x0000000106511aef: cmp    $0x0,%ebx
  0x0000000106511af2: je     0x0000000106511dc8
  0x0000000106511af8: cmp    $0x0,%ecx
  0x0000000106511afb: movabs $0x11a4921b8,%rdi  ;   {metadata(method data for {method} {0x000000011a2a0238} '<init>' '([CII)V' in 'java/lang/String')}
  0x0000000106511b05: movabs $0x118,%rbx
  0x0000000106511b0f: jge    0x0000000106511b1f
  0x0000000106511b15: movabs $0x128,%rbx
  0x0000000106511b1f: mov    (%rdi,%rbx,1),%rax
  0x0000000106511b23: lea    0x1(%rax),%rax
  0x0000000106511b27: mov    %rax,(%rdi,%rbx,1)
  0x0000000106511b2b: jl     0x0000000106511d61  ;*ifge
                                                ; - java.lang.String::<init>@5 (line 191)

  0x0000000106511b31: cmp    $0x0,%r8d
  0x0000000106511b35: movabs $0x11a4921b8,%rdi  ;   {metadata(method data for {method} {0x000000011a2a0238} '<init>' '([CII)V' in 'java/lang/String')}
  0x0000000106511b3f: movabs $0x148,%rbx
  0x0000000106511b49: jg     0x0000000106511b59
  0x0000000106511b4f: movabs $0x158,%rbx
  0x0000000106511b59: mov    (%rdi,%rbx,1),%rax
  0x0000000106511b5d: lea    0x1(%rax),%rax
  0x0000000106511b61: mov    %rax,(%rdi,%rbx,1)
  0x0000000106511b65: jg     0x0000000106511be0  ;*ifgt
                                                ; - java.lang.String::<init>@18 (line 194)

  0x0000000106511b6b: cmp    $0x0,%r8d
  0x0000000106511b6f: movabs $0x11a4921b8,%rdi  ;   {metadata(method data for {method} {0x000000011a2a0238} '<init>' '([CII)V' in 'java/lang/String')}
  0x0000000106511b79: movabs $0x168,%rbx
  0x0000000106511b83: jge    0x0000000106511b93
  0x0000000106511b89: movabs $0x178,%rbx
  0x0000000106511b93: mov    (%rdi,%rbx,1),%rax
  0x0000000106511b97: lea    0x1(%rax),%rax
  0x0000000106511b9b: mov    %rax,(%rdi,%rbx,1)
  0x0000000106511b9f: jl     0x0000000106511d09  ;*ifge
                                                ; - java.lang.String::<init>@22 (line 195)

  0x0000000106511ba5: mov    0xc(%rdx),%edi     ;*arraylength
                                                ; - java.lang.String::<init>@36 (line 198)
                                                ; implicit exception: dispatches to 0x0000000106511ddf
  0x0000000106511ba8: cmp    %edi,%ecx
  0x0000000106511baa: movabs $0x11a4921b8,%rdi  ;   {metadata(method data for {method} {0x000000011a2a0238} '<init>' '([CII)V' in 'java/lang/String')}
  0x0000000106511bb4: movabs $0x198,%rbx
  0x0000000106511bbe: jg     0x0000000106511bce
  0x0000000106511bc4: movabs $0x1a8,%rbx
  0x0000000106511bce: mov    (%rdi,%rbx,1),%rax
  0x0000000106511bd2: lea    0x1(%rax),%rax
  0x0000000106511bd6: mov    %rax,(%rdi,%rbx,1)
  0x0000000106511bda: jle    0x0000000106511c72  ;*if_icmpgt
                                                ; - java.lang.String::<init>@37 (line 198)

  0x0000000106511be0: mov    0xc(%rdx),%edi     ;*arraylength
                                                ; - java.lang.String::<init>@52 (line 204)
                                                ; implicit exception: dispatches to 0x0000000106511de4
  0x0000000106511be3: sub    %r8d,%edi[Loaded sun.launcher.LauncherHelper from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]

  0x0000000106511be6: cmp    %edi,%ecx
  0x0000000106511be8: movabs $0x11a4921b8,%rdi  ;   {metadata(method data for {method} {0x000000011a2a0238} '<init>' '([CII)V' in 'java/lang/String')}
  0x0000000106511bf2: movabs $0x1b8,%rbx
  0x0000000106511bfc: jle    0x0000000106511c0c
  0x0000000106511c02: movabs $0x1c8,%rbx
  0x0000000106511c0c: mov    (%rdi,%rbx,1),%rax
  0x0000000106511c10: lea    0x1(%rax),%rax
  0x0000000106511c14: mov    %rax,(%rdi,%rbx,1)
  0x0000000106511c18: jg     0x0000000106511cac  ;*if_icmple
                                                ; - java.lang.String::<init>@55 (line 204)

  0x0000000106511c1e: movabs $0x11a4921b8,%rdi  ;   {metadata(method data for {method} {0x000000011a2a0238} '<init>' '([CII)V' in 'java/lang/String')}
  0x0000000106511c28: addq   $0x1,0x1e8(%rdi)
  0x0000000106511c30: mov    %r8,%rdi
  0x0000000106511c33: add    %ecx,%edi
  0x0000000106511c35: mov    %rdx,%rsi
  0x0000000106511c38: mov    %rcx,%rdx
  0x0000000106511c3b: mov    %rdi,%rcx          ;*invokestatic copyOfRange
                                                ; - java.lang.String::<init>@75 (line 207)

  0x0000000106511c3e: nop
  0x0000000106511c3f: callq  0x000000010644f420  ; OopMap{[56]=Oop [72]=Oop off=516}
                                                ;*invokestatic copyOfRange
                                                ; - java.lang.String::<init>@75 (line 207)
                                                ;   {static_call}
  0x0000000106511c44: mov    0x38(%rsp),%rsi
  0x0000000106511c49: mov    %rax,%r10
  0x0000000106511c4c: shr    $0x3,%r10
  0x0000000106511c50: mov    %r10d,0xc(%rsi)
  0x0000000106511c54: shr    $0x9,%rsi
  0x0000000106511c58: movabs $0x111dc9000,%rdx
  0x0000000106511c62: movb   $0x0,(%rsi,%rdx,1)  ;*putfield value
                                                ; - java.lang.String::<init>@78 (line 207)

  0x0000000106511c66: add    $0x70,%rsp
  0x0000000106511c6a: pop    %rbp
  0x0000000106511c6b: test   %eax,-0x96fb71(%rip)        # 0x0000000105ba2100
                                                ;   {poll_return}
  0x0000000106511c71: retq                      ;*return
                                                ; - java.lang.String::<init>@81 (line 208)

  0x0000000106511c72: movabs $0x79558a678,%rdx  ;   {oop("")}
  0x0000000106511c7c: mov    0xc(%rdx),%edx     ; implicit exception: dispatches to 0x0000000106511de9
  0x0000000106511c7f: shl    $0x3,%rdx          ;*getfield value
                                                ; - java.lang.String::<init>@43 (line 199)

  0x0000000106511c83: mov    %rdx,%r10
  0x0000000106511c86: shr    $0x3,%r10
  0x0000000106511c8a: mov    %r10d,0xc(%rsi)
  0x0000000106511c8e: shr    $0x9,%rsi
  0x0000000106511c92: movabs $0x111dc9000,%rdx
  0x0000000106511c9c: movb   $0x0,(%rsi,%rdx,1)  ;*putfield value
                                                ; - java.lang.String::<init>@46 (line 199)

  0x0000000106511ca0: add    $0x70,%rsp
  0x0000000106511ca4: pop    %rbp
  0x0000000106511ca5: test   %eax,-0x96fbab(%rip)        # 0x0000000105ba2100
                                                ;   {poll_return}
  0x0000000106511cab: retq                      ;*return
                                                ; - java.lang.String::<init>@49 (line 200)

  0x0000000106511cac: nopl   0x0(%rax)
  0x0000000106511cb0: jmpq   0x0000000106511dfd  ;   {no_reloc}
  0x0000000106511cb5: add    %al,(%rax)
  0x0000000106511cb7: add    %al,(%rax)
  0x0000000106511cb9: add    %ch,%cl
  0x0000000106511cbb: add    %rax,(%rax)
  0x0000000106511cbe: add    %cl,-0x75(%rax)    ;*new  ; - java.lang.String::<init>@58 (line 205)

  0x0000000106511cc1: rorb   -0x41(%rax)        ;   {metadata(method data for {method} {0x000000011a2a0238} '<init>' '([CII)V' in 'java/lang/String')}
  0x0000000106511cc4: mov    $0x11a4921,%eax
  0x0000000106511cc9: add    %al,(%rax)
  0x0000000106511ccb: add    %cl,-0x7d(%rax)
  0x0000000106511cce: xchg   %ebx,%eax
  0x0000000106511cd0: add    %eax,(%rax)
  0x0000000106511cd2: add    %al,(%rcx)
  0x0000000106511cd4: mov    0x40(%rsp),%r8d
  0x0000000106511cd9: add    0x44(%rsp),%r8d
  0x0000000106511cde: mov    %r8,%rdx
  0x0000000106511ce1: mov    %rax,%rsi          ;*invokespecial <init>
                                                ; - java.lang.String::<init>@65 (line 205)

  0x0000000106511ce4: mov    %rax,0x50(%rsp)
  0x0000000106511ce9: nop
  0x0000000106511cea: nop
  0x0000000106511ceb: nop
  0x0000000106511cec: nop
  0x0000000106511ced: nop
  0x0000000106511cee: nop
  0x0000000106511cef: callq  0x000000010644f020  ; OopMap{[72]=Oop [56]=Oop [80]=Oop off=692}
                                                ;*invokespecial <init>
                                                ; - java.lang.String::<init>@65 (line 205)
                                                ;   {optimized virtual_call}
  0x0000000106511cf4: mov    0x50(%rsp),%rax    ; OopMap{[72]=Oop [56]=Oop rax=Oop off=697}
                                                ;*athrow
                                                ; - java.lang.String::<init>@68 (line 205)

  0x0000000106511cf9: movabs $0x106511cf9,%rdx  ;   {section_word}
  0x0000000106511d03: callq  0x0000000106474fa0  ;   {runtime_call}
  0x0000000106511d08: nop                       ;*athrow
                                                ; - java.lang.String::<init>@68 (line 205)

  0x0000000106511d09: nopl   0x0(%rax)
  0x0000000106511d10: jmpq   0x0000000106511e23  ;   {no_reloc}
  0x0000000106511d15: add    %al,(%rax)
  0x0000000106511d17: add    %al,(%rax)
  0x0000000106511d19: add    %ch,%cl
  0x0000000106511d1b: (bad)
  0x0000000106511d1c: add    %eax,(%rax)
  0x0000000106511d1e: add    %cl,-0x75(%rax)    ;*new  ; - java.lang.String::<init>@25 (line 196)

  0x0000000106511d21: rorb   -0x42(%rax)        ;   {metadata(method data for {method} {0x000000011a2a0238} '<init>' '([CII)V' in 'java/lang/String')}
  0x0000000106511d24: mov    $0x11a4921,%eax
  0x0000000106511d29: add    %al,(%rax)
  0x0000000106511d2b: add    %cl,-0x7d(%rax)
  0x0000000106511d2e: xchg   %cl,0x1000001(%rax)
  0x0000000106511d34: mov    0x40(%rsp),%edx
  0x0000000106511d38: mov    %rax,%rsi          ;*invokespecial <init>
                                                ; - java.lang.String::<init>@30 (line 196)

  0x0000000106511d3b: mov    %rax,0x58(%rsp)
  0x0000000106511d40: nop
  0x0000000106511d41: nop
  0x0000000106511d42: nop
  0x0000000106511d43: nop
  0x0000000106511d44: nop
  0x0000000106511d45: nop
  0x0000000106511d46: nop
  0x0000000106511d47: callq  0x000000010644f020  ; OopMap{[56]=Oop [72]=Oop [88]=Oop off=780}
                                                ;*invokespecial <init>
                                                ; - java.lang.String::<init>@30 (line 196)
                                                ;   {optimized virtual_call}
  0x0000000106511d4c: mov    0x58(%rsp),%rax    ; OopMap{[56]=Oop [72]=Oop rax=Oop off=785}
                                                ;*athrow
                                                ; - java.lang.String::<init>@33 (line 196)

  0x0000000106511d51: movabs $0x106511d51,%rdx  ;   {section_word}
  0x0000000106511d5b: callq  0x0000000106474fa0  ;   {runtime_call}
  0x0000000106511d60: nop                       ;*athrow
                                                ; - java.lang.String::<init>@33 (line 196)

  0x0000000106511d61: nopl   0x0(%rax)
  0x0000000106511d68: jmpq   0x0000000106511e49  ;   {no_reloc}
  0x0000000106511d6d: add    %al,(%rax)
  0x0000000106511d6f: add    %al,(%rax)
  0x0000000106511d71: add    %ch,%cl
  0x0000000106511d73: faddl  (%rax)
  0x0000000106511d75: add    %al,(%rax)         ;*new  ; - java.lang.String::<init>@8 (line 192)

  0x0000000106511d77: mov    %rax,%rdx
  0x0000000106511d7a: movabs $0x11a4921b8,%rbx  ;   {metadata(method data for {method} {0x000000011a2a0238} '<init>' '([CII)V' in 'java/lang/String')}
  0x0000000106511d84: addq   $0x1,0x138(%rbx)
  0x0000000106511d8c: mov    %rcx,%rdx
  0x0000000106511d8f: mov    %rax,%rsi          ;*invokespecial <init>
                                                ; - java.lang.String::<init>@13 (line 192)

  0x0000000106511d92: mov    %rax,0x60(%rsp)
  0x0000000106511d97: callq  0x000000010644f020  ; OopMap{[56]=Oop [96]=Oop [72]=Oop off=860}
                                                ;*invokespecial <init>
                                                ; - java.lang.String::<init>@13 (line 192)
                                                ;   {optimized virtual_call}
  0x0000000106511d9c: mov    0x60(%rsp),%rax    ; OopMap{[56]=Oop [72]=Oop rax=Oop off=865}
                                                ;*athrow
                                                ; - java.lang.String::<init>@16 (line 192)

  0x0000000106511da1: movabs $0x106511da1,%rdx  ;   {section_word}
  0x0000000106511dab: callq  0x0000000106474fa0  ;   {runtime_call}
  0x0000000106511db0: nop
  0x0000000106511db1: mov    %rdi,0x8(%rsp)
  0x0000000106511db6: movq   $0xffffffffffffffff,(%rsp)
  0x0000000106511dbe: callq  0x0000000106507020  ; OopMap{rsi=Oop [56]=Oop rdx=Oop [72]=Oop off=899}
                                                ;*synchronization entry
                                                ; - java.lang.String::<init>@-1 (line 190)
                                                ;   {runtime_call}
  0x0000000106511dc3: jmpq   0x0000000106511ab1
  0x0000000106511dc8: mov    %rdi,0x8(%rsp)
  0x0000000106511dcd: movq   $0xffffffffffffffff,(%rsp)
  0x0000000106511dd5: callq  0x0000000106507020  ; OopMap{rsi=Oop [56]=Oop rdx=Oop [72]=Oop off=922}
                                                ;*synchronization entry
                                                ; - java.lang.Object::<init>@-1 (line 37)
                                                ; - java.lang.String::<init>@1 (line 190)
                                                ;   {runtime_call}
  0x0000000106511dda: jmpq   0x0000000106511af8
  0x0000000106511ddf: callq  0x0000000106476b40  ; OopMap{rsi=Oop [56]=Oop rdx=Oop [72]=Oop off=932}
                                                ;*arraylength
                                                ; - java.lang.String::<init>@36 (line 198)
                                                ;   {runtime_call}
  0x0000000106511de4: callq  0x0000000106476b40  ; OopMap{rsi=Oop [56]=Oop rdx=Oop [72]=Oop off=937}
                                                ;*arraylength
                                                ; - java.lang.String::<init>@52 (line 204)
                                                ;   {runtime_call}
  0x0000000106511de9: callq  0x0000000106476b40  ; OopMap{[72]=Oop rsi=Oop [56]=Oop off=942}
                                                ;*getfield value
                                                ; - java.lang.String::<init>@43 (line 199)
                                                ;   {runtime_call}
  0x0000000106511dee: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x0000000106511df8: mov    $0xa050f00,%eax
  0x0000000106511dfd: callq  0x0000000106506020  ; OopMap{[56]=Oop [72]=Oop off=962}
                                                ;*new  ; - java.lang.String::<init>@58 (line 205)
                                                ;   {runtime_call}
  0x0000000106511e02: jmpq   0x0000000106511cb0
  0x0000000106511e07: mov    %rdx,%rdx
  0x0000000106511e0a: callq  0x0000000106476620  ; OopMap{[56]=Oop [72]=Oop off=975}
                                                ;*new  ; - java.lang.String::<init>@58 (line 205)
                                                ;   {runtime_call}
  0x0000000106511e0f: jmpq   0x0000000106511cbf
  0x0000000106511e14: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x0000000106511e1e: mov    $0xa050f00,%eax
  0x0000000106511e23: callq  0x0000000106506020  ; OopMap{[56]=Oop [72]=Oop off=1000}
                                                ;*new  ; - java.lang.String::<init>@25 (line 196)
                                                ;   {runtime_call}
  0x0000000106511e28: jmpq   0x0000000106511d10
  0x0000000106511e2d: mov    %rdx,%rdx
  0x0000000106511e30: callq  0x0000000106476620  ; OopMap{[56]=Oop [72]=Oop off=1013}
                                                ;*new  ; - java.lang.String::<init>@25 (line 196)
                                                ;   {runtime_call}
  0x0000000106511e35: jmpq   0x0000000106511d1f
  0x0000000106511e3a: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x0000000106511e44: mov    $0xa050f00,%eax
  0x0000000106511e49: callq  0x0000000106506020  ; OopMap{[56]=Oop [72]=Oop off=1038}
                                                ;*new  ; - java.lang.String::<init>@8 (line 192)
                                                ;   {runtime_call}
  0x0000000106511e4e: jmpq   0x0000000106511d68
  0x0000000106511e53: mov    %rdx,%rdx
  0x0000000106511e56: callq  0x0000000106476620  ; OopMap{[56]=Oop [72]=Oop off=1051}
                                                ;*new  ; - java.lang.String::<init>@8 (line 192)
                                                ;   {runtime_call}
  0x0000000106511e5b: jmpq   0x0000000106511d77
  0x0000000106511e60: nop
  0x0000000106511e61: nop
  0x0000000106511e62: mov    0x2a8(%r15),%rax
  0x0000000106511e69: movabs $0x0,%r10
  0x0000000106511e73: mov    %r10,0x2a8(%r15)
  0x0000000106511e7a: movabs $0x0,%r10
  0x0000000106511e84: mov    %r10,0x2b0(%r15)
  0x0000000106511e8b: add    $0x70,%rsp
  0x0000000106511e8f: pop    %rbp
  0x0000000106511e90: jmpq   0x00000001064776a0  ;   {runtime_call}
  0x0000000106511e95: hlt
  0x0000000106511e96: hlt
  0x0000000106511e97: hlt
  0x0000000106511e98: hlt
  0x0000000106511e99: hlt
  0x0000000106511e9a: hlt
  0x0000000106511e9b: hlt
  0x0000000106511e9c: hlt
  0x0000000106511e9d: hlt
  0x0000000106511e9e: hlt
  0x0000000106511e9f: hlt
[Stub Code]
  0x0000000106511ea0: nop                       ;   {no_reloc}
  0x0000000106511ea1: nop
  0x0000000106511ea2: nop
  0x0000000106511ea3: nop
  0x0000000106511ea4: nop
  0x0000000106511ea5: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000106511eaf: jmpq   0x0000000106511eaf  ;   {runtime_call}
  0x0000000106511eb4: nop
  0x0000000106511eb5: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000106511ebf: jmpq   0x0000000106511ebf  ;   {runtime_call}
  0x0000000106511ec4: nop
  0x0000000106511ec5: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000106511ecf: jmpq   0x0000000106511ecf  ;   {runtime_call}
  0x0000000106511ed4: nop
  0x0000000106511ed5: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000106511edf: jmpq   0x0000000106511edf  ;   {runtime_call}
[Exception Handler]
  0x0000000106511ee4: callq  0x00000001065049a0  ;   {runtime_call}
  0x0000000106511ee9: mov    %rsp,-0x28(%rsp)
  0x0000000106511eee: sub    $0x80,%rsp
  0x0000000106511ef5: mov    %rax,0x78(%rsp)
  0x0000000106511efa: mov    %rcx,0x70(%rsp)
  0x0000000106511eff: mov    %rdx,0x68(%rsp)
  0x0000000106511f04: mov    %rbx,0x60(%rsp)
  0x0000000106511f09: mov    %rbp,0x50(%rsp)
  0x0000000106511f0e: mov    %rsi,0x48(%rsp)
  0x0000000106511f13: mov    %rdi,0x40(%rsp)
  0x0000000106511f18: mov    %r8,0x38(%rsp)
  0x0000000106511f1d: mov    %r9,0x30(%rsp)
  0x0000000106511f22: mov    %r10,0x28(%rsp)
  0x0000000106511f27: mov    %r11,0x20(%rsp)
  0x0000000106511f2c: mov    %r12,0x18(%rsp)
  0x0000000106511f31: mov    %r13,0x10(%rsp)
  0x0000000106511f36: mov    %r14,0x8(%rsp)
  0x0000000106511f3b: mov    %r15,(%rsp)
  0x0000000106511f3f: movabs $0x105194e90,%rdi  ;   {external_word}
  0x0000000106511f49: movabs $0x106511ee9,%rsi  ;   {internal_word}
  0x0000000106511f53: mov    %rsp,%rdx
  0x0000000106511f56: and    $0xfffffffffffffff0,%rsp
  0x0000000106511f5a: callq  0x0000000104fc0196  ;   {runtime_call}
  0x0000000106511f5f: hlt
[Deopt Handler Code]
  0x0000000106511f60: movabs $0x106511f60,%r10  ;   {section_word}
  0x0000000106511f6a: push   %r10
  0x0000000106511f6c: jmpq   0x00000001064503c0  ;   {runtime_call}
  0x0000000106511f71: hlt
  0x0000000106511f72: hlt
  0x0000000106511f73: hlt
  0x0000000106511f74: hlt
  0x0000000106511f75: hlt
  0x0000000106511f76: hlt
  0x0000000106511f77: hlt
[Loaded java.net.URLClassLoader$1 from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
Decoding compiled method 0x00000001065127d0:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000000011a3bb4f8} 'copyOfRange' '([CII)[C' in 'java/util/Arrays'
  # parm0:    rsi:rsi   = '[C'
  # parm1:    rdx       = int
  # parm2:    rcx       = int
  #           [sp+0xc0]  (sp of caller)
  0x0000000106512a00: mov    %eax,-0x14000(%rsp)
  0x0000000106512a07: push   %rbp
  0x0000000106512a08: sub    $0xb0,%rsp
  0x0000000106512a0f: mov    %rsi,0x88(%rsp)
  0x0000000106512a17: mov    %edx,0x78(%rsp)
  0x0000000106512a1b: mov    %ecx,0x7c(%rsp)
  0x0000000106512a1f: movabs $0x11a492528,%rbx  ;   {metadata(method data for {method} {0x000000011a3bb4f8} 'copyOfRange' '([CII)[C' in 'java/util/Arrays')}
  0x0000000106512a29: mov    0xdc(%rbx),%edi
  0x0000000106512a2f: add    $0x8,%edi
  0x0000000106512a32: mov    %edi,0xdc(%rbx)
  0x0000000106512a38: movabs $0x11a3bb4f8,%rbx  ;   {metadata({method} {0x000000011a3bb4f8} 'copyOfRange' '([CII)[C' in 'java/util/Arrays')}
  0x0000000106512a42: and    $0x1ff8,%edi
  0x0000000106512a48: cmp    $0x0,%edi
  0x0000000106512a4b: je     0x00000001065132d4  ;*iload_2
                                                ; - java.util.Arrays::copyOfRange@0 (line 3661)

  0x0000000106512a51: mov    %rcx,%r11
  0x0000000106512a54: sub    %edx,%r11d
  0x0000000106512a57: mov    %r11d,0x80(%rsp)
  0x0000000106512a5f: cmp    $0x0,%r11d
  0x0000000106512a63: movabs $0x11a492528,%rbx  ;   {metadata(method data for {method} {0x000000011a3bb4f8} 'copyOfRange' '([CII)[C' in 'java/util/Arrays')}
  0x0000000106512a6d: movabs $0x108,%rdi
  0x0000000106512a77: jge    0x0000000106512a87
  0x0000000106512a7d: movabs $0x118,%rdi
  0x0000000106512a87: mov    (%rbx,%rdi,1),%rax
  0x0000000106512a8b: lea    0x1(%rax),%rax
  0x0000000106512a8f: mov    %rax,(%rbx,%rdi,1)
  0x0000000106512a93: jl     0x0000000106512c5c  ;*ifge
                                                ; - java.util.Arrays::copyOfRange@5 (line 3662)

  0x0000000106512a99: mov    %r11,%rbx
  0x0000000106512a9c: mov    %rdx,%r13
  0x0000000106512a9f: movabs $0x7c0000208,%rdx  ;   {metadata({type array char})}
  0x0000000106512aa9: mov    %rsi,%r14
  0x0000000106512aac: movslq %ebx,%rbx
  0x0000000106512aaf: mov    %rbx,%rdi
  0x0000000106512ab2: cmp    $0xffffff,%rbx
  0x0000000106512ab9: ja     0x00000001065132eb
  0x0000000106512abf: movabs $0x17,%rsi
  0x0000000106512ac9: lea    (%rsi,%rbx,2),%rsi
  0x0000000106512acd: and    $0xfffffffffffffff8,%rsi
  0x0000000106512ad1: mov    0x60(%r15),%rax
  0x0000000106512ad5: lea    (%rax,%rsi,1),%rsi
  0x0000000106512ad9: cmp    0x70(%r15),%rsi
  0x0000000106512add: ja     0x00000001065132eb
  0x0000000106512ae3: mov    %rsi,0x60(%r15)
  0x0000000106512ae7: sub    %rax,%rsi
  0x0000000106512aea: movq   $0x1,(%rax)
  0x0000000106512af1: mov    %rdx[Loaded sun.net.util.URLUtil from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
,%rcx
  0x0000000106512af4: shr    $0x3,%rcx
  0x0000000106512af8: mov    %ecx,0x8(%rax)
  0x0000000106512afb: mov    %ebx,0xc(%rax)
  0x0000000106512afe: sub    $0x10,%rsi
  0x0000000106512b02: je     0x0000000106512b19
  0x0000000106512b08: xor    %rbx,%rbx
  0x0000000106512b0b: shr    $0x3,%rsi
  0x0000000106512b0f: mov    %rbx,0x8(%rax,%rsi,8)
  0x0000000106512b14: dec    %rsi
  0x0000000106512b17: jne    0x0000000106512b0f  ;*newarray
                                                ; - java.util.Arrays::copyOfRange@40 (line 3664)

  0x0000000106512b19: mov    0xc(%r14),%esi     ;*arraylength
                                                ; - java.util.Arrays::copyOfRange@50 (line 3665)
                                                ; implicit exception: dispatches to 0x00000001065132f5
  0x0000000106512b1d: sub    %r13d,%esi
  0x0000000106512b20: movabs $0x11a492528,%rdx  ;   {metadata(method data for {method} {0x000000011a3bb4f8} 'copyOfRange' '([CII)[C' in 'java/util/Arrays')}
  0x0000000106512b2a: addq   $0x1,0x208(%rdx)
  0x0000000106512b32: movabs $0x11a46bfa0,%rdx  ;   {metadata(method data for {method} {0x000000011a395fb8} 'min' '(II)I' in 'java/lang/Math')}
  0x0000000106512b3c: mov    0xdc(%rdx),%ecx
  0x0000000106512b42: add    $0x8,%ecx
  0x0000000106512b45: mov    %ecx,0xdc(%rdx)
  0x0000000106512b4b: movabs $0x11a395fb8,%rdx  ;   {metadata({method} {0x000000011a395fb8} 'min' '(II)I' in 'java/lang/Math')}
  0x0000000106512b55: and    $0x7ffff8,%ecx
  0x0000000106512b5b: cmp    $0x0,%ecx
  0x0000000106512b5e: je     0x00000001065132fa
  0x0000000106512b64: cmp    %r11d,%esi
  0x0000000106512b67: movabs $0x11a46bfa0,%rdx  ;   {metadata(method data for {method} {0x000000011a395fb8} 'min' '(II)I' in 'java/lang/Math')}
  0x0000000106512b71: movabs $0x108,%rcx
  0x0000000106512b7b: jg     0x0000000106512b8b
  0x0000000106512b81: movabs $0x118,%rcx
  0x0000000106512b8b: mov    (%rdx,%rcx,1),%r8
  0x0000000106512b8f: lea    0x1(%r8),%r8
  0x0000000106512b93: mov    %r8,(%rdx,%rcx,1)
  0x0000000106512b97: jg     0x0000000106512bb5  ;*if_icmpgt
                                                ; - java.lang.Math::min@2 (line 1336)
                                                ; - java.util.Arrays::copyOfRange@54 (line 3666)

  0x0000000106512b9d: movabs $0x11a46bfa0,%rdx  ;   {metadata(method data for {method} {0x000000011a395fb8} 'min' '(II)I' in 'java/lang/Math')}
  0x0000000106512ba7: incl   0x128(%rdx)
  0x0000000106512bad: mov    %rsi,%rdi
  0x0000000106512bb0: jmpq   0x0000000106512bb8  ;*goto
                                                ; - java.lang.Math::min@6 (line 1336)
                                                ; - java.util.Arrays::copyOfRange@54 (line 3666)

  0x0000000106512bb5: mov    %r11,%rdi          ;*ireturn
                                                ; - java.lang.Math::min@10 (line 1336)
                                                ; - java.util.Arrays::copyOfRange@54 (line 3666)

  0x0000000106512bb8: movabs $0x11a492528,%rsi  ;   {metadata(method data for {method} {0x000000011a3bb4f8} 'copyOfRange' '([CII)[C' in 'java/util/Arrays')}
  0x0000000106512bc2: addq   $0x1,0x218(%rsi)
  0x0000000106512bca: mov    %r14,%rsi
  0x0000000106512bcd: mov    %r13,%rdx
  0x0000000106512bd0: mov    %rax,%rcx
  0x0000000106512bd3: mov    $0x0,%r8d
  0x0000000106512bd9: mov    %rdi,%r9
  0x0000000106512bdc: mov    %rax,0x70(%rsp)
  0x0000000106512be1: test   %edx,%edx
  0x0000000106512be3: jl     0x0000000106513311
  0x0000000106512be9: lea    (%rdx,%r9,1),%rdi
  0x0000000106512bed: cmp    0xc(%rsi),%edi
  0x0000000106512bf0: ja     0x0000000106513311
  0x0000000106512bf6: lea    (%r8,%r9,1),%rdi
  0x0000000106512bfa: cmp    0xc(%rcx),%edi
  0x0000000106512bfd: ja     0x0000000106513311
  0x0000000106512c03: test   %r9d,%r9d
  0x0000000106512c06: jl     0x0000000106513311
  0x0000000106512c0c: je     0x0000000106512c48
  0x0000000106512c12: movslq %edx,%rdx
  0x0000000106512c15: movslq %r8d,%r8
  0x0000000106512c18: lea    0x10(%rsi,%rdx,2),%rdi
  0x0000000106512c1d: lea    0x10(%rcx,%r8,2),%rsi
  0x0000000106512c22: mov    %r9,%rdx
  0x0000000106512c25: test   $0xf,%esp
  0x0000000106512c2b: je     0x0000000106512c43
  0x0000000106512c31: sub    $0x8,%rsp
  0x0000000106512c35: callq  Stub::jshort_disjoint_arraycopy
                                                ;   {runtime_call}
  0x0000000106512c3a: add    $0x8,%rsp
  0x0000000106512c3e: jmpq   0x0000000106512c48
  0x0000000106512c43: callq  Stub::jshort_disjoint_arraycopy
                                                ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOfRange@57 (line 3665)
                                                ;   {runtime_call}
  0x0000000106512c48: mov    0x70(%rsp),%rax
  0x0000000106512c4d: add    $0xb0,%rsp
  0x0000000106512c54: pop    %rbp
  0x0000000106512c55: test   %eax,-0x970b5b(%rip)        # 0x0000000105ba2100
                                                ;   {poll_return}
  0x0000000106512c5b: retq                      ;*areturn
                                                ; - java.util.Arrays::copyOfRange@62 (line 3667)

  0x0000000106512c5c: mov    %rdx,%r8
  0x0000000106512c5f: nop
  0x0000000106512c60: jmpq   0x0000000106513330  ;   {no_reloc}
  0x0000000106512c65: add    %al,(%rax)
  0x0000000106512c67: add    %al,(%rax)
  0x0000000106512c69: add    %cl,-0x75(%rcx)
  0x0000000106512c6c: rex.RXB (bad)
  0x0000000106512c6e: lea    0x20(%rax),%rdi
  0x0000000106512c72: cmp    0x70(%r15),%rdi
  0x0000000106512c76: ja     0x000000010651333a
  0x0000000106512c7c: mov    %rdi,0x60(%r15)
  0x0000000106512c80: mov    0xa8(%rdx),%rcx
  0x0000000106512c87: mov    %rcx,(%rax)
  0x0000000106512c8a: mov    %rdx,%rcx
  0x0000000106512c8d: shr    $0x3,%rcx
  0x0000000106512c91: mov    %ecx,0x8(%rax)
  0x0000000106512c94: xor    %rcx,%rcx
  0x0000000106512c97: mov    %ecx,0xc(%rax)
  0x0000000106512c9a: xor    %rcx,%rcx
  0x0000000106512c9d: mov    %rcx,0x10(%rax)
  0x0000000106512ca1: mov    %rcx,0x18(%rax)    ;*new  ; - java.util.Arrays::copyOfRange@8 (line 3663)

  0x0000000106512ca5: data32 xchg %ax,%ax
  0x0000000106512ca8: jmpq   0x0000000106513356  ;   {no_reloc}
  0x0000000106512cad: add    %al,(%rax)
  0x0000000106512caf: add    %al,(%rax)
  0x0000000106512cb1: add    %cl,-0x77(%rax)
  0x0000000106512cb4: test   %ah,(%rax,%rbx,4)
  0x0000000106512cb7: add    %al,(%rax)
  0x0000000106512cb9: add    %cl,-0x75(%rcx)
  0x0000000106512cbc: rex.RXB (bad)
  0x0000000106512cbe: lea    0x18(%rax),%rdi
  0x0000000106512cc2: cmp    0x70(%r15),%rdi
  0x0000000106512cc6: ja     0x0000000106513360
  0x0000000106512ccc: mov    %rdi,0x60(%r15)
  0x0000000106512cd0: mov    0xa8(%rdx),%rcx
  0x0000000106512cd7: mov    %rcx,(%rax)
  0x0000000106512cda: mov    %rdx,%rcx
  0x0000000106512cdd: shr    $0x3,%rcx
  0x0000000106512ce1: mov    %ecx,0x8(%rax)
  0x0000000106512ce4: xor    %rcx,%rcx
  0x0000000106512ce7: mov    %ecx,0xc(%rax)
  0x0000000106512cea: xor    %rcx,%rcx
  0x0000000106512ced: mov    %rcx,0x10(%rax)    ;*new  ; - java.util.Arrays::copyOfRange@12 (line 3663)

  0x0000000106512cf1: mov    %rax,0x90(%rsp)
  0x0000000106512cf9: mov    %rax,%rbx
  0x0000000106512cfc: movabs $0x11a492528,%rdx  ;   {metadata(method data for {method} {0x000000011a3bb4f8} 'copyOfRange' '([CII)[C' in 'java/util/Arrays')}
  0x0000000106512d06: addq   $0x1,0x128(%rdx)
  0x0000000106512d0e: movabs $0x11a496540,%rbx  ;   {metadata(method data for {method} {0x000000011a316ea8} '<init>' '()V' in 'java/lang/StringBuilder')}
  0x0000000106512d18: mov    0xdc(%rbx),%edx
  0x0000000106512d1e: add    $0x8,%edx
  0x0000000106512d21: mov    %edx,0xdc(%rbx)
  0x0000000106512d27: movabs $0x11a316ea8,%rbx  ;   {metadata({method} {0x000000011a316ea8} '<init>' '()V' in 'java/lang/StringBuilder')}
  0x0000000106512d31: and    $0x7ffff8,%edx
  0x0000000106512d37: cmp    $0x0,%edx
  0x0000000106512d3a: je     0x000000010651336d
  0x0000000106512d40: mov    %rax,%rbx
  0x0000000106512d43: movabs $0x11a496540,%rdx  ;   {metadata(method data for {method} {0x000000011a316ea8} '<init>' '()V' in 'java/lang/StringBuilder')}
  0x0000000106512d4d: addq   $0x1,0x108(%rdx)
  0x0000000106512d55: movabs $0x11a496670,%rbx  ;   {metadata(method data for {method} {0x000000011a312f60} '<init>' '(I)V' in 'java/lang/AbstractStringBuilder')}
  0x0000000106512d5f: mov    0xdc(%rbx),%edx
  0x0000000106512d65: add    $0x8,%edx
  0x0000000106512d68: mov    %edx,0xdc(%rbx)
  0x0000000106512d6e: movabs $0x11a312f60,%rbx  ;   {metadata({method} {0x000000011a312f60} '<init>' '(I)V' in 'java/lang/AbstractStringBuilder')}
  0x0000000106512d78: and    $0x7ffff8,%edx
  0x0000000106512d7e: cmp    $0x0,%edx
  0x0000000106512d81: je     0x0000000106513384
  0x0000000106512d87: mov    %rax,%rbx
  0x0000000106512d8a: movabs $0x11a496670,%rdx  ;   {metadata(method data for {method} {0x000000011a312f60} '<init>' '(I)V' in 'java/lang/AbstractStringBuilder')}
  0x0000000106512d94: addq   $0x1,0x108(%rdx)
  0x0000000106512d9c: movabs $0x11a418460,%rbx  ;   {metadata(method data for {method} {0x000000011a29d480} '<init>' '()V' in 'java/lang/Object')}
  0x0000000106512da6: mov    0xdc(%rbx),%edx
  0x0000000106512dac: add    $0x8,%edx
  0x0000000106512daf: mov    %edx,0xdc(%rbx)
  0x0000000106512db5: movabs $0x11a29d480,%rbx  ;   {metadata({method} {0x000000011a29d480} '<init>' '()V' in 'java/lang/Object')}
  0x0000000106512dbf: and    $0x7ffff8,%edx
  0x0000000106512dc5: cmp    $0x0,%edx
  0x0000000106512dc8: je     0x000000010651339b
  0x0000000106512dce: mov    $0x10,%ebx
  0x0000000106512dd3: movabs $0x7c0000208,%rdx  ;   {metadata({type array char})}
  0x0000000106512ddd: mov    %rax,%r9
  0x0000000106512de0: movslq %ebx,%rbx
  0x0000000106512de3: mov    %rbx,%rdi
  0x0000000106512de6: cmp    $0xffffff,%rbx
  0x0000000106512ded: ja     0x00000001065133b2
  0x0000000106512df3: movabs $0x17,%rsi
  0x0000000106512dfd: lea    (%rsi,%rbx,2),%rsi
  0x0000000106512e01: and    $0xfffffffffffffff8,%rsi
  0x0000000106512e05: mov    0x60(%r15),%rax
  0x0000000106512e09: lea    (%rax,%rsi,1),%rsi
  0x0000000106512e0d: cmp    0x70(%r15),%rsi
  0x0000000106512e11: ja     0x00000001065133b2
  0x0000000106512e17: mov    %rsi,0x60(%r15)
  0x0000000106512e1b: sub    %rax,%rsi
  0x0000000106512e1e: movq   $0x1,(%rax)
  0x0000000106512e25: mov    %rdx,%rcx
  0x0000000106512e28: shr    $0x3,%rcx
  0x0000000106512e2c: mov    %ecx,0x8(%rax)
  0x0000000106512e2f: mov    %ebx,0xc(%rax)
  0x0000000106512e32: sub    $0x10,%rsi
  0x0000000106512e36: je     0x0000000106512e4d
  0x0000000106512e3c: xor    %rbx,%rbx
  0x0000000106512e3f: shr    $0x3,%rsi
  0x0000000106512e43: mov    %rbx,0x8(%rax,%rsi,8)
  0x0000000106512e48: dec    %rsi
  0x0000000106512e4b: jne    0x0000000106512e43  ;*newarray
                                                ; - java.lang.AbstractStringBuilder::<init>@6 (line 68)
                                                ; - java.lang.StringBuilder::<init>@3 (line 89)
                                                ; - java.util.Arrays::copyOfRange@16 (line 3663)

  0x0000000106512e4d: mov    %rax,%r10
  0x0000000106512e50: shr    $0x3,%r10
  0x0000000106512e54: mov    %r10d,0x10(%r9)
  0x0000000106512e58: mov    %r9,%rax
  0x0000000106512e5b: shr    $0x9,%rax
  0x0000000106512e5f: movabs $0x111dc9000,%rdx
  0x0000000106512e69: movb   $0x0,(%rax,%rdx,1)  ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::<init>@8 (line 68)
                                                ; - java.lang.StringBuilder::<init>@3 (line 89)
                                                ; - java.util.Arrays::copyOfRange@16 (line 3663)

  0x0000000106512e6d: mov    %r9,%rax
  0x0000000106512e70: movabs $0x11a492528,%rdx  ;   {metadata(method data for {method} {0x000000011a3bb4f8} 'copyOfRange' '([CII)[C' in 'java/util/Arrays')}
  0x0000000106512e7a: mov    0x8(%rax),%eax
  0x0000000106512e7d: shl    $0x3,%rax
  0x0000000106512e81: cmp    0x140(%rdx),%rax
  0x0000000106512e88: jne    0x0000000106512e97
  0x0000000106512e8a: addq   $0x1,0x148(%rdx)
  0x0000000106512e92: jmpq   0x0000000106512efd
  0x0000000106512e97: cmp    0x150(%rdx),%rax
  0x0000000106512e9e: jne    0x0000000106512ead
  0x0000000106512ea0: addq   $0x1,0x158(%rdx)
  0x0000000106512ea8: jmpq   0x0000000106512efd
  0x0000000106512ead: cmpq   $0x0,0x140(%rdx)
  0x0000000106512eb8: jne    0x0000000106512ed1
  0x0000000106512eba: mov    %rax,0x140(%rdx)
  0x0000000106512ec1: movq   $0x1,0x148(%rdx)
  0x0000000106512ecc: jmpq   0x0000000106512efd
  0x0000000106512ed1: cmpq   $0x0,0x150(%rdx)
  0x0000000106512edc: jne    0x0000000106512ef5
  0x0000000106512ede: mov    %rax,0x150(%rdx)
  0x0000000106512ee5: movq   $0x1,0x158(%rdx)
  0x0000000106512ef0: jmpq   0x0000000106512efd
  0x0000000106512ef5: addq   $0x1,0x138(%rdx)
  0x0000000106512efd: movabs $0x11a4967a8,%rdx  ;   {metadata(method data for {method} {0x000000011a317680} 'append' '(I)Ljava/lang/StringBuilder;' in 'java/lang/StringBuilder')}
  0x0000000106512f07: mov    0xdc(%rdx),%esi
  0x0000000106512f0d: add    $0x8,%esi
  0x0000000106512f10: mov    %esi,0xdc(%rdx)
  0x0000000106512f16: movabs $0x11a317680,%rdx  ;   {metadata({method} {0x000000011a317680} 'append' '(I)Ljava/lang/StringBuilder;' in 'java/lang/StringBuilder')}
  0x0000000106512f20: and    $0x7ffff8,%esi
  0x0000000106512f26: cmp    $0x0,%esi
  0x0000000106512f29: je     0x00000001065133bc
  0x0000000106512f2f: mov    %r9,%rax
  0x0000000106512f32: movabs $0x11a4967a8,%rdx  ;   {metadata(method data for {method} {0x000000011a317680} 'append' '(I)Ljava/lang/StringBuilder;' in 'java/lang/StringBuilder')}
  0x0000000106512f3c: addq   $0x1,0x108(%rdx)
  0x0000000106512f44: mov    %r8,%rdx
  0x0000000106512f47: mov    %r9,%rsi           ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 208)
                                                ; - java.util.Arrays::copyOfRange@20 (line 3663)

  0x0000000106512f4a: nop
  0x0000000106512f4b: nop
  0x0000000106512f4c: nop
  0x0000000106512f4d: nop
  0x0000000106512f4e: nop
  0x0000000106512f4f: callq  0x000000010644f020  ; OopMap{[144]=Oop [152]=Oop [136]=Oop off=1364}
                                                ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 208)
                                                ; - java.util.Arrays::copyOfRange@20 (line 3663)
                                                ;   {optimized virtual_call}
  0x0000000106512f54: mov    0x90(%rsp),%rax
  0x0000000106512f5c: movabs $0x11a492528,%rdx  ;   {metadata(method data for {method} {0x000000011a3bb4f8} 'copyOfRange' '([CII)[C' in 'java/util/Arrays')}
  0x0000000106512f66: mov    0x8(%rax),%eax
  0x0000000106512f69: shl    $0x3,%rax
  0x0000000106512f6d: cmp    0x170(%rdx),%rax
  0x0000000106512f74: jne    0x0000000106512f83
  0x0000000106512f76: addq   $0x1,0x178(%rdx)
  0x0000000106512f7e: jmpq   0x0000000106512fe9
  0x0000000106512f83: cmp    0x180(%rdx),%rax
  0x0000000106512f8a: jne    0x0000000106512f99
  0x0000000106512f8c: addq   $0x1,0x188(%rdx)
  0x0000000106512f94: jmpq   0x0000000106512fe9
  0x0000000106512f99: cmpq   $0x0,0x170(%rdx)
  0x0000000106512fa4: jne    0x0000000106512fbd
  0x0000000106512fa6: mov    %rax,0x170(%rdx)
  0x0000000106512fad: movq   $0x1,0x178(%rdx)
  0x0000000106512fb8: jmpq   0x0000000106512fe9
  0x0000000106512fbd: cmpq   $0x0,0x180(%rdx)
  0x0000000106512fc8: jne    0x0000000106512fe1
  0x0000000106512fca: mov    %rax,0x180(%rdx)
  0x0000000106512fd1: movq   $0x1,0x188(%rdx)
  0x0000000106512fdc: jmpq   0x0000000106512fe9
  0x0000000106512fe1: addq   $0x1,0x168(%rdx)
  0x0000000106512fe9: movabs $0x11a496af8,%rdx  ;   {metadata(method data for {method} {0x000000011a3171c0} 'append' '(Ljava/lang/String;)Ljava/lang/StringBuilder;' in 'java/lang/StringBuilder')}
  0x0000000106512ff3: mov    0xdc(%rdx),%esi
  0x0000000106512ff9: add    $0x8,%esi
  0x0000000106512ffc: mov    %esi,0xdc(%rdx)
  0x0000000106513002: movabs $0x11a3171c0,%rdx  ;   {metadata({method} {0x000000011a3171c0} 'append' '(Ljava/lang/String;)Ljava/lang/StringBuilder;' in 'java/lang/StringBuilder')}
  0x000000010651300c: and    $0x7ffff8,%esi
  0x0000000106513012: cmp    $0x0,%esi
  0x0000000106513015: je     0x00000001065133d3
  0x000000010651301b: mov    0x90(%rsp),%rax
  0x0000000106513023: movabs $0x11a496af8,%rdx  ;   {metadata(method data for {method} {0x000000011a3171c0} 'append' '(Ljava/lang/String;)Ljava/lang/StringBuilder;' in 'java/lang/StringBuilder')}
  0x000000010651302d: addq   $0x1,0x108(%rdx)
  0x0000000106513035: movabs $0x7956ccce8,%rdx  ;   {oop(" > ")}
  0x000000010651303f: mov    0x90(%rsp),%rsi    ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - java.util.Arrays::copyOfRange@25 (line 3663)

  0x0000000106513047: callq  0x000000010644f020  ; OopMap{[144]=Oop [152]=Oop [136]=Oop off=1612}
                                                ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - java.util.Arrays::copyOfRange@25 (line 3663)
                                                ;   {optimized virtual_call}
  0x000000010651304c: mov    0x90(%rsp),%rax
  0x0000000106513054: movabs $0x11a492528,%rdx  ;   {metadata(method data for {method} {0x000000011a3bb4f8} 'copyOfRange' '([CII)[C' in 'java/util/Arrays')}
  0x000000010651305e: mov    0x8(%rax),%eax
  0x0000000106513061: shl    $0x3,%rax
  0x0000000106513065: cmp    0x1a0(%rdx),%rax
  0x000000010651306c: jne    0x000000010651307b
  0x000000010651306e: addq   $0x1,0x1a8(%rdx)
  0x0000000106513076: jmpq   0x00000001065130e1
  0x000000010651307b: cmp    0x1b0(%rdx),%rax
  0x0000000106513082: jne    0x0000000106513091
  0x0000000106513084: addq   $0x1,0x1b8(%rdx)
  0x000000010651308c: jmpq   0x00000001065130e1
  0x0000000106513091: cmpq   $0x0,0x1a0(%rdx)
  0x000000010651309c: jne    0x00000001065130b5
  0x000000010651309e: mov    %rax,0x1a0(%rdx)
  0x00000001065130a5: movq   $0x1,0x1a8(%rdx)
  0x00000001065130b0: jmpq   0x00000001065130e1
  0x00000001065130b5: cmpq   $0x0,0x1b0(%rdx)
  0x00000001065130c0: jne    0x00000001065130d9
  0x00000001065130c2: mov    %rax,0x1b0(%rdx)
  0x00000001065130c9: movq   $0x1,0x1b8(%rdx)
  0x00000001065130d4: jmpq   0x00000001065130e1
  0x00000001065130d9: addq   $0x1,0x198(%rdx)
  0x00000001065130e1: movabs $0x11a4967a8,%rdx  ;   {metadata(method data for {method} {0x000000011a317680} 'append' '(I)Ljava/lang/StringBuilder;' in 'java/lang/StringBuilder')}
  0x00000001065130eb: mov    0xdc(%rdx),%esi
  0x00000001065130f1: add    $0x8,%esi
  0x00000001065130f4: mov    %esi,0xdc(%rdx)
  0x00000001065130fa: movabs $0x11a317680,%rdx  ;   {metadata({method} {0x000000011a317680} 'append' '(I)Ljava/lang/StringBuilder;' in 'java/lang/StringBuilder')}
  0x0000000106513104: and    $0x7ffff8,%esi
  0x000000010651310a: cmp    $0x0,%esi
  0x000000010651310d: je     0x00000001065133ea
  0x0000000106513113: mov    0x90(%rsp),%rax
  0x000000010651311b: movabs $0x11a4967a8,%rdx  ;   {metadata(method data for {method} {0x000000011a317680} 'append' '(I)Ljava/lang/StringBuilder;' in 'java/lang/StringBuilder')}
  0x0000000106513125: addq   $0x1,0x108(%rdx)
  0x000000010651312d: mov    0x7c(%rsp),%edx
  0x0000000106513131: mov    0x90(%rsp),%rsi    ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 208)
                                                ; - java.util.Arrays::copyOfRange@29 (line 3663)

  0x0000000106513139: nop
  0x000000010651313a: nop
  0x000000010651313b: nop
  0x000000010651313c: nop
  0x000000010651313d: nop
  0x000000010651313e: nop
  0x000000010651313f: callq  0x000000010644f020  ; OopMap{[144]=Oop [152]=Oop [136]=Oop off=1860}
                                                ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 208)
                                                ; - java.util.Arrays::copyOfRange@29 (line 3663)
                                                ;   {optimized virtual_call}
  0x0000000106513144: mov    0x90(%rsp),%rax
  0x000000010651314c: movabs $0x11a492528,%rdx  ;   {metadata(method data for {method} {0x000000011a3bb4f8} 'copyOfRange' '([CII)[C' in 'java/util/Arrays')}
  0x0000000106513156: mov    0x8(%rax),%eax
  0x0000000106513159: shl    $0x3,%rax
  0x000000010651315d: cmp    0x1d0(%rdx),%rax
  0x0000000106513164: jne    0x0000000106513173
  0x0000000106513166: addq   $0x1,0x1d8(%rdx)
  0x000000010651316e: jmpq   0x00000001065131d9
  0x0000000106513173: cmp    0x1e0(%rdx),%rax
  0x000000010651317a: jne    0x0000000106513189
  0x000000010651317c: addq   $0x1,0x1e8(%rdx)
  0x0000000106513184: jmpq   0x00000001065131d9
  0x0000000106513189: cmpq   $0x0,0x1d0(%rdx)
  0x0000000106513194: jne    0x00000001065131ad
  0x0000000106513196: mov    %rax,0x1d0(%rdx)
  0x000000010651319d: movq   $0x1,0x1d8(%rdx)
  0x00000001065131a8: jmpq   0x00000001065131d9
  0x00000001065131ad: cmpq   $0x0,0x1e0(%rdx)
  0x00000001065131b8: jne    0x00000001065131d1
  0x00000001065131ba: mov    %rax,0x1e0(%rdx)
  0x00000001065131c1: movq   $0x1,0x1e8(%rdx)
  0x00000001065131cc: jmpq   0x00000001065131d9
  0x00000001065131d1: addq   $0x1,0x1c8(%rdx)
  0x00000001065131d9: movabs $0x11a496e20,%rdx  ;   {metadata(method data for {method} {0x000000011a318570} 'toString' '()Ljava/lang/String;' in 'java/lang/StringBuilder')}
  0x00000001065131e3: mov    0xdc(%rdx),%esi
  0x00000001065131e9: add    $0x8,%esi
  0x00000001065131ec: mov    %esi,0xdc(%rdx)
  0x00000001065131f2: movabs $0x11a318570,%rdx  ;   {metadata({method} {0x000000011a318570} 'toString' '()Ljava/lang/String;' in 'java/lang/StringBuilder')}
  0x00000001065131fc: and    $0x7ffff8,%esi
  0x0000000106513202: cmp    $0x0,%esi
  0x0000000106513205: je     0x0000000106513401
  0x000000010651320b: movabs $0x7c00016d0,%rdx  ;   {metadata('java/lang/String')}
  0x0000000106513215: mov    0x60(%r15),%rax
  0x0000000106513219: lea    0x18(%rax),%rdi
  0x000000010651321d: cmp    0x70(%r15),%rdi
  0x0000000106513221: ja     0x0000000106513418
  0x0000000106513227: mov    %rdi,0x60(%r15)
  0x000000010651322b: mov    0xa8(%rdx),%rcx
  0x0000000106513232: mov    %rcx,(%rax)
  0x0000000106513235: mov    %rdx,%rcx
  0x0000000106513238: shr    $0x3,%rcx
  0x000000010651323c: mov    %ecx,0x8(%rax)
  0x000000010651323f: xor    %rcx,%rcx
  0x0000000106513242: mov    %ecx,0xc(%rax)
  0x0000000106513245: xor    %rcx,%rcx
  0x0000000106513248: mov    %rcx,0x10(%rax)    ;*new  ; - java.lang.StringBuilder::toString@0 (line 407)
                                                ; - java.util.Arrays::copyOfRange@32 (line 3663)

  0x000000010651324c: mov    0x90(%rsp),%rdi
  0x0000000106513254: mov    0x10(%rdi),%edx
  0x0000000106513257: shl    $0x3,%rdx          ;*getfield value
                                                ; - java.lang.StringBuilder::toString@5 (line 407)
                                                ; - java.util.Arrays::copyOfRange@32 (line 3663)

  0x000000010651325b: mov    0xc(%rdi),%r8d     ;*getfield count
                                                ; - java.lang.StringBuilder::toString@10 (line 407)
                                                ; - java.util.Arrays::copyOfRange@32 (line 3663)

  0x000000010651325f: mov    %rax,%rcx
  0x0000000106513262: movabs $0x11a496e20,%rsi  ;   {metadata(method data for {method} {0x000000011a318570} 'toString' '()Ljava/lang/String;' in 'java/lang/StringBuilder')}
  0x000000010651326c: addq   $0x1,0x108(%rsi)
  0x0000000106513274: mov    $0x0,%ecx
  0x0000000106513279: mov    %rax,%rsi          ;*invokespecial <init>
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.util.Arrays::copyOfRange@32 (line 3663)

  0x000000010651327c: mov    %rax,0xa0(%rsp)
  0x0000000106513284: nop
  0x0000000106513285: nop
  0x0000000106513286: nop
  0x0000000106513287: callq  0x000000010644f020  ; OopMap{[152]=Oop [136]=Oop [144]=Oop [160]=Oop off=2188}
                                                ;*invokespecial <init>
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.util.Arrays::copyOfRange@32 (line 3663)
                                                ;   {optimized virtual_call}
  0x000000010651328c: mov    0x98(%rsp),%rax
  0x0000000106513294: movabs $0x11a492528,%rdx  ;   {metadata(method data for {method} {0x000000011a3bb4f8} 'copyOfRange' '([CII)[C' in 'java/util/Arrays')}
  0x000000010651329e: addq   $0x1,0x1f8(%rdx)
  0x00000001065132a6: mov    0xa0(%rsp),%rdx
  0x00000001065132ae: mov    0x98(%rsp),%rsi    ;*invokespecial <init>
                                                ; - java.util.Arrays::copyOfRange@35 (line 3663)

  0x00000001065132b6: nop
  0x00000001065132b7: callq  0x000000010644f020  ; OopMap{[152]=Oop [136]=Oop off=2236}
                                                ;*invokespecial <init>
                                                ; - java.util.Arrays::copyOfRange@35 (line 3663)
                                                ;   {optimized virtual_call}
  0x00000001065132bc: mov    0x98(%rsp),%rax    ; OopMap{[136]=Oop rax=Oop off=2244}
                                                ;*athrow
                                                ; - java.util.Arrays::copyOfRange@38 (line 3663)

  0x00000001065132c4: movabs $0x1065132c4,%rdx  ;   {section_word}
  0x00000001065132ce: callq  0x0000000106474fa0  ;   {runtime_call}
  0x00000001065132d3: nop
  0x00000001065132d4: mov    %rbx,0x8(%rsp)
  0x00000001065132d9: movq   $0xffffffffffffffff,(%rsp)
  0x00000001065132e1: callq  0x0000000106507020  ; OopMap{rsi=Oop [136]=Oop off=2278}
                                                ;*synchronization entry
                                                ; - java.util.Arrays::copyOfRange@-1 (line 3661)
                                                ;   {runtime_call}
  0x00000001065132e6: jmpq   0x0000000106512a51
  0x00000001065132eb: callq  0x00000001064758a0  ; OopMap{r14=Oop [136]=Oop off=2288}
                                                ;*newarray
                                                ; - java.util.Arrays::copyOfRange@40 (line 3664)
                                                ;   {runtime_call}
  0x00000001065132f0: jmpq   0x0000000106512b19
  0x00000001065132f5: callq  0x0000000106476b40  ; OopMap{r14=Oop [136]=Oop rax=Oop off=2298}
                                                ;*arraylength
                                                ; - java.util.Arrays::copyOfRange@50 (line 3665)
                                                ;   {runtime_call}
  0x00000001065132fa: mov    %rdx,0x8(%rsp)
  0x00000001065132ff: movq   $0xffffffffffffffff,(%rsp)
  0x0000000106513307: callq  0x0000000106507020  ; OopMap{r14=Oop [136]=Oop rax=Oop off=2316}
                                                ;*synchronization entry
                                                ; - java.lang.Math::min@-1 (line 1336)
                                                ; - java.util.Arrays::copyOfRange@54 (line 3666)
                                                ;   {runtime_call}
  0x000000010651330c: jmpq   0x0000000106512b64
  0x0000000106513311: nop
  0x0000000106513312: nop
  0x0000000106513313: nop
  0x0000000106513314: nop
  0x0000000106513315: nop
  0x0000000106513316: nop
  0x0000000106513317: callq  0x000000010644f420  ; OopMap{[112]=Oop [136]=Oop off=2332}
                                                ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOfRange@57 (line 3665)
                                                ;   {static_call}
  0x000000010651331c: jmpq   0x0000000106512c48
  0x0000000106513321: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x000000010651332b: mov    $0xa050f00,%eax
  0x0000000106513330: callq  0x0000000106506020  ; OopMap{[136]=Oop off=2357}
                                                ;*new  ; - java.util.Arrays::copyOfRange@8 (line 3663)
                                                ;   {runtime_call}
  0x0000000106513335: jmpq   0x0000000106512c60
  0x000000010651333a: mov    %rdx,%rdx
  0x000000010651333d: callq  0x00000001064761e0  ; OopMap{[136]=Oop off=2370}
                                                ;*new  ; - java.util.Arrays::copyOfRange@8 (line 3663)
                                                ;   {runtime_call}
  0x0000000106513342: jmpq   0x0000000106512ca5
  0x0000000106513347: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x0000000106513351: mov    $0xa050f00,%eax
  0x0000000106513356: callq  0x0000000106506020  ; OopMap{[136]=Oop rax=Oop off=2395}
                                                ;*new  ; - java.util.Arrays::copyOfRange@12 (line 3663)
                                                ;   {runtime_call}
  0x000000010651335b: jmpq   0x0000000106512ca8
  0x0000000106513360: mov    %rdx,%rdx
  0x0000000106513363: callq  0x00000001064761e0  ; OopMap{[136]=Oop [152]=Oop off=2408}
                                                ;*new  ; - java.util.Arrays::copyOfRange@12 (line 3663)
                                                ;   {runtime_call}
  0x0000000106513368: jmpq   0x0000000106512cf1
  0x000000010651336d: mov    %rbx,0x8(%rsp)
  0x0000000106513372: movq   $0xffffffffffffffff,(%rsp)
  0x000000010651337a: callq  0x0000000106507020  ; OopMap{[136]=Oop [152]=Oop rax=Oop [144]=Oop off=2431}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::<init>@-1 (line 89)
                                                ; - java.util.Arrays::copyOfRange@16 (line 3663)
                                                ;   {runtime_call}
  0x000000010651337f: jmpq   0x0000000106512d40
  0x0000000106513384: mov    %rbx,0x8(%rsp)
  0x0000000106513389: movq   $0xffffffffffffffff,(%rsp)
  0x0000000106513391: callq  0x0000000106507020  ; OopMap{[136]=Oop [152]=Oop rax=Oop [144]=Oop off=2454}
                                                ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::<init>@-1 (line 67)
                                                ; - java.lang.StringBuilder::<init>@3 (line 89)
                                                ; - java.util.Arrays::copyOfRange@16 (line 3663)
                                                ;   {runtime_call}
  0x0000000106513396: jmpq   0x0000000106512d87
  0x000000010651339b: mov    %rbx,0x8(%rsp)
  0x00000001065133a0: movq   $0xffffffffffffffff,(%rsp)
  0x00000001065133a8: callq  0x0000000106507020  ; OopMap{[136]=Oop [152]=Oop rax=Oop [144]=Oop off=2477}
                                                ;*synchronization entry
                                                ; - java.lang.Object::<init>@-1 (line 37)
                                                ; - java.lang.AbstractStringBuilder::<init>@1 (line 67)
                                                ; - java.lang.StringBuilder::<init>@3 (line 89)
                                                ; - java.util.Arrays::copyOfRange@16 (line 3663)
                                                ;   {runtime_call}
  0x00000001065133ad: jmpq   0x0000000106512dce
  0x00000001065133b2: callq  0x00000001064758a0  ; OopMap{[136]=Oop [152]=Oop r9=Oop [144]=Oop off=2487}
                                                ;*newarray
                                                ; - java.lang.AbstractStringBuilder::<init>@6 (line 68)
                                                ; - java.lang.StringBuilder::<init>@3 (line 89)
                                                ; - java.util.Arrays::copyOfRange@16 (line 3663)
                                                ;   {runtime_call}
  0x00000001065133b7: jmpq   0x0000000106512e4d
  0x00000001065133bc: mov    %rdx,0x8(%rsp)
  0x00000001065133c1: movq   $0xffffffffffffffff,(%rsp)
  0x00000001065133c9: callq  0x0000000106507020  ; OopMap{[136]=Oop [152]=Oop r9=Oop [144]=Oop off=2510}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::append@-1 (line 208)
                                                ; - java.util.Arrays::copyOfRange@20 (line 3663)
                                                ;   {runtime_call}
  0x00000001065133ce: jmpq   0x0000000106512f2f
  0x00000001065133d3: mov    %rdx,0x8(%rsp)
  0x00000001065133d8: movq   $0xffffffffffffffff,(%rsp)
  0x00000001065133e0: callq  0x0000000106507020  ; OopMap{[144]=Oop [152]=Oop [136]=Oop off=2533}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::append@-1 (line 136)
                                                ; - java.util.Arrays::copyOfRange@25 (line 3663)
                                                ;   {runtime_call}
  0x00000001065133e5: jmpq   0x000000010651301b
  0x00000001065133ea: mov    %rdx,0x8(%rsp)
  0x00000001065133ef: movq   $0xffffffffffffffff,(%rsp)
  0x00000001065133f7: callq  0x0000000106507020  ; OopMap{[144]=Oop [152]=Oop [136]=Oop off=2556}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::append@-1 (line 208)
                                                ; - java.util.Arrays::copyOfRange@29 (line 3663)
                                                ;   {runtime_call}
  0x00000001065133fc: jmpq   0x0000000106513113
  0x0000000106513401: mov    %rdx,0x8(%rsp)
  0x0000000106513406: movq   $0xffffffffffffffff,(%rsp)
  0x000000010651340e: callq  0x0000000106507020  ; OopMap{[144]=Oop [152]=Oop [136]=Oop off=2579}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::toString@-1 (line 407)
                                                ; - java.util.Arrays::copyOfRange@32 (line 3663)
                                                ;   {runtime_call}
  0x0000000106513413: jmpq   0x000000010651320b
  0x0000000106513418: mov    %rdx,%rdx
  0x000000010651341b: callq  0x00000001064761e0  ; OopMap{[144]=Oop [152]=Oop [136]=Oop off=2592}
                                                ;*new  ; - java.lang.StringBuilder::toString@0 (line 407)
                                                ; - java.util.Arrays::copyOfRange@32 (line 3663)
                                                ;   {runtime_call}
  0x0000000106513420: jmpq   0x000000010651324c
  0x0000000106513425: nop
  0x0000000106513426: nop
  0x0000000106513427: mov    0x2a8(%r15),%rax
  0x000000010651342e: movabs $0x0,%r10
  0x0000000106513438: mov    %r10,0x2a8(%r15)
  0x000000010651343f: movabs $0x0,%r10
  0x0000000106513449: mov    %r10,0x2b0(%r15)
  0x0000000106513450: add    $0xb0,%rsp
  0x0000000106513457: pop    %rbp
  0x0000000106513458: jmpq   0x00000001064776a0  ;   {runtime_call}
  0x000000010651345d: hlt
  0x000000010651345e: hlt
  0x000000010651345f: hlt
[Stub Code]
  0x0000000106513460: nop                       ;   {no_reloc}
  0x0000000106513461: nop
  0x0000000106513462: nop
  0x0000000106513463: nop
  0x0000000106513464: nop
  0x0000000106513465: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010651346f: jmpq   0x000000010651346f  ;   {runtime_call}
  0x0000000106513474: nop
  0x0000000106513475: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010651347f: jmpq   0x000000010651347f  ;   {runtime_call}
  0x0000000106513484: nop
  0x0000000106513485: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010651348f: jmpq   0x000000010651348f  ;   {runtime_call}
  0x0000000106513494: nop
  0x0000000106513495: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010651349f: jmpq   0x000000010651349f  ;   {runtime_call}
  0x00000001065134a4: nop
  0x00000001065134a5: movabs $0x0,%rbx          ;   {static_stub}
  0x00000001065134af: jmpq   0x00000001065134af  ;   {runtime_call}
  0x00000001065134b4: nop
  0x00000001065134b5: movabs $0x0,%rbx          ;   {static_stub}
  0x00000001065134bf: jmpq   0x00000001065134bf  ;   {runtime_call}
[Exception Handler]
  0x00000001065134c4: callq  0x00000001065049a0  ;   {runtime_call}
  0x00000001065134c9: mov    %rsp,-0x28(%rsp)
  0x00000001065134ce: sub    $0x80,%rsp
  0x00000001065134d5: mov    %rax,0x78(%rsp)
  0x00000001065134da: mov    %rcx,0x70(%rsp)
  0x00000001065134df: mov    %rdx,0x68(%rsp)
  0x00000001065134e4: mov    %rbx,0x60(%rsp)
  0x00000001065134e9: mov    %rbp,0x50(%rsp)
  0x00000001065134ee: mov    %rsi,0x48(%rsp)
  0x00000001065134f3: mov    %rdi,0x40(%rsp)
  0x00000001065134f8: mov    %r8,0x38(%rsp)
  0x00000001065134fd: mov    %r9,0x30(%rsp)
  0x0000000106513502: mov    %r10,0x28(%rsp)
  0x0000000106513507: mov    %r11,0x20(%rsp)
  0x000000010651350c: mov    %r12,0x18(%rsp)
  0x0000000106513511: mov    %r13,0x10(%rsp)
  0x0000000106513516: mov    %r14,0x8(%rsp)
  0x000000010651351b: mov    %r15,(%rsp)
  0x000000010651351f: movabs $0x105194e90,%rdi  ;   {external_word}
  0x0000000106513529: movabs $0x1065134c9,%rsi  ;   {internal_word}
  0x0000000106513533: mov    %rsp,%rdx
  0x0000000106513536: and    $0xfffffffffffffff0,%rsp
  0x000000010651353a: callq  0x0000000104fc0196  ;   {runtime_call}
  0x000000010651353f: hlt
[Deopt Handler Code]
  0x0000000106513540: movabs $0x106513540,%r10  ;   {section_word}
  0x000000010651354a: push   %r10
  0x000000010651354c: jmpq   0x00000001064503c0  ;   {runtime_call}
  0x0000000106513551: hlt
  0x0000000106513552: hlt
  0x0000000106513553: hlt
  0x0000000106513554: hlt
  0x0000000106513555: hlt
  0x0000000106513556: hlt
  0x0000000106513557: hlt
[Loaded sun.misc.URLClassPath$3 from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.misc.URLClassPath$Loader from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.misc.URLClassPath$JarLoader from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.zip.ZipConstants from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.zip.ZipFile from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.misc.JavaUtilZipFileAccess from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.zip.ZipFile$1 from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
Decoding compiled method 0x0000000106513f90:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000011a2a2218} 'indexOf' '(II)I' in 'java/lang/String'
  # this:     rsi:rsi   = 'java/lang/String'
  # parm0:    rdx       = int
  # parm1:    rcx       = int
  #           [sp+0x50]  (sp of caller)
  0x0000000106514120: mov    0x8(%rsi),%r10d
  0x0000000106514124: shl    $0x3,%r10
  0x0000000106514128: cmp    %rax,%r10
  0x000000010651412b: jne    0x000000010644ee20  ;   {runtime_call}
  0x0000000106514131: data32 data32 nopw 0x0(%rax,%rax,1)
  0x000000010651413c: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x0000000106514140: mov    %eax,-0x14000(%rsp)
  0x0000000106514147: push   %rbp
  0x0000000106514148: sub    $0x40,%rsp
  0x000000010651414c: movabs $0x11a475eb0,%rax  ;   {metadata(method data for {method} {0x000000011a2a2218} 'indexOf' '(II)I' in 'java/lang/String')}
  0x0000000106514156: mov    0xdc(%rax),%edi
  0x000000010651415c: add    $0x8,%edi
  0x000000010651415f: mov    %edi,0xdc(%rax)
  0x0000000106514165: movabs $0x11a2a2218,%rax  ;   {metadata({method} {0x000000011a2a2218} 'indexOf' '(II)I' in 'java/lang/String')}
  0x000000010651416f: and    $0x1ff8,%edi
  0x0000000106514175: cmp    $0x0,%edi
  0x0000000106514178: je     0x00000001065143b1  ;*aload_0
                                                ; - java.lang.String::indexOf@0 (line 1546)

  0x000000010651417e: mov    0xc(%rsi),%eax
  0x0000000106514181: shl    $0x3,%rax          ;*getfield value
                                                ; - java.lang.String::indexOf@1 (line 1546)

  0x0000000106514185: mov    0xc(%rax),%edi     ;*arraylength
                                                ; - java.lang.String::indexOf@4 (line 1546)
                                                ; implicit exception: dispatches to 0x00000001065143c8
  0x0000000106514188: cmp    $0x0,%ecx
  0x000000010651418b: movabs $0x11a475eb0,%rbx  ;   {metadata(method data for {method} {0x000000011a2a2218} 'indexOf' '(II)I' in 'java/lang/String')}
  0x0000000106514195: movabs $0x108,%r8
  0x000000010651419f: jge    0x00000001065141af
  0x00000001065141a5: movabs $0x118,%r8
  0x00000001065141af: mov    (%rbx,%r8,1),%r9
  0x00000001065141b3: lea    0x1(%r9),%r9
  0x00000001065141b7: mov    %r9,(%rbx,%r8,1)
  0x00000001065141bb: jge    0x00000001065141db  ;*ifge
                                                ; - java.lang.String::indexOf@7 (line 1547)

  0x00000001065141c1: movabs $0x11a475eb0,%rcx  ;   {metadata(method data for {method} {0x000000011a2a2218} 'indexOf' '(II)I' in 'java/lang/String')}
  0x00000001065141cb: incl   0x128(%rcx)
  0x00000001065141d1: mov    $0x0,%ecx
  0x00000001065141d6: jmpq   0x0000000106514213  ;*goto
                                                ; - java.lang.String::indexOf@12 (line 1548)

  0x00000001065141db: cmp    %edi,%ecx
  0x00000001065141dd: movabs $0x11a475eb0,%rbx  ;   {metadata(method data for {method} {0x000000011a2a2218} 'indexOf' '(II)I' in 'java/lang/String')}
  0x00000001065141e7: movabs $0x140,%r8
  0x00000001065141f1: jl     0x0000000106514201
  0x00000001065141f7: movabs $0x150,%r8
  0x0000000106514201: mov    (%rbx,%r8,1),%r9
  0x0000000106514205: lea    0x1(%r9),%r9
  0x0000000106514209: mov    %r9,(%rbx,%r8,1)
  0x000000010651420d: jge    0x00000001065143a0  ;*if_icmplt
                                                ; - java.lang.String::indexOf@17 (line 1549)

  0x0000000106514213: cmp    $0x10000,%edx
  0x0000000106514219: movabs $0x11a475eb0,%rbx  ;   {metadata(method data for {method} {0x000000011a2a2218} 'indexOf' '(II)I' in 'java/lang/String')}
  0x0000000106514223: movabs $0x160,%r8
  0x000000010651422d: jge    0x000000010651423d
  0x0000000106514233: movabs $0x170,%r8
  0x000000010651423d: mov    (%rbx,%r8,1),%r9
  0x0000000106514241: lea    0x1(%r9),%r9
  0x0000000106514245: mov    %r9,(%rbx,%r8,1)
  0x0000000106514249: jge    0x0000000106514350  ;*if_icmpge
                                                ; - java.lang.String::indexOf@25 (line 1554)

  0x000000010651424f: mov    %rcx,%rbx
  0x0000000106514252: jmpq   0x00000001065142f3  ;*iload
                                                ; - java.lang.String::indexOf@37 (line 1558)

  0x0000000106514257: nop
  0x0000000106514258: movslq %ebx,%r8
  0x000000010651425b: cmp    0xc(%rax),%ebx
  0x000000010651425e: jae    0x00000001065143cd
  0x0000000106514264: movzwl 0x10(%rax,%r8,2),%r8d  ;*caload
                                                ; - java.lang.String::indexOf@47 (line 1559)

  0x000000010651426a: cmp    %edx,%r8d
  0x000000010651426d: movabs $0x11a475eb0,%r8   ;   {metadata(method data for {method} {0x000000011a2a2218} 'indexOf' '(II)I' in 'java/lang/String')}
  0x0000000106514277: movabs $0x1a0,%r9
  0x0000000106514281: jne    0x0000000106514291
  0x0000000106514287: movabs $0x1b0,%r9
  0x0000000106514291: mov    (%r8,%r9,1),%r11
  0x0000000106514295: lea    0x1(%r11),%r11
  0x0000000106514299: mov    %r11,(%r8,%r9,1)
  0x000000010651429d: je     0x0000000106514330  ;*if_icmpne
                                                ; - java.lang.String::indexOf@49 (line 1559)

  0x00000001065142a3: inc    %ebx
  0x00000001065142a5: movabs $0x11a475eb0,%r8   ;   {metadata(method data for {method} {0x000000011a2a2218} 'indexOf' '(II)I' in 'java/lang/String')}
  0x00000001065142af: mov    0xe0(%r8),%r9d
  0x00000001065142b6: add    $0x8,%r9d
  0x00000001065142ba: mov    %r9d,0xe0(%r8)
  0x00000001065142c1: movabs $0x11a2a2218,%r8   ;   {metadata({method} {0x000000011a2a2218} 'indexOf' '(II)I' in 'java/lang/String')}
  0x00000001065142cb: and    $0xfff8,%r9d
  0x00000001065142d2: cmp    $0x0,%r9d
  0x00000001065142d6: je     0x00000001065143d6  ; OopMap{rsi=Oop rax=Oop off=444}
                                                ;*goto
                                                ; - java.lang.String::indexOf@58 (line 1558)

  0x00000001065142dc: test   %eax,-0x9721e2(%rip)        # 0x0000000105ba2100
                                                ;   {poll}
  0x00000001065142e2: movabs $0x11a475eb0,%r8   ;   {metadata(method data for {method} {0x000000011a2a2218} 'indexOf' '(II)I' in 'java/lang/String')}
  0x00000001065142ec: incl   0x1c0(%r8)         ;*goto
                                                ; - java.lang.String::indexOf@58 (line 1558)

  0x00000001065142f3: cmp    %edi,%ebx
  0x00000001065142f5: movabs $0x11a475eb0,%r8   ;   {metadata(method data for {method} {0x000000011a2a2218} 'indexOf' '(II)I' in 'java/lang/String')}
  0x00000001065142ff: movabs $0x180,%r9
  0x0000000106514309: jge    0x0000000106514319
  0x000000010651430f: movabs $0x190,%r9
  0x0000000106514319: mov    (%r8,%r9,1),%r11
  0x000000010651431d: lea    0x1(%r11),%r11
  0x0000000106514321: mov    %r11,(%r8,%r9,1)
  0x0000000106514325: jge    0x000000010651433f
  0x000000010651432b: jmpq   0x0000000106514258  ;*if_icmpge
                                                ; - java.lang.String::indexOf@40 (line 1558)

  0x0000000106514330: mov    %rbx,%rax
  0x0000000106514333: add    $0x40,%rsp
  0x0000000106514337: pop    %rbp
  0x0000000106514338: test   %eax,-0x97223e(%rip)        # 0x0000000105ba2100
                                                ;   {poll_return}
  0x000000010651433e: retq                      ;*ireturn
                                                ; - java.lang.String::indexOf@54 (line 1560)

  0x000000010651433f: mov    $0xffffffff,%eax
  0x0000000106514344: add    $0x40,%rsp
  0x0000000106514348: pop    %rbp
  0x0000000106514349: test   %eax,-0x97224f(%rip)        # 0x0000000105ba2100
                                                ;   {poll_return}
  0x000000010651434f: retq                      ;*ireturn
                                                ; - java.lang.String::indexOf@62 (line 1563)

  0x0000000106514350: mov    %edi,0x30(%rsp)
  0x0000000106514354: mov    %rsi,%rbx
  0x0000000106514357: movabs $0x11a475eb0,%rax  ;   {metadata(method data for {method} {0x000000011a2a2218} 'indexOf' '(II)I' in 'java/lang/String')}
  0x0000000106514361: addq   $0x1,0x1d8(%rax)
  0x0000000106514369: mov    %rdx,%rbx
  0x000000010651436c: mov    %rbx,%rdx
  0x000000010651436f: mov    %rcx,%rax
  0x0000000106514372: mov    %rax,%rcx
  0x0000000106514375: mov    %rsi,%r8
  0x0000000106514378: mov    %r8,%rsi           ;*invokespecial indexOfSupplementary
                                                ; - java.lang.String::indexOf@66 (line 1565)

  0x000000010651437b: mov    %ebx,0x2c(%rsp)
  0x000000010651437f: mov    %eax,0x28(%rsp)
  0x0000000106514383: mov    %r8,0x20(%rsp)
  0x0000000106514388: nop
  0x0000000106514389: nop
  0x000000010651438a: nop
  0x000000010651438b: nop
  0x000000010651438c: nop
  0x000000010651438d: nop
  0x000000010651438e: nop
  0x000000010651438f: callq  0x000000010644f020  ; OopMap{[32]=Oop off=628}
                                                ;*invokespecial indexOfSupplementary
                                                ; - java.lang.String::indexOf@66 (line 1565)
                                                ;   {optimized virtual_call}
  0x0000000106514394: add    $0x40,%rsp
  0x0000000106514398: pop    %rbp
  0x0000000106514399: test   %eax,-0x97229f(%rip)        # 0x0000000105ba2100
                                                ;   {poll_return}
  0x000000010651439f: retq                      ;*ireturn
                                                ; - java.lang.String::indexOf@69 (line 1565)

  0x00000001065143a0: mov    $0xffffffff,%eax
  0x00000001065143a5: add    $0x40,%rsp
  0x00000001065143a9: pop    %rbp
  0x00000001065143aa: test   %eax,-0x9722b0(%rip)        # 0x0000000105ba2100
                                                ;   {poll_return}
  0x00000001065143b0: retq
  0x00000001065143b1: mov    %rax,0x8(%rsp)
  0x00000001065143b6: movq   $0xffffffffffffffff,(%rsp)
  0x00000001065143be: callq  0x0000000106507020  ; OopMap{rsi=Oop off=675}
                                                ;*synchronization entry
                                                ; - java.lang.String::indexOf@-1 (line 1546)
                                                ;   {runtime_call}
  0x00000001065143c3: jmpq   0x000000010651417e
  0x00000001065143c8: callq  0x0000000106476b40  ; OopMap{rsi=Oop rax=Oop off=685}
                                                ;*arraylength
                                                ; - java.lang.String::indexOf@4 (line 1546)
                                                ;   {runtime_call}
  0x00000001065143cd: mov    %rbx,(%rsp)
  0x00000001065143d1: callq  0x0000000106477200  ; OopMap{rsi=Oop rax=Oop off=694}
                                                ;*caload
                                                ; - java.lang.String::indexOf@47 (line 1559)
                                                ;   {runtime_call}
  0x00000001065143d6: mov    %r8,0x8(%rsp)
  0x00000001065143db: movq   $0x3a,(%rsp)
  0x00000001065143e3: callq  0x0000000106507020  ; OopMap{rsi=Oop rax=Oop off=712}
                                                ;*goto
                                                ; - java.lang.String::indexOf@58 (line 1558)
                                                ;   {runtime_call}
  0x00000001065143e8: jmpq   0x00000001065142dc
  0x00000001065143ed: nop
  0x00000001065143ee: nop
  0x00000001065143ef: mov    0x2a8(%r15),%rax
  0x00000001065143f6: movabs $0x0,%r10
  0x0000000106514400: mov    %r10,0x2a8(%r15)
  0x0000000106514407: movabs $0x0,%r10
  0x0000000106514411: mov    %r10,0x2b0(%r15)
  0x0000000106514418: add    $0x40,%rsp
  0x000000010651441c: pop    %rbp
  0x000000010651441d: jmpq   0x00000001064776a0  ;   {runtime_call}
  0x0000000106514422: hlt
  0x0000000106514423: hlt
  0x0000000106514424: hlt
  0x0000000106514425: hlt
  0x0000000106514426: hlt
  0x0000000106514427: hlt
  0x0000000106514428: hlt
  0x0000000106514429: hlt
  0x000000010651442a: hlt
  0x000000010651442b: hlt
  0x000000010651442c: hlt
  0x000000010651442d: hlt
  0x000000010651442e: hlt
  0x000000010651442f: hlt
  0x0000000106514430: hlt
  0x0000000106514431: hlt
  0x0000000106514432: hlt
  0x0000000106514433: hlt
  0x0000000106514434: hlt
  0x0000000106514435: hlt
  0x0000000106514436: hlt
  0x0000000106514437: hlt
  0x0000000106514438: hlt
  0x0000000106514439: hlt
  0x000000010651443a: hlt
  0x000000010651443b: hlt
  0x000000010651443c: hlt
  0x000000010651443d: hlt
  0x000000010651443e: hlt
  0x000000010651443f: hlt
[Stub Code]
  0x0000000106514440: nop                       ;   {no_reloc}
  0x0000000106514441: nop
  0x0000000106514442: nop
  0x0000000106514443: nop
  0x0000000106514444: nop
  0x0000000106514445: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010651444f: jmpq   0x000000010651444f  ;   {runtime_call}
[Exception Handler]
  0x0000000106514454: callq  0x00000001065049a0  ;   {runtime_call}
  0x0000000106514459: mov    %rsp,-0x28(%rsp)
  0x000000010651445e: sub    $0x80,%rsp
  0x0000000106514465: mov    %rax,0x78(%rsp)
  0x000000010651446a: mov    %rcx,0x70(%rsp)
  0x000000010651446f: mov    %rdx,0x68(%rsp)
  0x0000000106514474: mov    %rbx,0x60(%rsp)
  0x0000000106514479: mov    %rbp,0x50(%rsp)
  0x000000010651447e: mov    %rsi,0x48(%rsp)
  0x0000000106514483: mov    %rdi,0x40(%rsp)
  0x0000000106514488: mov    %r8,0x38(%rsp)
  0x000000010651448d: mov    %r9,0x30(%rsp)
  0x0000000106514492: mov    %r10,0x28(%rsp)
  0x0000000106514497: mov    %r11,0x20(%rsp)
  0x000000010651449c: mov    %r12,0x18(%rsp)
  0x00000001065144a1: mov    %r13,0x10(%rsp)
  0x00000001065144a6: mov    %r14,0x8(%rsp)
  0x00000001065144ab: mov    %r15,(%rsp)
  0x00000001065144af: movabs $0x105194e90,%rdi  ;   {external_word}
  0x00000001065144b9: movabs $0x106514459,%rsi  ;   {internal_word}
  0x00000001065144c3: mov    %rsp,%rdx
  0x00000001065144c6: and    $0xfffffffffffffff0,%rsp
  0x00000001065144ca: callq  0x0000000104fc0196  ;   {runtime_call}
  0x00000001065144cf: hlt
[Deopt Handler Code]
  0x00000001065144d0: movabs $0x1065144d0,%r10  ;   {section_word}
  0x00000001065144da: push   %r10
  0x00000001065144dc: jmpq   0x00000001064503c0  ;   {runtime_call}
  0x00000001065144e1: hlt
  0x00000001065144e2: hlt
  0x00000001065144e3: hlt
  0x00000001065144e4: hlt
  0x00000001065144e5: hlt
  0x00000001065144e6: hlt
  0x00000001065144e7: hlt
Decoding compiled method 0x0000000106514750:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000011a29d480} '<init>' '()V' in 'java/lang/Object'
  #           [sp+0x40]  (sp of caller)
  0x00000001065148c0: mov    0x8(%rsi),%r10d
  0x00000001065148c4: shl    $0x3,%r10
  0x00000001065148c8: cmp    %rax,%r10
  0x00000001065148cb: jne    0x000000010644ee20  ;   {runtime_call}
  0x00000001065148d1: data32 data32 nopw 0x0(%rax,%rax,1)
  0x00000001065148dc: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x00000001065148e0: mov    %eax,-0x14000(%rsp)
  0x00000001065148e7: push   %rbp
  0x00000001065148e8: sub    $0x30,%rsp
  0x00000001065148ec: movabs $0x11a418460,%rdi  ;   {metadata(method data for {method} {0x000000011a29d480} '<init>' '()V' in 'java/lang/Object')}
  0x00000001065148f6: mov    0xdc(%rdi),%ebx
  0x00000001065148fc: add    $0x8,%ebx
  0x00000001065148ff: mov    %ebx,0xdc(%rdi)
  0x0000000106514905: movabs $0x11a29d480,%rdi  ;   {metadata({method} {0x000000011a29d480} '<init>' '()V' in 'java/lang/Object')}
  0x000000010651490f: and    $0x1ff8,%ebx
  0x0000000106514915: cmp    $0x0,%ebx
  0x0000000106514918: je     0x0000000106514937
  0x000000010651491e: mov    %rsi,%rdi          ;*return
                                                ; - java.lang.Object::<init>@0 (line 37)

  0x0000000106514921: mov    %rsi,0x20(%rsp)
  0x0000000106514926: callq  0x00000001064768a0  ; OopMap{[32]=Oop off=107}
                                                ;*return
                                                ; - java.lang.Object::<init>@0 (line 37)
                                                ;   {runtime_call}
  0x000000010651492b: add    $0x30,%rsp
  0x000000010651492f: pop    %rbp
  0x0000000106514930: test   %eax,-0x972836(%rip)        # 0x0000000105ba2100
                                                ;   {poll_return}
  0x0000000106514936: retq
  0x0000000106514937: mov    %rdi,0x8(%rsp)
  0x000000010651493c: movq   $0xffffffffffffffff,(%rsp)
  0x0000000106514944: callq  0x0000000106507020  ; OopMap{rsi=Oop off=137}
                                                ;*synchronization entry
                                                ; - java.lang.Object::<init>@-1 (line 37)
                                                ;   {runtime_call}
  0x0000000106514949: jmp    0x000000010651491e
  0x000000010651494b: nop
  0x000000010651494c: nop
  0x000000010651494d: mov    0x2a8(%r15),%rax
  0x0000000106514954: movabs $0x0,%r10
  0x000000010651495e: mov    %r10,0x2a8(%r15)
  0x0000000106514965: movabs $0x0,%r10
  0x000000010651496f: mov    %r10,0x2b0(%r15)
  0x0000000106514976: add    $0x30,%rsp
  0x000000010651497a: pop    %rbp
  0x000000010651497b: jmpq   0x00000001064776a0  ;   {runtime_call}
[Exception Handler]
[Stub Code]
  0x0000000106514980: callq  0x00000001065049a0  ;   {no_reloc}
  0x0000000106514985: mov    %rsp,-0x28(%rsp)
  0x000000010651498a: sub    $0x80,%rsp
  0x0000000106514991: mov    %rax,0x78(%rsp)
  0x0000000106514996: mov    %rcx,0x70(%rsp)
  0x000000010651499b: mov    %rdx,0x68(%rsp)
  0x00000001065149a0: mov    %rbx,0x60(%rsp)
  0x00000001065149a5: mov    %rbp,0x50(%rsp)
  0x00000001065149aa: mov    %rsi,0x48(%rsp)
  0x00000001065149af: mov    %rdi,0x40(%rsp)
  0x00000001065149b4: mov    %r8,0x38(%rsp)
  0x00000001065149b9: mov    %r9,0x30(%rsp)
  0x00000001065149be: mov    %r10,0x28(%rsp)
  0x00000001065149c3: mov    %r11,0x20(%rsp)
  0x00000001065149c8: mov    %r12,0x18(%rsp)
  0x00000001065149cd: mov    %r13,0x10(%rsp)
  0x00000001065149d2: mov    %r14,0x8(%rsp)
  0x00000001065149d7: mov    %r15,(%rsp)
  0x00000001065149db: movabs $0x105194e90,%rdi  ;   {external_word}
  0x00000001065149e5: movabs $0x106514985,%rsi  ;   {internal_word}
  0x00000001065149ef: mov    %rsp,%rdx
  0x00000001065149f2: and    $0xfffffffffffffff0,%rsp
  0x00000001065149f6: callq  0x0000000104fc0196  ;   {runtime_call}
  0x00000001065149fb: hlt
[Deopt Handler Code]
  0x00000001065149fc: movabs $0x1065149fc,%r10  ;   {section_word}
  0x0000000106514a06: push   %r10
  0x0000000106514a08: jmpq   0x00000001064503c0  ;   {runtime_call}
  0x0000000106514a0d: hlt
  0x0000000106514a0e: hlt
  0x0000000106514a0f: hlt
Decoding compiled method 0x0000000106514ad0:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000011a2a12a0} 'getChars' '(II[CI)V' in 'java/lang/String'
  # this:     rsi:rsi   = 'java/lang/String'
  # parm0:    rdx       = int
  # parm1:    rcx       = int
  # parm2:    r8:r8     = '[C'
  # parm3:    r9        = int
  #           [sp+0x90]  (sp of caller)
  0x0000000106514ca0: mov    0x8(%rsi),%r10d
  0x0000000106514ca4: shl    $0x3,%r10
  0x0000000106514ca8: cmp    %rax,%r10
  0x0000000106514cab: jne    0x000000010644ee20  ;   {runtime_call}
  0x0000000106514cb1: data32 data32 nopw 0x0(%rax,%rax,1)
  0x0000000106514cbc: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x0000000106514cc0: mov    %eax,-0x14000(%rsp)
  0x0000000106514cc7: push   %rbp
  0x0000000106514cc8: sub    $0x80,%rsp
  0x0000000106514ccf: mov    %rsi,0x50(%rsp)
  0x0000000106514cd4: mov    %edx,0x3c(%rsp)
  0x0000000106514cd8: mov    %ecx,0x38(%rsp)
  0x0000000106514cdc: mov    %r8,0x48(%rsp)
  0x0000000106514ce1: mov    %r9d,0x40(%rsp)
  0x0000000106514ce6: movabs $0x11a4a4c78,%rdi  ;   {metadata(method data for {method} {0x000000011a2a12a0} 'getChars' '(II[CI)V' in 'java/lang/String')}
  0x0000000106514cf0: mov    0xdc(%rdi),%ebx
  0x0000000106514cf6: add    $0x8,%ebx
  0x0000000106514cf9: mov    %ebx,0xdc(%rdi)
  0x0000000106514cff: movabs $0x11a2a12a0,%rdi  ;   {metadata({method} {0x000000011a2a12a0} 'getChars' '(II[CI)V' in 'java/lang/String')}
  0x0000000106514d09: and    $0x1ff8,%ebx
  0x0000000106514d0f: cmp    $0x0,%ebx
  0x0000000106514d12: je     0x0000000106514f79  ;*iload_1
                                                ; - java.lang.String::getChars@0 (line 817)

  0x0000000106514d18: cmp    $0x0,%edx
  0x0000000106514d1b: movabs $0x11a4a4c78,%rdi  ;   {metadata(method data for {method} {0x000000011a2a12a0} 'getChars' '(II[CI)V' in 'java/lang/String')}
  0x0000000106514d25: movabs $0x108,%rbx
  0x0000000106514d2f: jge    0x0000000106514d3f
  0x0000000106514d35: movabs $0x118,%rbx
  0x0000000106514d3f: mov    (%rdi,%rbx,1),%rax
  0x0000000106514d43: lea    0x1(%rax),%rax
  0x0000000106514d47: mov    %rax,(%rdi,%rbx,1)
  0x0000000106514d4b: jl     0x0000000106514f29  ;*ifge
                                                ; - java.lang.String::getChars@1 (line 817)

  0x0000000106514d51: mov    0xc(%rsi),%edi
  0x0000000106514d54: shl    $0x3,%rdi          ;*getfield value
                                                ; - java.lang.String::getChars@15 (line 820)

  0x0000000106514d58: mov    0xc(%rdi),%ebx     ;*arraylength
                                                ; - java.lang.String::getChars@18 (line 820)
                                                ; implicit exception: dispatches to 0x0000000106514f90
  0x0000000106514d5b: cmp    %ebx,%ecx
  0x0000000106514d5d: movabs $0x11a4a4c78,%rbx  ;   {metadata(method data for {method} {0x000000011a2a12a0} 'getChars' '(II[CI)V' in 'java/lang/String')}
  0x0000000106514d67: movabs $0x138,%rax
  0x0000000106514d71: jle    0x0000000106514d81
  0x0000000106514d77: movabs $0x148,%rax
  0x0000000106514d81: mov    (%rbx,%rax,1),%r11
  0x0000000106514d85: lea    0x1(%r11),%r11
  0x0000000106514d89: mov    %r11,(%rbx,%rax,1)
  0x0000000106514d8d: jg     0x0000000106514ed1  ;*if_icmple
                                                ; - java.lang.String::getChars@19 (line 820)

  0x0000000106514d93: cmp    %ecx,%edx
  0x0000000106514d95: movabs $0x11a4a4c78,%rbx  ;   {metadata(method data for {method} {0x000000011a2a12a0} 'getChars' '(II[CI)V' in 'java/lang/String')}
  0x0000000106514d9f: movabs $0x168,%rax
  0x0000000106514da9: jle    0x0000000106514db9
  0x0000000106514daf: movabs $0x178,%rax
  0x0000000106514db9: mov    (%rbx,%rax,1),%r11
  0x0000000106514dbd: lea    0x1(%r11),%r11
  0x0000000106514dc1: mov    %r11,(%rbx,%rax,1)
  0x0000000106514dc5: jg     0x0000000106514e7c  ;*if_icmple
                                                ; - java.lang.String::getChars@33 (line 823)

  0x0000000106514dcb: movabs $0x11a4a4c78,%rbx  ;   {metadata(method data for {method} {0x000000011a2a12a0} 'getChars' '(II[CI)V' in 'java/lang/String')}
  0x0000000106514dd5: addq   $0x1,0x198(%rbx)
  0x0000000106514ddd: mov    %rcx,%rbx
  0x0000000106514de0: sub    %edx,%ebx
  0x0000000106514de2: mov    %rdi,%rsi
  0x0000000106514de5: mov    %rdx,%rdi
  0x0000000106514de8: mov    %rdi,%rdx
  0x0000000106514deb: mov    %r8,%rcx
  0x0000000106514dee: mov    %r9,%r8
  0x0000000106514df1: mov    %rbx,%r9
  0x0000000106514df4: test   %rcx,%rcx
  0x0000000106514df7: je     0x0000000106514f95
  0x0000000106514dfd: test   %edx,%edx
  0x0000000106514dff: jl     0x0000000106514f95
  0x0000000106514e05: test   %r8d,%r8d
  0x0000000106514e08: jl     0x0000000106514f95
  0x0000000106514e0e: lea    (%rdx,%r9,1),%rdi
  0x0000000106514e12: cmp    0xc(%rsi),%edi
  0x0000000106514e15: ja     0x0000000106514f95
  0x0000000106514e1b: lea    (%r8,%r9,1),%rdi
  0x0000000106514e1f: cmp    0xc(%rcx),%edi
  0x0000000106514e22: ja     0x0000000106514f95
  0x0000000106514e28: test   %r9d,%r9d
  0x0000000106514e2b: jl     0x0000000106514f95
  0x0000000106514e31: je     0x0000000106514e6d
  0x0000000106514e37: movslq %edx,%rdx
  0x0000000106514e3a: movslq %r8d,%r8
  0x0000000106514e3d: lea    0x10(%rsi,%rdx,2),%rdi
  0x0000000106514e42: lea    0x10(%rcx,%r8,2),%rsi
  0x0000000106514e47: mov    %r9,%rdx
  0x0000000106514e4a: test   $0xf,%esp
  0x0000000106514e50: je     0x0000000106514e68
  0x0000000106514e56: sub    $0x8,%rsp
  0x0000000106514e5a: callq  Stub::jshort_arraycopy  ;   {runtime_call}
  0x0000000106514e5f: add    $0x8,%rsp
  0x0000000106514e63: jmpq   0x0000000106514e6d
  0x0000000106514e68: callq  Stub::jshort_arraycopy  ;*invokestatic arraycopy
                                                ; - java.lang.String::getChars@58 (line 826)
                                                ;   {runtime_call}
  0x0000000106514e6d: add    $0x80,%rsp
  0x0000000106514e74: pop    %rbp
  0x0000000106514e75: test   %eax,-0x972d7b(%rip)        # 0x0000000105ba2100
                                                ;   {poll_return}
  0x0000000106514e7b: retq                      ;*return
                                                ; - java.lang.String::getChars@61 (line 827)

  0x0000000106514e7c: nopl   0x0(%rax)
  0x0000000106514e80: jmpq   0x0000000106514fb0  ;   {no_reloc}
  0x0000000106514e85: add    %al,(%rax)
  0x0000000106514e87: add    %al,(%rax)
  0x0000000106514e89: add    %ch,%cl
  0x0000000106514e8b: sub    (%rcx),%eax
  0x0000000106514e8d: add    %al,(%rax)         ;*new  ; - java.lang.String::getChars@36 (line 824)

  0x0000000106514e8f: mov    %rax,%rdx
  0x0000000106514e92: movabs $0x11a4a4c78,%rsi  ;   {metadata(method data for {method} {0x000000011a2a12a0} 'getChars' '(II[CI)V' in 'java/lang/String')}
  0x0000000106514e9c: addq   $0x1,0x188(%rsi)
  0x0000000106514ea4: mov    0x38(%rsp),%ecx
  0x0000000106514ea8: sub    0x3c(%rsp),%ecx
  0x0000000106514eac: mov    %rcx,%rdx
  0x0000000106514eaf: mov    %rax,%rsi          ;*invokespecial <init>
                                                ; - java.lang.String::getChars@43 (line 824)

  0x0000000106514eb2: mov    %rax,0x58(%rsp)
  0x0000000106514eb7: callq  0x000000010644f020  ; OopMap{[72]=Oop [80]=Oop [88]=Oop off=540}
                                                ;*invokespecial <init>
                                                ; - java.lang.String::getChars@43 (line 824)
                                                ;   {optimized virtual_call}
  0x0000000106514ebc: mov    0x58(%rsp),%rax    ; OopMap{[72]=Oop [80]=Oop rax=Oop off=545}
                                                ;*athrow
                                                ; - java.lang.String::getChars@46 (line 824)

  0x0000000106514ec1: movabs $0x106514ec1,%rdx  ;   {section_word}
  0x0000000106514ecb: callq  0x0000000106474fa0  ;   {runtime_call}
  0x0000000106514ed0: nop                       ;*athrow
                                                ; - java.lang.String::getChars@46 (line 824)

  0x0000000106514ed1: nopl   0x0(%rax)
  0x0000000106514ed8: jmpq   0x0000000106514fd6  ;   {no_reloc}
  0x0000000106514edd: add    %al,(%rax)
  0x0000000106514edf: add    %al,(%rax)
  0x0000000106514ee1: add    %ch,%cl
  0x0000000106514ee3: stc
  0x0000000106514ee4: add    %al,(%rax)
  0x0000000106514ee6: add    %cl,-0x75(%rax)    ;*new  ; - java.lang.String::getChars@22 (line 821)

  0x0000000106514ee9: rorb   -0x42(%rax)        ;   {metadata(method data for {method} {0x000000011a2a12a0} 'getChars' '(II[CI)V' in 'java/lang/String')}
  0x0000000106514eec: js     0x0000000106514f3a
  0x0000000106514eee: rex.WX sbb (%rcx),%al
  0x0000000106514ef1: add    %al,(%rax)
  0x0000000106514ef3: add    %cl,-0x7d(%rax)
  0x0000000106514ef6: xchg   %bl,0x1(%rax)
  0x0000000106514ef9: add    %al,(%rax)
  0x0000000106514efb: add    %ecx,0x48382454(%rbx)
  0x0000000106514f01: mov    %eax,%esi          ;*invokespecial <init>
                                                ; - java.lang.String::getChars@27 (line 821)

  0x0000000106514f03: mov    %rax,0x60(%rsp)
  0x0000000106514f08: nop
  0x0000000106514f09: nop
  0x0000000106514f0a: nop
  0x0000000106514f0b: nop
  0x0000000106514f0c: nop
  0x0000000106514f0d: nop
  0x0000000106514f0e: nop
  0x0000000106514f0f: callq  0x000000010644f020  ; OopMap{[80]=Oop [72]=Oop [96]=Oop off=628}
                                                ;*invokespecial <init>
                                                ; - java.lang.String::getChars@27 (line 821)
                                                ;   {optimized virtual_call}
  0x0000000106514f14: mov    0x60(%rsp),%rax    ; OopMap{[80]=Oop [72]=Oop rax=Oop off=633}
                                                ;*athrow
                                                ; - java.lang.String::getChars@30 (line 821)

  0x0000000106514f19: movabs $0x106514f19,%rdx  ;   {section_word}
  0x0000000106514f23: callq  0x0000000106474fa0  ;   {runtime_call}
  0x0000000106514f28: nop                       ;*athrow
                                                ; - java.lang.String::getChars@30 (line 821)

  0x0000000106514f29: mov    %rdx,%rdi
  0x0000000106514f2c: nopl   0x0(%rax)
  0x0000000106514f30: jmpq   0x0000000106514ffc  ;   {no_reloc}
  0x0000000106514f35: add    %al,(%rax)
  0x0000000106514f37: add    %al,(%rax)
  0x0000000106514f39: add    %ch,%cl
  0x0000000106514f3b: movl   $0x8b480000,(%rax)  ;*new
                                                ; - java.lang.String::getChars@4 (line 818)

  0x0000000106514f41: rorb   -0x45(%rax)        ;   {metadata(method data for {method} {0x000000011a2a12a0} 'getChars' '(II[CI)V' in 'java/lang/String')}
  0x0000000106514f44: js     0x0000000106514f92
  0x0000000106514f46: rex.WX sbb (%rcx),%al
  0x0000000106514f49: add    %al,(%rax)
  0x0000000106514f4b: add    %cl,-0x7d(%rax)
  0x0000000106514f4e: subl   $0x1,(%rax)
  0x0000000106514f51: add    %al,(%rax)
  0x0000000106514f53: add    %ecx,-0x75(%rax)
  0x0000000106514f56: xlat   %ds:(%rbx)
  0x0000000106514f57: mov    %rax,%rsi          ;*invokespecial <init>
                                                ; - java.lang.String::getChars@9 (line 818)

  0x0000000106514f5a: mov    %rax,0x68(%rsp)
  0x0000000106514f5f: callq  0x000000010644f020  ; OopMap{[72]=Oop [80]=Oop [104]=Oop off=708}
                                                ;*invokespecial <init>
                                                ; - java.lang.String::getChars@9 (line 818)
                                                ;   {optimized virtual_call}
  0x0000000106514f64: mov    0x68(%rsp),%rax    ; OopMap{[72]=Oop [80]=Oop rax=Oop off=713}
                                                ;*athrow
                                                ; - java.lang.String::getChars@12 (line 818)

  0x0000000106514f69: movabs $0x106514f69,%rdx  ;   {section_word}
  0x0000000106514f73: callq  0x0000000106474fa0  ;   {runtime_call}
  0x0000000106514f78: nop
  0x0000000106514f79: mov    %rdi,0x8(%rsp)
  0x0000000106514f7e: movq   $0xffffffffffffffff,(%rsp)
  0x0000000106514f86: callq  0x0000000106507020  ; OopMap{rsi=Oop [80]=Oop r8=Oop [72]=Oop off=747}
                                                ;*synchronization entry
                                                ; - java.lang.String::getChars@-1 (line 817)
                                                ;   {runtime_call}
  0x0000000106514f8b: jmpq   0x0000000106514d18
  0x0000000106514f90: callq  0x0000000106476b40  ; OopMap{rsi=Oop [80]=Oop r8=Oop [72]=Oop rdi=Oop off=757}
                                                ;*arraylength
                                                ; - java.lang.String::getChars@18 (line 820)
                                                ;   {runtime_call}
  0x0000000106514f95: nop
  0x0000000106514f96: nop
  0x0000000106514f97: callq  0x000000010644f420  ; OopMap{[80]=Oop [72]=Oop off=764}
                                                ;*invokestatic arraycopy
                                                ; - java.lang.String::getChars@58 (line 826)
                                                ;   {static_call}
  0x0000000106514f9c: jmpq   0x0000000106514e6d
  0x0000000106514fa1: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x0000000106514fab: mov    $0xa050f00,%eax
  0x0000000106514fb0: callq  0x0000000106506020  ; OopMap{[72]=Oop [80]=Oop off=789}
                                                ;*new  ; - java.lang.String::getChars@36 (line 824)
                                                ;   {runtime_call}
  0x0000000106514fb5: jmpq   0x0000000106514e80
  0x0000000106514fba: mov    %rdx,%rdx
  0x0000000106514fbd: callq  0x0000000106476620  ; OopMap{[72]=Oop [80]=Oop off=802}
                                                ;*new  ; - java.lang.String::getChars@36 (line 824)
                                                ;   {runtime_call}
  0x0000000106514fc2: jmpq   0x0000000106514e8f
  0x0000000106514fc7: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x0000000106514fd1: mov    $0xa050f00,%eax
  0x0000000106514fd6: callq  0x0000000106506020  ; OopMap{[80]=Oop [72]=Oop off=827}
                                                ;*new  ; - java.lang.String::getChars@22 (line 821)
                                                ;   {runtime_call}
  0x0000000106514fdb: jmpq   0x0000000106514ed8
  0x0000000106514fe0: mov    %rdx,%rdx
  0x0000000106514fe3: callq  0x0000000106476620  ; OopMap{[80]=Oop [72]=Oop off=840}
                                                ;*new  ; - java.lang.String::getChars@22 (line 821)
                                                ;   {runtime_call}
  0x0000000106514fe8: jmpq   0x0000000106514ee7
  0x0000000106514fed: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x0000000106514ff7: mov    $0xa050f00,%eax
  0x0000000106514ffc: callq  0x0000000106506020  ; OopMap{[80]=Oop [72]=Oop off=865}
                                                ;*new  ; - java.lang.String::getChars@4 (line 818)
                                                ;   {runtime_call}
  0x0000000106515001: jmpq   0x0000000106514f30
  0x0000000106515006: mov    %rdx,%rdx
  0x0000000106515009: callq  0x0000000106476620  ; OopMap{[80]=Oop [72]=Oop off=878}
                                                ;*new  ; - java.lang.String::getChars@4 (line 818)
                                                ;   {runtime_call}
  0x000000010651500e: jmpq   0x0000000106514f3f
  0x0000000106515013: nop
  0x0000000106515014: nop
  0x0000000106515015: mov    0x2a8(%r15),%rax
  0x000000010651501c: movabs $0x0,%r10
  0x0000000106515026: mov    %r10,0x2a8(%r15)
  0x000000010651502d: movabs $0x0,%r10
  0x0000000106515037: mov    %r10,0x2b0(%r15)
  0x000000010651503e: add    $0x80,%rsp
  0x0000000106515045: pop    %rbp
  0x0000000106515046: jmpq   0x00000001064776a0  ;   {runtime_call}
  0x000000010651504b: hlt
  0x000000010651504c: hlt
  0x000000010651504d: hlt
  0x000000010651504e: hlt
  0x000000010651504f: hlt
  0x0000000106515050: hlt
  0x0000000106515051: hlt
  0x0000000106515052: hlt
  0x0000000106515053: hlt
  0x0000000106515054: hlt
  0x0000000106515055: hlt
  0x0000000106515056: hlt
  0x0000000106515057: hlt
  0x0000000106515058: hlt
  0x0000000106515059: hlt
  0x000000010651505a: hlt
  0x000000010651505b: hlt
  0x000000010651505c: hlt
  0x000000010651505d: hlt
  0x000000010651505e: hlt
  0x000000010651505f: hlt
[Stub Code]
  0x0000000106515060: nop                       ;   {no_reloc}
  0x0000000106515061: nop
  0x0000000106515062: nop
  0x0000000106515063: nop
  0x0000000106515064: nop
  0x0000000106515065: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010651506f: jmpq   0x000000010651506f  ;   {runtime_call}
  0x0000000106515074: nop
  0x0000000106515075: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010651507f: jmpq   0x000000010651507f  ;   {runtime_call}
  0x0000000106515084: nop
  0x0000000106515085: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010651508f: jmpq   0x000000010651508f  ;   {runtime_call}
  0x0000000106515094: nop
  0x0000000106515095: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010651509f: jmpq   0x000000010651509f  ;   {runtime_call}
[Exception Handler]
  0x00000001065150a4: callq  0x00000001065049a0  ;   {runtime_call}
  0x00000001065150a9: mov    %rsp,-0x28(%rsp)
  0x00000001065150ae: sub    $0x80,%rsp
  0x00000001065150b5: mov    %rax,0x78(%rsp)
  0x00000001065150ba: mov    %rcx,0x70(%rsp)
  0x00000001065150bf: mov    %rdx,0x68(%rsp)
  0x00000001065150c4: mov    %rbx,0x60(%rsp)
  0x00000001065150c9: mov    %rbp,0x50(%rsp)
  0x00000001065150ce: mov    %rsi,0x48(%rsp)
  0x00000001065150d3: mov    %rdi,0x40(%rsp)
  0x00000001065150d8: mov    %r8,0x38(%rsp)
  0x00000001065150dd: mov    %r9,0x30(%rsp)
  0x00000001065150e2: mov    %r10,0x28(%rsp)
  0x00000001065150e7: mov    %r11,0x20(%rsp)
  0x00000001065150ec: mov    %r12,0x18(%rsp)
  0x00000001065150f1: mov    %r13,0x10(%rsp)
  0x00000001065150f6: mov    %r14,0x8(%rsp)
  0x00000001065150fb: mov    %r15,(%rsp)
  0x00000001065150ff: movabs $0x105194e90,%rdi  ;   {external_word}
  0x0000000106515109: movabs $0x1065150a9,%rsi  ;   {internal_word}
  0x0000000106515113: mov    %rsp,%rdx
  0x0000000106515116: and    $0xfffffffffffffff0,%rsp
  0x000000010651511a: callq  0x0000000104fc0196  ;   {runtime_call}
  0x000000010651511f: hlt
[Deopt Handler Code]
  0x0000000106515120: movabs $0x106515120,%r10  ;   {section_word}
  0x000000010651512a: push   %r10
  0x000000010651512c: jmpq   0x00000001064503c0  ;   {runtime_call}
  0x0000000106515131: hlt
  0x0000000106515132: hlt
  0x0000000106515133: hlt
  0x0000000106515134: hlt
  0x0000000106515135: hlt
  0x0000000106515136: hlt
  0x0000000106515137: hlt
Decoding compiled method 0x0000000106515490:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000000011a395fb8} 'min' '(II)I' in 'java/lang/Math'
  # parm0:    rsi       = int
  # parm1:    rdx       = int
  #           [sp+0x40]  (sp of caller)
  0x0000000106515600: mov    %eax,-0x14000(%rsp)
  0x0000000106515607: push   %rbp
  0x0000000106515608: sub    $0x30,%rsp
  0x000000010651560c: movabs $0x11a46bfa0,%rax  ;   {metadata(method data for {method} {0x000000011a395fb8} 'min' '(II)I' in 'java/lang/Math')}
  0x0000000106515616: mov    0xdc(%rax),%edi
  0x000000010651561c: add    $0x8,%edi
  0x000000010651561f: mov    %edi,0xdc(%rax)
  0x0000000106515625: movabs $0x11a395fb8,%rax  ;   {metadata({method} {0x000000011a395fb8} 'min' '(II)I' in 'java/lang/Math')}
  0x000000010651562f: and    $0x1ff8,%edi
  0x0000000106515635: cmp    $0x0,%edi
  0x0000000106515638: je     0x000000010651569d  ;*iload_0
                                                ; - java.lang.Math::min@0 (line 1336)

  0x000000010651563e: cmp    %edx,%esi
  0x0000000106515640: movabs $0x11a46bfa0,%rax  ;   {metadata(method data for {method} {0x000000011a395fb8} 'min' '(II)I' in 'java/lang/Math')}
  0x000000010651564a: movabs $0x108,%rdi
  0x0000000106515654: jg     0x0000000106515664
  0x000000010651565a: movabs $0x118,%rdi
  0x0000000106515664: mov    (%rax,%rdi,1),%rbx
  0x0000000106515668: lea    0x1(%rbx),%rbx
  0x000000010651566c: mov    %rbx,(%rax,%rdi,1)
  0x0000000106515670: jg     0x000000010651568b  ;*if_icmpgt
                                                ; - java.lang.Math::min@2 (line 1336)

  0x0000000106515676: movabs $0x11a46bfa0,%rax  ;   {metadata(method data for {method} {0x000000011a395fb8} 'min' '(II)I' in 'java/lang/Math')}
  0x0000000106515680: incl   0x128(%rax)
  0x0000000106515686: jmpq   0x000000010651568e  ;*goto
                                                ; - java.lang.Math::min@6 (line 1336)

  0x000000010651568b: mov    %rdx,%rsi          ;*ireturn
                                                ; - java.lang.Math::min@10 (line 1336)

  0x000000010651568e: mov    %rsi,%rax
  0x0000000106515691: add    $0x30,%rsp
  0x0000000106515695: pop    %rbp
  0x0000000106515696: test   %eax,-0x97359c(%rip)        # 0x0000000105ba2100
                                                ;   {poll_return}
  0x000000010651569c: retq
  0x000000010651569d: mov    %rax,0x8(%rsp)
  0x00000001065156a2: movq   $0xffffffffffffffff,(%rsp)
  0x00000001065156aa: callq  0x0000000106507020  ; OopMap{off=175}
                                                ;*synchronization entry
                                                ; - java.lang.Math::min@-1 (line 1336)
                                                ;   {runtime_call}
  0x00000001065156af: jmp    0x000000010651563e
  0x00000001065156b1: nop
  0x00000001065156b2: nop
  0x00000001065156b3: mov    0x2a8(%r15),%rax
  0x00000001065156ba: movabs $0x0,%r10
  0x00000001065156c4: mov    %r10,0x2a8(%r15)
  0x00000001065156cb: movabs $0x0,%r10
  0x00000001065156d5: mov    %r10,0x2b0(%r15)
  0x00000001065156dc: add    $0x30,%rsp
  0x00000001065156e0: pop    %rbp
  0x00000001065156e1: jmpq   0x00000001064776a0  ;   {runtime_call}
  0x00000001065156e6: hlt
  0x00000001065156e7: hlt
  0x00000001065156e8: hlt
  0x00000001065156e9: hlt
  0x00000001065156ea: hlt
  0x00000001065156eb: hlt
  0x00000001065156ec: hlt
  0x00000001065156ed: hlt
  0x00000001065156ee: hlt
  0x00000001065156ef: hlt
  0x00000001065156f0: hlt
  0x00000001065156f1: hlt
  0x00000001065156f2: hlt
  0x00000001065156f3: hlt
  0x00000001065156f4: hlt
  0x00000001065156f5: hlt
  0x00000001065156f6: hlt
  0x00000001065156f7: hlt
  0x00000001065156f8: hlt
  0x00000001065156f9: hlt
  0x00000001065156fa: hlt
  0x00000001065156fb: hlt
  0x00000001065156fc: hlt
  0x00000001065156fd: hlt
  0x00000001065156fe: hlt
  0x00000001065156ff: hlt
[Exception Handler]
[Stub Code]
  0x0000000106515700: callq  0x00000001065049a0  ;   {no_reloc}
  0x0000000106515705: mov    %rsp,-0x28(%rsp)
  0x000000010651570a: sub    $0x80,%rsp
  0x0000000106515711: mov    %rax,0x78(%rsp)
  0x0000000106515716: mov    %rcx,0x70(%rsp)
  0x000000010651571b: mov    %rdx,0x68(%rsp)
  0x0000000106515720: mov    %rbx,0x60(%rsp)
  0x0000000106515725: mov    %rbp,0x50(%rsp)
  0x000000010651572a: mov    %rsi,0x48(%rsp)
  0x000000010651572f: mov    %rdi,0x40(%rsp)
  0x0000000106515734: mov    %r8,0x38(%rsp)
  0x0000000106515739: mov    %r9,0x30(%rsp)
  0x000000010651573e: mov    %r10,0x28(%rsp)
  0x0000000106515743: mov    %r11,0x20(%rsp)
  0x0000000106515748: mov    %r12,0x18(%rsp)
  0x000000010651574d: mov    %r13,0x10(%rsp)
  0x0000000106515752: mov    %r14,0x8(%rsp)
  0x0000000106515757: mov    %r15,(%rsp)
  0x000000010651575b: movabs $0x105194e90,%rdi  ;   {external_word}
  0x0000000106515765: movabs $0x106515705,%rsi  ;   {internal_word}
  0x000000010651576f: mov    %rsp,%rdx
  0x0000000106515772: and    $0xfffffffffffffff0,%rsp
  0x0000000106515776: callq  0x0000000104fc0196  ;   {runtime_call}
  0x000000010651577b: hlt
[Deopt Handler Code]
  0x000000010651577c: movabs $0x10651577c,%r10  ;   {section_word}
  0x0000000106515786: push   %r10
  0x0000000106515788: jmpq   0x00000001064503c0  ;   {runtime_call}
  0x000000010651578d: hlt
  0x000000010651578e: hlt
  0x000000010651578f: hlt
Decoding compiled method 0x0000000106518550:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000011a2a0e48} 'charAt' '(I)C' in 'java/lang/String'
  # this:     rsi:rsi   = 'java/lang/String'
  # parm0:    rdx       = int
  #           [sp+0x30]  (sp of caller)
  0x00000001065186a0: mov    0x8(%rsi),%r10d
  0x00000001065186a4: shl    $0x3,%r10
  0x00000001065186a8: cmp    %r10,%rax
  0x00000001065186ab: jne    0x000000010644ee20  ;   {runtime_call}
  0x00000001065186b1: [Loaded sun.misc.URLClassPath$JarLoader$1 from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
data32 xchg %ax,%ax
  0x00000001065186b4: nopl   0x0(%rax,%rax,1)
  0x00000001065186bc: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x00000001065186c0: mov    %eax,-0x14000(%rsp)
  0x00000001065186c7: push   %rbp
  0x00000001065186c8: sub    $0x20,%rsp         ;*synchronization entry
                                                ; - java.lang.String::charAt@-1 (line 657)

  0x00000001065186cc: test   %edx,%edx
  0x00000001065186ce: jl     0x000000010651873d  ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)

  0x00000001065186d0: mov    0xc(%rsi),%r11d    ;*getfield value
                                                ; - java.lang.String::charAt@6 (line 657)

  0x00000001065186d4: test   %r11d,%r11d
  0x00000001065186d7: je     0x00000001065186fc
  0x00000001065186d9: mov    0xc(%r12,%r11,8),%ebp  ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)

  0x00000001065186de: cmp    %ebp,%edx
  0x00000001065186e0: jge    0x0000000106518755  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)

  0x00000001065186e2: cmp    %ebp,%edx
  0x00000001065186e4: jae    0x0000000106518721
  0x00000001065186e6: lea    (%r12,%r11,8),%r10
  0x00000001065186ea: movzwl 0x10(%r10,%rdx,2),%eax  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)

  0x00000001065186f0: add    $0x20,%rsp
  0x00000001065186f4: pop    %rbp
  0x00000001065186f5: test   %eax,-0x9766fb(%rip)        # 0x0000000105ba2000
                                                ;   {poll_return}
  0x00000001065186fb: retq
  0x00000001065186fc: mov    0x39c(%r15),%r11d
  0x0000000106518703: test   %r11d,%r11d
  0x0000000106518706: jne    0x000000010651876d
  0x0000000106518708: mov    %rsi,%rbp
  0x000000010651870b: mov    %edx,0x4(%rsp)
  0x000000010651870f: mov    $0xfffffff6,%esi
  0x0000000106518714: data32 xchg %ax,%ax
  0x0000000106518717: callq  0x000000010640e1a0  ; OopMap{rbp=Oop off=124}
                                                ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ;   {runtime_call}
  0x000000010651871c: callq  0x00000001050429dc  ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ;   {runtime_call}
  0x0000000106518721: mov    %rsi,%rbp
  0x0000000106518724: mov    %edx,0x4(%rsp)
  0x0000000106518728: mov    %r11d,0x8(%rsp)
  0x000000010651872d: mov    $0xffffffe4,%esi
  0x0000000106518732: nop
  0x0000000106518733: callq  0x000000010640e1a0  ; OopMap{rbp=Oop [8]=NarrowOop off=152}
                                                ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ;   {runtime_call}
  0x0000000106518738: callq  0x00000001050429dc  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ;   {runtime_call}
  0x000000010651873d: mov    %rsi,%rbp
  0x0000000106518740: mov    %edx,0x4(%rsp)
  0x0000000106518744: mov    $0xffffff65,%esi
  0x0000000106518749: xchg   %ax,%ax
  0x000000010651874b: callq  0x000000010640e1a0  ; OopMap{rbp=Oop off=176}
                                                ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ;   {runtime_call}
  0x0000000106518750: callq  0x00000001050429dc  ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ;   {runtime_call}
  0x0000000106518755: mov    %rsi,(%rsp)
  0x0000000106518759: mov    %edx,0xc(%rsp)
  0x000000010651875d: mov    $0xffffff65,%esi
  0x0000000106518762: nop
  0x0000000106518763: callq  0x000000010640e1a0  ; OopMap{[0]=Oop off=200}
                                                ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ;   {runtime_call}
  0x0000000106518768: callq  0x00000001050429dc  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ;   {runtime_call}
  0x000000010651876d: mov    %rsi,%rbp
  0x0000000106518770: mov    %edx,0x4(%rsp)
  0x0000000106518774: mov    $0xfffffff7,%esi
  0x0000000106518779: xchg   %ax,%ax
  0x000000010651877b: callq  0x000000010640e1a0  ; OopMap{rbp=Oop off=224}
                                                ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ;   {runtime_call}
  0x0000000106518780: callq  0x00000001050429dc  ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ;   {runtime_call}
  0x0000000106518785: hlt
  0x0000000106518786: hlt
  0x0000000106518787: hlt
  0x0000000106518788: hlt
  0x0000000106518789: hlt
  0x000000010651878a: hlt
  0x000000010651878b: hlt
  0x000000010651878c: hlt
  0x000000010651878d: hlt
  0x000000010651878e: hlt
  0x000000010651878f: hlt
  0x0000000106518790: hlt
  0x0000000106518791: hlt
  0x0000000106518792: hlt
  0x0000000106518793: hlt
  0x0000000106518794: hlt
  0x0000000106518795: hlt
  0x0000000106518796: hlt
  0x0000000106518797: hlt
  0x0000000106518798: hlt
  0x0000000106518799: hlt
  0x000000010651879a: hlt
  0x000000010651879b: hlt
  0x000000010651879c: hlt
  0x000000010651879d: hlt
  0x000000010651879e: hlt
  0x000000010651879f: hlt
[Exception Handler]
[Stub Code]
  0x00000001065187a0: jmpq   0x0000000106460a60  ;   {no_reloc}
[Deopt Handler Code]
  0x00000001065187a5: callq  0x00000001065187aa
  0x00000001065187aa: subq   $0x5,(%rsp)
  0x00000001065187af: jmpq   0x00000001064503c0  ;   {runtime_call}
  0x00000001065187b4: hlt
  0x00000001065187b5: hlt
  0x00000001065187b6: hlt
  0x00000001065187b7: hlt
[Loaded sun.misc.FileURLMapper from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
Decoding compiled method 0x0000000106517cd0:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000011a3131e0} 'ensureCapacityInternal' '(I)V' in 'java/lang/AbstractStringBuilder'
  # this:     rsi:rsi   = 'java/lang/AbstractStringBuilder'
  # parm0:    rdx       = int
  #           [sp+0xc0]  (sp of caller)
  0x0000000106517e60: mov    0x8(%rsi),%r10d
  0x0000000106517e64: shl    $0x3,%r10
  0x0000000106517e68: cmp    %rax,%r10
  0x0000000106517e6b: jne    0x000000010644ee20  ;   {runtime_call}
  0x0000000106517e71: data32 data32 nopw 0x0(%rax,%rax,1)
  0x0000000106517e7c: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x0000000106517e80: mov    %eax,-0x14000(%rsp)
  0x0000000106517e87: push   %rbp
  0x0000000106517e88: sub    $0xb0,%rsp
  0x0000000106517e8f: mov    %edx,0x7c(%rsp)
  0x0000000106517e93: movabs $0x11a4a5750,%rdi  ;   {metadata(method data for {method} {0x000000011a3131e0} 'ensureCapacityInternal' '(I)V' in 'java/lang/AbstractStringBuilder')}
  0x0000000106517e9d: mov    0xdc(%rdi),%ebx
  0x0000000106517ea3: add    $0x8,%ebx
  0x0000000106517ea6: mov    %ebx,0xdc(%rdi)
  0x0000000106517eac: movabs $0x11a3131e0,%rdi  ;   {metadata({method} {0x000000011a3131e0} 'ensureCapacityInternal' '(I)V' in 'java/lang/AbstractStringBuilder')}
  0x0000000106517eb6: and    $0x1ff8,%ebx
  0x0000000106517ebc: cmp    $0x0,%ebx
  0x0000000106517ebf: je     0x000000010651817f  ;*iload_1
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@0 (line 123)

  0x0000000106517ec5: mov    0x10(%rsi),%edi
  0x0000000106517ec8: shl    $0x3,%rdi          ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@2 (line 123)

  0x0000000106517ecc: mov    %rdi,0x80(%rsp)
  0x0000000106517ed4: mov    0xc(%rdi),%ebx     ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; implicit exception: dispatches to 0x0000000106518196
  0x0000000106517ed7: mov    %rdx,%rax
  0x0000000106517eda: sub    %ebx,%eax
  0x0000000106517edc: cmp    $0x0,%eax
  0x0000000106517edf: movabs $0x11a4a5750,%rax  ;   {metadata(method data for {method} {0x000000011a3131e0} 'ensureCapacityInternal' '(I)V' in 'java/lang/AbstractStringBuilder')}
  0x0000000106517ee9: movabs $0x108,%rcx
  0x0000000106517ef3: jle    0x0000000106517f03
  0x0000000106517ef9: movabs $0x118,%rcx
  0x0000000106517f03: mov    (%rax,%rcx,1),%r8
  0x0000000106517f07: lea    0x1(%r8),%r8
  0x0000000106517f0b: mov    %r8,(%rax,%rcx,1)
  0x0000000106517f0f: jle    0x0000000106518170  ;*ifle
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@7 (line 123)

  0x0000000106517f15: mov    %ebx,0x78(%rsp)
  0x0000000106517f19: mov    %rsi,%rax
  0x0000000106517f1c: movabs $0x11a4a5750,%rcx  ;   {metadata(method data for {method} {0x000000011a3131e0} 'ensureCapacityInternal' '(I)V' in 'java/lang/AbstractStringBuilder')}
  0x0000000106517f26: addq   $0x1,0x128(%rcx)
  0x0000000106517f2e: mov    %rdx,%rax
  0x0000000106517f31: mov    %rax,%rdx
  0x0000000106517f34: mov    %rsi,%rcx
  0x0000000106517f37: mov    %rcx,%rsi          ;*invokespecial newCapacity
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)

  0x0000000106517f3a: mov    %rcx,0x88(%rsp)
  0x0000000106517f42: nop
  0x0000000106517f43: nop
  0x0000000106517f44: nop
  0x0000000106517f45: nop
  0x0000000106517f46: nop
  0x0000000106517f47: callq  0x000000010644f020  ; OopMap{[136]=Oop [128]=Oop off=236}
                                                ;*invokespecial newCapacity
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ;   {optimized virtual_call}
  0x0000000106517f4c: movabs $0x11a4a5750,%rbx  ;   {metadata(method data for {method} {0x000000011a3131e0} 'ensureCapacityInternal' '(I)V' in 'java/lang/AbstractStringBuilder')}
  0x0000000106517f56: addq   $0x1,0x138(%rbx)
  0x0000000106517f5e: movabs $0x11a4a5e98,%rbx  ;   {metadata(method data for {method} {0x000000011a3bad30} 'copyOf' '([CI)[C' in 'java/util/Arrays')}
  0x0000000106517f68: mov    0xdc(%rbx),%edx
  0x0000000106517f6e: add    $0x8,%edx
  0x0000000106517f71: mov    %edx,0xdc(%rbx)
  0x0000000106517f77: movabs $0x11a3bad30,%rbx  ;   {metadata({method} {0x000000011a3bad30} 'copyOf' '([CI)[C' in 'java/util/Arrays')}
  0x0000000106517f81: and    $0x7ffff8,%edx
  0x0000000106517f87: cmp    $0x0,%edx
  0x0000000106517f8a: je     0x000000010651819b
  0x0000000106517f90: mov    %rax,%rbx
  0x0000000106517f93: movabs $0x7c0000208,%rdx  ;   {metadata({type array char})}
  0x0000000106517f9d: mov    %rax,%r11
  0x0000000106517fa0: movslq %ebx,%rbx
  0x0000000106517fa3: mov    %rbx,%rdi
  0x0000000106517fa6: cmp    $0xffffff,%rbx
  0x0000000106517fad: ja     0x00000001065181b2
  0x0000000106517fb3: movabs $0x17,%rsi
  0x0000000106517fbd: lea    (%rsi,%rbx,2),%rsi
  0x0000000106517fc1: and    $0xfffffffffffffff8,%rsi
  0x0000000106517fc5: mov    0x60(%r15),%rax
  0x0000000106517fc9: lea    (%rax,%rsi,1),%rsi
  0x0000000106517fcd: cmp    0x70(%r15),%rsi
  0x0000000106517fd1: ja     0x00000001065181b2
  0x0000000106517fd7: mov    %rsi,0x60(%r15)
  0x0000000106517fdb: sub    %rax,%rsi
  0x0000000106517fde: movq   $0x1,(%rax)
  0x0000000106517fe5: mov    %rdx,%rcx
  0x0000000106517fe8: shr    $0x3,%rcx
  0x0000000106517fec: mov    %ecx,0x8(%rax)
  0x0000000106517fef: mov    %ebx,0xc(%rax)
  0x0000000106517ff2: sub    $0x10,%rsi
  0x0000000106517ff6: je     0x000000010651800d
  0x0000000106517ffc: xor    %rbx,%rbx
  0x0000000106517fff: shr    $0x3,%rsi
  0x0000000106518003: mov    %rbx,0x8(%rax,%rsi,8)
  0x0000000106518008: dec    %rsi
  0x000000010651800b: jne    0x0000000106518003  ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)

  0x000000010651800d: movabs $0x11a4a5e98,%rsi  ;   {metadata(method data for {method} {0x000000011a3bad30} 'copyOf' '([CI)[C' in 'java/util/Arrays')}
  0x0000000106518017: addq   $0x1,0x108(%rsi)
  0x000000010651801f: movabs $0x11a46bfa0,%rsi  ;   {metadata(method data for {method} {0x000000011a395fb8} 'min' '(II)I' in 'java/lang/Math')}
  0x0000000106518029: mov    0xdc(%rsi),%edx
  0x000000010651802f: add    $0x8,%edx
  0x0000000106518032: mov    %edx,0xdc(%rsi)
  0x0000000106518038: movabs $0x11a395fb8,%rsi  ;   {metadata({method} {0x000000011a395fb8} 'min' '(II)I' in 'java/lang/Math')}
  0x0000000106518042: and    $0x7ffff8,%edx
  0x0000000106518048: cmp    $0x0,%edx
  0x000000010651804b: je     0x00000001065181bc
  0x0000000106518051: mov    0x78(%rsp),%ebx
  0x0000000106518055: cmp    %r11d,%ebx
  0x0000000106518058: movabs $0x11a46bfa0,%rsi  ;   {metadata(method data for {method} {0x000000011a395fb8} 'min' '(II)I' in 'java/lang/Math')}
  0x0000000106518062: movabs $0x108,%rdx
  0x000000010651806c: jg     0x000000010651807c
  0x0000000106518072: movabs $0x118,%rdx
  0x000000010651807c: mov    (%rsi,%rdx,1),%rcx
  0x0000000106518080: lea    0x1(%rcx),%rcx
  0x0000000106518084: mov    %rcx,(%rsi,%rdx,1)
  0x0000000106518088: jg     0x00000001065180a3  ;*if_icmpgt
                                                ; - java.lang.Math::min@2 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)

  0x000000010651808e: movabs $0x11a46bfa0,%rsi  ;   {metadata(method data for {method} {0x000000011a395fb8} 'min' '(II)I' in 'java/lang/Math')}
  0x0000000106518098: incl   0x128(%rsi)
  0x000000010651809e: jmpq   0x00000001065180a6  ;*goto
                                                ; - java.lang.Math::min@6 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)

  0x00000001065180a3: mov    %r11,%rbx          ;*ireturn
                                                ; - java.lang.Math::min@10 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)

  0x00000001065180a6: mov    %r11d,0x98(%rsp)
  0x00000001065180ae: mov    0x80(%rsp),%rdi
  0x00000001065180b6: movabs $0x11a4a5e98,%rsi  ;   {metadata(method data for {method} {0x000000011a3bad30} 'copyOf' '([CI)[C' in 'java/util/Arrays')}
  0x00000001065180c0: addq   $0x1,0x118(%rsi)
  0x00000001065180c8: mov    %rdi,%rsi
  0x00000001065180cb: mov    $0x0,%edx
  0x00000001065180d0: mov    %rax,%rcx
  0x00000001065180d3: mov    $0x0,%r8d
  0x00000001065180d9: mov    %rbx,%r9
  0x00000001065180dc: mov    %rax,0x90(%rsp)
  0x00000001065180e4: lea    (%rdx,%r9,1),%rdi
  0x00000001065180e8: cmp    0xc(%rsi),%edi
  0x00000001065180eb: ja     0x00000001065181d3
  0x00000001065180f1: lea    (%r8,%r9,1),%rdi
  0x00000001065180f5: cmp    0xc(%rcx),%edi
  0x00000001065180f8: ja     0x00000001065181d3
  0x00000001065180fe: test   %r9d,%r9d
  0x0000000106518101: jl     0x00000001065181d3
  0x0000000106518107: je     0x0000000106518143
  0x000000010651810d: movslq %edx,%rdx
  0x0000000106518110: movslq %r8d,%r8
  0x0000000106518113: lea    0x10(%rsi,%rdx,2),%rdi
  0x0000000106518118: lea    0x10(%rcx,%r8,2),%rsi
  0x000000010651811d: mov    %r9,%rdx
  0x0000000106518120: test   $0xf,%esp
  0x0000000106518126: je     0x000000010651813e
  0x000000010651812c: sub    $0x8,%rsp
  0x0000000106518130: callq  Stub::jshort_disjoint_arraycopy
                                                ;   {runtime_call}
  0x0000000106518135: add    $0x8,%rsp
  0x0000000106518139: jmpq   0x0000000106518143
  0x000000010651813e: callq  Stub::jshort_disjoint_arraycopy
                                                ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ;   {runtime_call}
  0x0000000106518143: mov    0x90(%rsp),%rax
  0x000000010651814b: mov    0x88(%rsp),%rsi
  0x0000000106518153: mov    %rax,%r10
  0x0000000106518156: shr    $0x3,%r10
  0x000000010651815a: mov    %r10d,0x10(%rsi)
  0x000000010651815e: shr    $0x9,%rsi
  0x0000000106518162: movabs $0x111dc9000,%rdi
  0x000000010651816c: movb   $0x0,(%rsi,%rdi,1)  ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@23 (line 124)

  0x0000000106518170: add    $0xb0,%rsp
  0x0000000106518177: pop    %rbp
  0x0000000106518178: test   %eax,-0x97607e(%rip)        # 0x0000000105ba2100
                                                ;   {poll_return}
  0x000000010651817e: retq
  0x000000010651817f: mov    %rdi,0x8(%rsp)
  0x0000000106518184: movq   $0xffffffffffffffff,(%rsp)
  0x000000010651818c: callq  0x0000000106507020  ; OopMap{rsi=Oop off=817}
                                                ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@-1 (line 123)
                                                ;   {runtime_call}
  0x0000000106518191: jmpq   0x0000000106517ec5
  0x0000000106518196: callq  0x0000000106476b40  ; OopMap{rsi=Oop rdi=Oop [128]=Oop off=827}
                                                ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ;   {runtime_call}
  0x000000010651819b: mov    %rbx,0x8(%rsp)
  0x00000001065181a0: movq   $0xffffffffffffffff,(%rsp)
  0x00000001065181a8: callq  0x0000000106507020  ; OopMap{[136]=Oop [128]=Oop off=845}
                                                ;*synchronization entry
                                                ; - java.util.Arrays::copyOf@-1 (line 3332)
                                [Loaded java.util.jar.JarFile from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ;   {runtime_call}
  0x00000001065181ad: jmpq   0x0000000106517f90
  0x00000001065181b2: callq  0x00000001064758a0  ; OopMap{[136]=Oop [128]=Oop off=855}
                                                ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ;   {runtime_call}
  0x00000001065181b7: jmpq   0x000000010651800d
  0x00000001065181bc: mov    %rsi,0x8(%rsp)
  0x00000001065181c1: movq   $0xffffffffffffffff,(%rsp)
  0x00000001065181c9: callq  0x0000000106507020  ; OopMap{[136]=Oop [128]=Oop rax=Oop off=878}
                                                ;*synchronization entry
                                                ; - java.lang.Math::min@-1 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ;   {runtime_call}
  0x00000001065181ce: jmpq   0x0000000106518051
  0x00000001065181d3: nop
  0x00000001065181d4: nop
  0x00000001065181d5: nop
  0x00000001065181d6: nop
  0x00000001065181d7: callq  0x000000010644f420  ; OopMap{[136]=Oop [128]=Oop [144]=Oop off=892}
                                                ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ;   {static_call}
  0x00000001065181dc: jmpq   0x0000000106518143
  0x00000001065181e1: nop
  0x00000001065181e2: nop
  0x00000001065181e3: mov    0x2a8(%r15),%rax
  0x00000001065181ea: movabs $0x0,%r10
  0x00000001065181f4: mov    %r10,0x2a8(%r15)
  0x00000001065181fb: movabs $0x0,%r10
  0x0000000106518205: mov    %r10,0x2b0(%r15)
  0x000000010651820c: add    $0xb0,%rsp
  0x0000000106518213: pop    %rbp
  0x0000000106518214: jmpq   0x00000001064776a0  ;   {runtime_call}
  0x0000000106518219: hlt
  0x000000010651821a: hlt
  0x000000010651821b: hlt
  0x000000010651821c: hlt
  0x000000010651821d: hlt
  0x000000010651821e: hlt
  0x000000010651821f: hlt
[Stub Code]
  0x0000000106518220: nop                       ;   {no_reloc}
  0x0000000106518221: nop
  0x0000000106518222: nop
  0x0000000106518223: nop
  0x0000000106518224: nop
  0x0000000106518225: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010651822f: jmpq   0x000000010651822f  ;   {runtime_call}
  0x0000000106518234: nop
  0x0000000106518235: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010651823f: jmpq   0x000000010651823f  ;   {runtime_call}
[Exception Handler]
  0x0000000106518244: callq  0x00000001065049a0  ;   {runtime_call}
  0x0000000106518249: mov    %rsp,-0x28(%rsp)
  0x000000010651824e: sub    $0x80,%rsp
  0x0000000106518255: mov    %rax,0x78(%rsp)
  0x000000010651825a: mov    %rcx,0x70(%rsp)
  0x000000010651825f: mov    %rdx,0x68(%rsp)
  0x0000000106518264: mov    %rbx,0x60(%rsp)
  0x0000000106518269: mov    %rbp,0x50(%rsp)
  0x000000010651826e: mov    %rsi,0x48(%rsp)
  0x0000000106518273: mov    %rdi,0x40(%rsp)
  0x0000000106518278: mov    %r8,0x38(%rsp)
  0x000000010651827d: mov    %r9,0x30(%rsp)
  0x0000000106518282: mov    %r10,0x28(%rsp)
  0x0000000106518287: mov    %r11,0x20(%rsp)
  0x000000010651828c: mov    %r12,0x18(%rsp)
  0x0000000106518291: mov    %r13,0x10(%rsp)
  0x0000000106518296: mov    %r14,0x8(%rsp)
  0x000000010651829b: mov    %r15,(%rsp)
  0x000000010651829f: movabs $0x105194e90,%rdi  ;   {external_word}
  0x00000001065182a9: movabs $0x106518249,%rsi  ;   {internal_word}
  0x00000001065182b3: mov    %rsp,%rdx
  0x00000001065182b6: and    $0xfffffffffffffff0,%rsp
  0x00000001065182ba: callq  0x0000000104fc0196  ;   {runtime_call}
  0x00000001065182bf: hlt
[Deopt Handler Code]
  0x00000001065182c0: movabs $0x1065182c0,%r10  ;   {section_word}
  0x00000001065182ca: push   %r10
  0x00000001065182cc: jmpq   0x00000001064503c0  ;   {runtime_call}
  0x00000001065182d1: hlt
  0x00000001065182d2: hlt
  0x00000001065182d3: hlt
  0x00000001065182d4: hlt
  0x00000001065182d5: hlt
  0x00000001065182d6: hlt
  0x00000001065182d7: hlt
Decoding compiled method 0x0000000106517990:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000000011a2b6d48} 'getSecurityManager' '()Ljava/lang/SecurityManager;' in 'java/lang/System'
  #           [sp+0x40]  (sp of caller)
  0x0000000106517ae0: mov    %eax,-0x14000(%rsp)
  0x0000000106517ae7: push   %rbp
  0x0000000106517ae8: sub    $0x30,%rsp
  0x0000000106517aec: movabs $0x11a4a96c0,%rax  ;   {metadata(method data for {method} {0x000000011a2b6d48} 'getSecurityManager' '()Ljava/lang/SecurityManager;' in 'java/lang/System')}
  0x0000000106517af6: mov    0xdc(%rax),%esi
  0x0000000106517afc: add    $0x8,%esi
  0x0000000106517aff: mov    %esi,0xdc(%rax)
  0x0000000106517b05: movabs $0x11a2b6d48,%rax  ;   {metadata({method} {0x000000011a2b6d48} 'getSecurityManager' '()Ljava/lang/SecurityManager;' in 'java/lang/System')}
  0x0000000106517b0f: and    $0x1ff8,%esi
  0x0000000106517b15: cmp    $0x0,%esi
  0x0000000106517b18: je     0x0000000106517b3b
  0x0000000106517b1e: movabs $0x795580c78,%rax  ;   {oop(a 'java/lang/Class' = 'java/lang/System')}
  0x0000000106517b28: mov    0x74(%rax),%eax
  0x0000000106517b2b: shl    $0x3,%rax          ;*getstatic security
                                                ; - java.lang.System::getSecurityManager@0 (line 334)

  0x0000000106517b2f: add    $0x30,%rsp
  0x0000000106517b33: pop    %rbp
  0x0000000106517b34: test   %eax,-0x975a3a(%rip)        # 0x0000000105ba2100
                                                ;   {poll_return}
  0x0000000106517b3a: retq
  0x0000000106517b3b: mov    %rax,0x8(%rsp)
  0x0000000106517b40: movq   $0xffffffffffffffff,(%rsp)
  0x0000000106517b48: callq  0x0000000106507020  ; OopMap{off=109}
                                                ;*synchronization entry
                                                ; - java.lang.System::getSecurityManager@-1 (line 334)
                                                ;   {runtime_call}
  0x0000000106517b4d: jmp    0x0000000106517b1e
  0x0000000106517b4f: nop
  0x0000000106517b50: nop
  0x0000000106517b51: mov    0x2a8(%r15),%rax
  0x0000000106517b58: movabs $0x0,%r10
  0x0000000106517b62: mov    %r10,0x2a8(%r15)
  0x0000000106517b69: movabs $0x0,%r10
  0x0000000106517b73: mov    %r10,0x2b0(%r15)
  0x0000000106517b7a: add    $0x30,%rsp
  0x0000000106517b7e: pop    %rbp
  0x0000000106517b7f: jmpq   0x00000001064776a0  ;   {runtime_call}
  0x0000000106517b84: hlt
  0x0000000106517b85: hlt
  0x0000000106517b86: hlt
  0x0000000106517b87: hlt
  0x0000000106517b88: hlt
  0x0000000106517b89: hlt
  0x0000000106517b8a: hlt
  0x0000000106517b8b: hlt
  0x0000000106517b8c: hlt
  0x0000000106517b8d: hlt
  0x0000000106517b8e: hlt
  0x0000000106517b8f: hlt
  0x0000000106517b90: hlt
  0x0000000106517b91: hlt
  0x0000000106517b92: hlt
  0x0000000106517b93: hlt
  0x0000000106517b94: hlt
  0x0000000106517b95: hlt
  0x0000000106517b96: hlt
  0x0000000106517b97: hlt
  0x0000000106517b98: hlt
  0x0000000106517b99: hlt
  0x0000000106517b9a: hlt
  0x0000000106517b9b: hlt
  0x0000000106517b9c: hlt
  0x0000000106517b9d: hlt
  0x0000000106517b9e: hlt
  0x0000000106517b9f: hlt
[Exception Handler]
[Stub Code]
  0x0000000106517ba0: callq  0x00000001065049a0  ;   {no_reloc}
  0x0000000106517ba5: mov    %rsp,-0x28(%rsp)
  0x0000000106517baa: sub    $0x80,%rsp
  0x0000000106517bb1: mov    %rax,0x78(%rsp)
  0x0000000106517bb6: mov    %rcx,0x70(%rsp)
  0x0000000106517bbb: mov    %rdx,0x68(%rsp)
  0x0000000106517bc0: mov    %rbx,0x60(%rsp)
  0x0000000106517bc5: mov    %rbp,0x50(%rsp)
  0x0000000106517bca: mov    %rsi,0x48(%rsp)
  0x0000000106517bcf: mov    %rdi,0x40(%rsp)
  0x0000000106517bd4: mov    %r8,0x38(%rsp)
  0x0000000106517bd9: mov    %r9,0x30(%rsp)
  0x0000000106517bde: mov    %r10,0x28(%rsp)
  0x0000000106517be3: mov    %r11,0x20(%rsp)
  0x0000000106517be8: mov    %r12,0x18(%rsp)
  0x0000000106517bed: mov    %r13,0x10(%rsp)
  0x0000000106517bf2: mov    %r14,0x8(%rsp)
  0x0000000106517bf7: mov    %r15,(%rsp)
  0x0000000106517bfb: movabs $0x105194e90,%rdi  ;   {external_word}
  0x0000000106517c05: movabs $0x106517ba5,%rsi  ;   {internal_word}
  0x0000000106517c0f: mov    %rsp,%rdx
  0x0000000106517c12: and    $0xfffffffffffffff0,%rsp
  0x0000000106517c16: callq  0x0000000104fc0196  ;   {runtime_call}
  0x0000000106517c1b: hlt
[Deopt Handler Code]
  0x0000000106517c1c: movabs $0x106517c1c,%r10  ;   {section_word}
  0x0000000106517c26: push   %r10
  0x0000000106517c28: jmpq   0x00000001064503c0  ;   {runtime_call}
  0x0000000106517c2d: hlt
  0x0000000106517c2e: hlt
  0x0000000106517c2f: hlt
Decoding compiled method 0x0000000106517690:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000011a323de8} 'getPath' '()Ljava/lang/String;' in [Loaded sun.misc.JavaUtilJarAccess from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
'java/io/File'
  #           [sp+0x40]  (sp of caller)
  0x00000001065177e0: mov    0x8(%rsi),%r10d
  0x00000001065177e4: shl    $0x3,%r10
  0x00000001065177e8: cmp    %rax,%r10
  0x00000001065177eb: jne    0x000000010644ee20  ;   {runtime_call}
  0x00000001065177f1: data32 data32 nopw 0x0(%rax,%rax,1)
  0x00000001065177fc: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x0000000106517800: mov    %eax,-0x14000(%rsp)
  0x0000000106517807: push   %rbp
  0x0000000106517808: sub    $0x30,%rsp         ;*aload_0
                                                ; - java.io.File::getPath@0 (line 512)

  0x000000010651780c: mov    0x10(%rsi),%eax
  0x000000010651780f: shl    $0x3,%rax          ;*getfield path
                                                ; - java.io.File::getPath@1 (line 512)

  0x0000000106517813: add    $0x30,%rsp
  0x0000000106517817: pop    %rbp
  0x0000000106517818: test   %eax,-0x97571e(%rip)        # 0x0000000105ba2100
                                                ;   {poll_return}
  0x000000010651781e: retq
  0x000000010651781f: nop
  0x0000000106517820: nop
  0x0000000106517821: mov    0x2a8(%r15),%rax
  0x0000000106517828: movabs $0x0,%r10
  0x0000000106517832: mov    %r10,0x2a8(%r15)
  0x0000000106517839: movabs $0x0,%r10
  0x0000000106517843: mov    %r10,0x2b0(%r15)
  0x000000010651784a: add    $0x30,%rsp
  0x000000010651784e: pop    %rbp
  0x000000010651784f: jmpq   0x00000001064776a0  ;   {runtime_call}
  0x0000000106517854: hlt
  0x0000000106517855: hlt
  0x0000000106517856: hlt
  0x0000000106517857: hlt
  0x0000000106517858: hlt
  0x0000000106517859: hlt
  0x000000010651785a: hlt
  0x000000010651785b: hlt
  0x000000010651785c: hlt
  0x000000010651785d: hlt
  0x000000010651785e: hlt
  0x000000010651785f: hlt
[Exception Handler]
[Stub Code]
  0x0000000106517860: callq  0x00000001065049a0  ;   {no_reloc}
  0x0000000106517865: mov    %rsp,-0x28(%rsp)
  0x000000010651786a: sub    $0x80,%rsp
  0x0000000106517871: mov    %rax,0x78(%rsp)
  0x0000000106517876: mov    %rcx,0x70(%rsp)
  0x000000010651787b: mov    %rdx,0x68(%rsp)
  0x0000000106517880: mov    %rbx,0x60(%rsp)
  0x0000000106517885: mov    %rbp,0x50(%rsp)
  0x000000010651788a: mov    %rsi,0x48(%rsp)
  0x000000010651788f: mov    %rdi,0x40(%rsp)
  0x0000000106517894: mov    %r8,0x38(%rsp)
  0x0000000106517899: mov    %r9,0x30(%rsp)
  0x000000010651789e: mov    %r10,0x28(%rsp)
  0x00000001065178a3: mov    %r11,0x20(%rsp)
  0x00000001065178a8: mov    %r12,0x18(%rsp)
  0x00000001065178ad: mov    %r13,0x10(%rsp)
  0x00000001065178b2: mov    %r14,0x8(%rsp)
  0x00000001065178b7: mov    %r15,(%rsp)
  0x00000001065178bb: movabs $0x105194e90,%rdi  ;   {external_word}
  0x00000001065178c5: movabs $0x106517865,%rsi  ;   {internal_word}
  0x00000001065178cf: mov    %rsp,%rdx
  0x00000001065178d2: and    $0xfffffffffffffff0,%rsp
  0x00000001065178d6: callq  0x0000000104fc0196  ;   {runtime_call}
  0x00000001065178db: hlt
[Deopt Handler Code]
  0x00000001065178dc: movabs $0x1065178dc,%r10  ;   {section_word}
  0x00000001065178e6: push   %r10
  0x00000001065178e8: jmpq   0x00000001064503c0  ;   {runtime_call}
  0x00000001065178ed: hlt
  0x00000001065178ee: hlt
  0x00000001065178ef: hlt
[Loaded java.util.jar.JavaUtilJarAccessImpl from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.nio.charset.StandardCharsets from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.nio.cs.US_ASCII from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
Decoding compiled method 0x0000000106516c50:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000011a2a16b0} 'equals' '(Ljava/lang/Object;)Z' in 'java/lang/String'
  # this:     rsi:rsi   = 'java/lang/String'
  # parm0:    rdx:rdx   = 'java/lang/Object'
  #           [sp+0x40]  (sp of caller)
  0x0000000106516de0: mov    0x8(%rsi),%r10d
  0x0000000106516de4: shl    $0x3,%r10
  0x0000000106516de8: cmp    %rax,%r10
  0x0000000106516deb: jne    0x000000010644ee20  ;   {runtime_call}
  0x0000000106516df1: data32 data32 nopw 0x0(%rax,%rax,1)
  0x0000000106516dfc: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x0000000106516e00: mov    %eax,-0x14000(%rsp)
  0x0000000106516e07: push   %rbp
  0x0000000106516e08: sub    $0x30,%rsp
  0x0000000106516e0c: movabs $0x11a4ab878,%rax  ;   {metadata(method data for {method} {0x000000011a2a16b0} 'equals' '(Ljava/lang/Object;)Z' in 'java/lang/String')}
  0x0000000106516e16: mov    0xdc(%rax),%edi
  0x0000000106516e1c: add    $0x8,%edi
  0x0000000106516e1f: mov    %edi,0xdc(%rax)
  0x0000000106516e25: movabs $0x11a2a16b0,%rax  ;   {metadata({method} {0x000000011a2a16b0} 'equals' '(Ljava/lang/Object;)Z' in 'java/lang/String')}
  0x0000000106516e2f: and    $0x1ff8,%edi
  0x0000000106516e35: cmp    $0x0,%edi
  0x0000000106516e38: je     0x0000000106517219  ;*aload_0
                                                ; - java.lang.String::equals@0 (line 977)

  0x0000000106516e3e: cmp    %rdx,%rsi
  0x0000000106516e41: movabs $0x11a4ab878,%rax  ;   {metadata(method data for {method} {0x000000011a2a16b0} 'equals' '(Ljava/lang/Object;)Z' in 'java/lang/String')}
  0x0000000106516e4b: movabs $0x108,%rdi
  0x0000000106516e55: jne    0x0000000106516e65
  0x0000000106516e5b: movabs $0x118,%rdi
  0x0000000106516e65: mov    (%rax,%rdi,1),%rbx
  0x0000000106516e69: lea    0x1(%rbx),%rbx
  0x0000000106516e6d: mov    %rbx,(%rax,%rdi,1)
  0x0000000106516e71: je     0x0000000106517208  ;*if_acmpne
                                                ; - java.lang.String::equals@2 (line 977)

  0x0000000106516e77: cmp    $0x0,%rdx
  0x0000000106516e7b: jne    0x0000000106516e96
  0x0000000106516e7d: movabs $0x11a4ab878,%rbx  ;   {metadata(method data for {method} {0x000000011a2a16b0} 'equals' '(Ljava/lang/Object;)Z' in 'java/lang/String')}
  0x0000000106516e87: orl    $0x100,0x120(%rbx)
  0x0000000106516e91: jmpq   0x0000000106516f56
  0x0000000106516e96: movabs $0x7c00016d0,%rcx  ;   {metadata('java/lang/String')}
  0x0000000106516ea0: mov    0x8(%rdx),%edi
  0x0000000106516ea3: shl    $0x3,%rdi
  0x0000000106516ea7: cmp    %rdi,%rcx
  0x0000000106516eaa: jne    0x0000000106516f3a
  0x0000000106516eb0: movabs $0x11a4ab878,%rbx  ;   {metadata(method data for {method} {0x000000011a2a16b0} 'equals' '(Ljava/lang/Object;)Z' in 'java/lang/String')}
  0x0000000106516eba: mov    0x8(%rdx),%ecx
  0x0000000106516ebd: shl    $0x3,%rcx
  0x0000000106516ec1: cmp    0x130(%rbx),%rcx
  0x0000000106516ec8: jne    0x0000000106516ed7
  0x0000000106516eca: addq   $0x1,0x138(%rbx)
  0x0000000106516ed2: jmpq   0x0000000106516f5b
  0x0000000106516ed7: cmp    0x140(%rbx),%rcx
  0x0000000106516ede: jne    0x0000000106516eed
  0x0000000106516ee0: addq   $0x1,0x148(%rbx)
  0x0000000106516ee8: jmpq   0x0000000106516f5b
  0x0000000106516eed: cmpq   $0x0,0x130(%rbx)
  0x0000000106516ef8: jne    0x0000000106516f11
  0x0000000106516efa: mov    %rcx,0x130(%rbx)
  0x0000000106516f01: movq   $0x1,0x138(%rbx)
  0x0000000106516f0c: jmpq   0x0000000106516f5b
  0x0000000106516f11: cmpq   $0x0,0x140(%rbx)
  0x0000000106516f1c: jne    0x0000000106516f35
  0x0000000106516f1e: mov    %rcx,0x140(%rbx)
  0x0000000106516f25: movq   $0x1,0x148(%rbx)
  0x0000000106516f30: jmpq   0x0000000106516f5b
  0x0000000106516f35: jmpq   0x0000000106516f5b
  0x0000000106516f3a: movabs $0x11a4ab878,%rbx  ;   {metadata(method data for {method} {0x000000011a2a16b0} 'equals' '(Ljava/lang/Object;)Z' in 'java/lang/String')}
  0x0000000106516f44: subq   $0x1,0x128(%rbx)
  0x0000000106516f4c: jmpq   0x0000000106516f56
  0x0000000106516f51: jmpq   0x0000000106516f5b
  0x0000000106516f56: xor    %rax,%rax
  0x0000000106516f59: jmp    0x0000000106516f65
  0x0000000106516f5b: movabs $0x1,%rax          ;*instanceof
                                                ; - java.lang.String::equals@8 (line 980)

  0x0000000106516f65: cmp    $0x0,%eax
  0x0000000106516f68: movabs $0x11a4ab878,%rax  ;   {metadata(method data for {method} {0x000000011a2a16b0} 'equals' '(Ljava/lang/Object;)Z' in 'java/lang/String')}
  0x0000000106516f72: movabs $0x158,%rdi
  0x0000000106516f7c: je     0x0000000106516f8c
  0x0000000106516f82: movabs $0x168,%rdi
  0x0000000106516f8c: mov    (%rax,%rdi,1),%rbx
  0x0000000106516f90: lea    0x1(%rbx),%rbx
  0x0000000106516f94: mov    %rbx,(%rax,%rdi,1)
  0x0000000106516f98: je     0x00000001065171f7  ;*ifeq
                                                ; - java.lang.String::equals@11 (line 980)

  0x0000000106516f9e: cmp    $0x0,%rdx
  0x0000000106516fa2: jne    0x0000000106516fbd
  0x0000000106516fa4: movabs $0x11a4ab878,%rbx  ;   {metadata(method data for {method} {0x000000011a2a16b0} 'equals' '(Ljava/lang/Object;)Z' in 'java/lang/String')}
  0x0000000106516fae: orl    $0x100,0x170(%rbx)
  0x0000000106516fb8: jmpq   0x000000010651707d
  0x0000000106516fbd: movabs $0x7c00016d0,%rcx  ;   {metadata('java/lang/String')}
  0x0000000106516fc7: mov    0x8(%rdx),%edi
  0x0000000106516fca: shl    $0x3,%rdi
  0x0000000106516fce: cmp    %rdi,%rcx
  0x0000000106516fd1: jne    0x0000000106517061
  0x0000000106516fd7: movabs $0x11a4ab878,%rbx  ;   {metadata(method data for {method} {0x000000011a2a16b0} 'equals' '(Ljava/lang/Object;)Z' in 'java/lang/String')}
  0x0000000106516fe1: mov    0x8(%rdx),%ecx
  0x0000000106516fe4: shl    $0x3,%rcx
  0x0000000106516fe8: cmp    0x180(%rbx),%rcx
  0x0000000106516fef: jne    0x0000000106516ffe
  0x0000000106516ff1: addq   $0x1,0x188(%rbx)
  0x0000000106516ff9: jmpq   0x000000010651707d
  0x0000000106516ffe: cmp    0x190(%rbx),%rcx
  0x0000000106517005: jne    0x0000000106517014
  0x0000000106517007: addq   $0x1,0x198(%rbx)
  0x000000010651700f: jmpq   0x000000010651707d
  0x0000000106517014: cmpq   $0x0,0x180(%rbx)
  0x000000010651701f: jne    0x0000000106517038
  0x0000000106517021: mov    %rcx,0x180(%rbx)
  0x0000000106517028: movq   $0x1,0x188(%rbx)
  0x0000000106517033: jmpq   0x000000010651707d
  0x0000000106517038: cmpq   $0x0,0x190(%rbx)
  0x0000000106517043: jne    0x000000010651705c
  0x0000000106517045: mov    %rcx,0x190(%rbx)
  0x000000010651704c: movq   $0x1,0x198(%rbx)
  0x0000000106517057: jmpq   0x000000010651707d
  0x000000010651705c: jmpq   0x000000010651707d
  0x0000000106517061: movabs $0x11a4ab878,%rbx  ;   {metadata(method data for {method} {0x000000011a2a16b0} 'equals' '(Ljava/lang/Object;)Z' in 'java/lang/String')}
  0x000000010651706b: subq   $0x1,0x178(%rbx)
  0x0000000106517073: jmpq   0x0000000106517230
  0x0000000106517078: jmpq   0x000000010651707d
  0x000000010651707d: mov    %rdx,%rax          ;*checkcast
                                                ; - java.lang.String::equals@15 (line 981)

  0x0000000106517080: mov    0xc(%rsi),%edi
  0x0000000106517083: shl    $0x3,%rdi          ;*getfield value
                                                ; - java.lang.String::equals@20 (line 982)

  0x0000000106517087: mov    0xc(%rdi),%ebx     ;*arraylength
                                                ; - java.lang.String::equals@23 (line 982)
                                                ; implicit exception: dispatches to 0x0000000106517239
  0x000000010651708a: mov    0xc(%rax),%ecx     ; implicit exception: dispatches to 0x000000010651723e
  0x000000010651708d: shl    $0x3,%rcx          ;*getfield value
                                                ; - java.lang.String::equals@27 (line 983)

  0x0000000106517091: mov    0xc(%rcx),%r8d     ;*arraylength
                                                ; - java.lang.String::equals@30 (line 983)
                                                ; implicit exception: dispatches to 0x0000000106517243
  0x0000000106517095: cmp    %r8d,%ebx
  0x0000000106517098: movabs $0x11a4ab878,%r8   ;   {metadata(method data for {method} {0x000000011a2a16b0} 'equals' '(Ljava/lang/Object;)Z' in 'java/lang/String')}
  0x00000001065170a2: movabs $0x1a8,%r9
  0x00000001065170ac: jne    0x00000001065170bc
  0x00000001065170b2: movabs $0x1b8,%r9
  0x00000001065170bc: mov    (%r8,%r9,1),%r11
  0x00000001065170c0: lea    0x1(%r11),%r11
  0x00000001065170c4: mov    %r11,(%r8,%r9,1)
  0x00000001065170c8: jne    0x00000001065171f7  ;*if_icmpne
                                                ; - java.lang.String::equals@31 (line 983)

  0x00000001065170ce: mov    $0x0,%r8d
  0x00000001065170d4: jmpq   0x0000000106517191  ;*iload_3
                                                ; - java.lang.String::equals@49 (line 987)

  0x00000001065170d9: nopl   0x0(%rax)
  0x00000001065170e0: movslq %r8d,%rbx
  0x00000001065170e3: cmp    0xc(%rdi),%r8d
  0x00000001065170e7: jae    0x0000000106517248
  0x00000001065170ed: movzwl 0x10(%rdi,%rbx,2),%ebx  ;*caload
                                                ; - java.lang.String::equals@60 (line 988)

  0x00000001065170f2: movslq %r8d,%r11
  0x00000001065170f5: cmp    0xc(%rcx),%r8d
  0x00000001065170f9: jae    0x0000000106517251
  0x00000001065170ff: movzwl 0x10(%rcx,%r11,2),%r11d  ;*caload
                                                ; - java.lang.String::equals@65 (line 988)

  0x0000000106517105: cmp    %r11d,%ebx
  0x0000000106517108: movabs $0x11a4ab878,%rbx  ;   {metadata(method data for {method} {0x000000011a2a16b0} 'equals' '(Ljava/lang/Object;)Z' in 'java/lang/String')}
  0x0000000106517112: movabs $0x1e8,%r11
  0x000000010651711c: je     0x000000010651712c
  0x0000000106517122: movabs $0x1f8,%r11
  0x000000010651712c: mov    (%rbx,%r11,1),%r13
  0x0000000106517130: lea    0x1(%r13),%r13
  0x0000000106517134: mov    %r13,(%rbx,%r11,1)
  0x0000000106517138: jne    0x00000001065171d5  ;*if_icmpeq
                                                ; - java.lang.String::equals@66 (line 988)

  0x000000010651713e: inc    %r8d
  0x0000000106517141: movabs $0x11a4ab878,%rbx  ;   {metadata(method data for {method} {0x000000011a2a16b0} 'equals' '(Ljava/lang/Object;)Z' in 'java/lang/String')}
  0x000000010651714b: mov    0xe0(%rbx),%r11d
  0x0000000106517152: add    $0x8,%r11d
  0x0000000106517156: mov    %r11d,0xe0(%rbx)
  0x000000010651715d: movabs $0x11a2a16b0,%rbx  ;   {metadata({method} {0x000000011a2a16b0} 'equals' '(Ljava/lang/Object;)Z' in 'java/lang/String')}
  0x0000000106517167: and    $0xfff8,%r11d
  0x000000010651716e: cmp    $0x0,%r11d
  0x0000000106517172: je     0x000000010651725a  ; OopMap{rcx=Oop rdi=Oop rax=Oop rsi=Oop rdx=Oop off=920}
                                                ;*goto
                                                ; - java.lang.String::equals@74 (line 990)

  0x0000000106517178: test   %eax,-0x97507e(%rip)        # 0x0000000105ba2100
                                                ;   {poll}
  0x000000010651717e: movabs $0x11a4ab878,%rbx  ;   {metadata(method data for {method} {0x000000011a2a16b0} 'equals' '(Ljava/lang/Object;)Z' in 'java/lang/String')}
  0x0000000106517188: incl   0x208(%rbx)
  0x000000010651718e: mov    %r9,%rbx           ;*goto
                                                ; - java.lang.String::equals@74 (line 990)

  0x0000000106517191: mov    %rbx,%r9
  0x0000000106517194: dec    %r9d
  0x0000000106517197: cmp    $0x0,%ebx
  0x000000010651719a: movabs $0x11a4ab878,%rbx  ;   {metadata(method data for {method} {0x000000011a2a16b0} 'equals' '(Ljava/lang/Object;)Z' in 'java/lang/String')}
  0x00000001065171a4: movabs $0x1c8,%r11
  0x00000001065171ae: je     0x00000001065171be
  0x00000001065171b4: movabs $0x1d8,%r11
  0x00000001065171be: mov    (%rbx,%r11,1),%r13
  0x00000001065171c2: lea    0x1(%r13),%r13
  0x00000001065171c6: mov    %r13,(%rbx,%r11,1)
  0x00000001065171ca: je     0x00000001065171e6
  0x00000001065171d0: jmpq   0x00000001065170e0  ;*ifeq
                                                ; - java.lang.String::equals@53 (line 987)

  0x00000001065171d5: mov    $0x0,%eax
  0x00000001065171da: add    $0x30,%rsp
  0x00000001065171de: pop    %rbp
  0x00000001065171df: test   %eax,-0x9750e5(%rip)        # 0x0000000105ba2100
                                                ;   {poll_return}
  0x00000001065171e5: retq                      ;*ireturn
                                                ; - java.lang.String::equals@70 (line 989)

  0x00000001065171e6: mov    $0x1,%eax
  0x00000001065171eb: add    $0x30,%rsp
  0x00000001065171ef: pop    %rbp
  0x00000001065171f0: test   %eax,-0x9750f6(%rip)        # 0x0000000105ba2100
                                                ;   {poll_return}
  0x00000001065171f6: retq                      ;*ireturn
                                                ; - java.lang.String::equals@78 (line 992)

  0x00000001065171f7: mov    $0x0,%eax
  0x00000001065171fc: add    $0x30,%rsp
  0x0000000106517200: pop    %rbp
  0x0000000106517201: test   %eax,-0x975107(%rip)        # 0x0000000105ba2100
                                                ;   {poll_return}
  0x0000000106517207: retq                      ;*ireturn
                                                ; - java.lang.String::equals@80 (line 995)

  0x0000000106517208: mov    $0x1,%eax
  0x000000010651720d: add    $0x30,%rsp
  0x0000000106517211: pop    %rbp
  0x0000000106517212: test   %eax,-0x975118(%rip)        # 0x0000000105ba2100
                                                ;   {poll_return}
  0x0000000106517218: retq
  0x0000000106517219: mov    %rax,0x8(%rsp)
  0x000000010651721e: movq   $0xffffffffffffffff,(%rsp)
  0x0000000106517226: callq  0x0000000106507020  ; OopMap{rsi=Oop rdx=Oop off=1099}
                                                ;*synchronization entry
                                                ; - java.lang.String::equals@-1 (line 977)
                                                ;   {runtime_call}
  0x000000010651722b: jmpq   0x0000000106516e3e
  0x0000000106517230: mov    %rdx,(%rsp)
  0x0000000106517234: callq  0x0000000106504d00  ; OopMap{rdx=Oop rsi=Oop off=1113}
                                                ;*checkcast
                                                ; - java.lang.String::equals@15 (line 981)
                                                ;   {runtime_call}
  0x0000000106517239: callq  0x0000000106476b40  ; OopMap{rdx=Oop rsi=Oop rax=Oop rdi=Oop off=1118}
                                                ;*arraylength
                                                ; - java.lang.String::equals@23 (line 982)
                                                ;   {runtime_call}
  0x000000010651723e: callq  0x0000000106476b40  ; OopMap{rdx=Oop rsi=Oop rax=Oop rdi=Oop off=1123}
                                                ;*getfield value
                                                ; - java.lang.String::equals@27 (line 983)
                                                ;   {runtime_call}
  0x0000000106517243: callq  0x0000000106476b40  ; OopMap{rdx=Oop rsi=Oop rax=Oop rdi=Oop rcx=Oop off=1128}
                                                ;*arraylength
                                                ; - java.lang.String::equals@30 (line 983)
                                                ;   {runtime_call}
  0x0000000106517248: mov    %r8,(%rsp)
  0x000000010651724c: callq  0x0000000106477200  ; OopMap{rcx=Oop rdi=Oop rax=Oop rsi=Oop rdx=Oop off=1137}
                                                ;*caload
                                                ; - java.lang.String::equals@60 (line 988)
                                                ;   {runtime_call}
  0x0000000106517251: mov    %r8,(%rsp)
  0x0000000106517255: callq  0x0000000106477200  ; OopMap{rcx=Oop rdi=Oop rax=Oop rsi=Oop rdx=Oop off=1146}
                                                ;*caload
                                                ; - java.lang.String::equals@65 (line 988)
                                                ;   {runtime_call}
  0x000000010651725a: mov    %rbx,0x8(%rsp)
  0x000000010651725f: movq   $0x4a,(%rsp)
  0x0000000106517267: callq  0x0000000106507020  ; OopMap{rcx=Oop rdi=Oop rax=Oop rsi=Oop rdx=Oop off=1164}
                                                ;*goto
                                                ; - java.lang.String::equals@74 (line 990)
                                                ;   {runtime_call}
  0x000000010651726c: jmpq   0x0000000106517178
  0x0000000106517271: nop
  0x0000000106517272: nop
  0x0000000106517273: mov    0x2a8(%r15),%rax
  0x000000010651727a: movabs $0x0,%r10
  0x0000000106517284: mov    %r10,0x2a8(%r15)
  0x000000010651728b: movabs $0x0,%r10
  0x0000000106517295: mov    %r10,0x2b0(%r15)
  0x000000010651729c: add    $0x30,%rsp
  0x00000001065172a0: pop    %rbp
  0x00000001065172a1: jmpq   0x00000001064776a0  ;   {runtime_call}
  0x00000001065172a6: hlt
  0x00000001065172a7: hlt
  0x00000001065172a8: hlt
  0x00000001065172a9: hlt
  0x00000001065172aa: hlt
  0x00000001065172ab: hlt
  0x00000001065172ac: hlt
  0x00000001065172ad: hlt
  0x00000001065172ae: hlt
  0x00000001065172af: hlt
  0x00000001065172b0: hlt
  0x00000001065172b1: hlt
  0x00000001065172b2: hlt
  0x00000001065172b3: hlt
  0x00000001065172b4: hlt
  0x00000001065172b5: hlt
  0x00000001065172b6: hlt
  0x00000001065172b7: hlt
  0x00000001065172b8: hlt
  0x00000001065172b9: hlt
  0x00000001065172ba: hlt
  0x00000001065172bb: hlt
  0x00000001065172bc: hlt
  0x00000001065172bd: hlt
  0x00000001065172be: hlt
  0x00000001065172bf: hlt
[Exception Handler]
[Stub Code]
  0x00000001065172c0: callq  0x00000001065049a0  ;   {no_reloc}
  0x00000001065172c5: mov    %rsp,-0x28(%rsp)
  0x00000001065172ca: sub    $0x80,%rsp
  0x00000001065172d1: mov    %rax,0x78(%rsp)
  0x00000001065172d6: mov    %rcx,0x70(%rsp)
  0x00000001065172db: mov    %rdx,0x68(%rsp)
  0x00000001065172e0: mov    %rbx,0x60(%rsp)
  0x00000001065172e5: mov    %rbp,0x50(%rsp)
  0x00000001065172ea: mov    %rsi,0x48(%rsp)
  0x00000001065172ef: mov    %rdi,0x40(%rsp)
  0x00000001065172f4: mov    %r8,0x38(%rsp)
  0x00000001065172f9: mov    %r9,0x30(%rsp)
  0x00000001065172fe: mov    %r10,0x28(%rsp)
  0x0000000106517303: mov    %r11,0x20(%rsp)
  0x0000000106517308: mov    %r12,0x18(%rsp)
  0x000000010651730d: mov    %r13,0x10(%rsp)
  0x0000000106517312: mov    %r14,0x8(%rsp)
  0x0000000106517317: mov    %r15,(%rsp)
  0x000000010651731b: movabs $0x105194e90,%rdi  ;   {external_word}
  0x0000000106517325: movabs $0x1065172c5,%rsi  ;   {internal_word}
  0x000000010651732f: mov    %rsp,%rdx
  0x0000000106517332: and    $0xfffffffffffffff0,%rsp
  0x0000000106517336: callq  0x0000000104fc0196  ;   {runtime_call}
  0x000000010651733b: hlt
[Deopt Handler Code]
  0x000000010651733c: movabs $0x10651733c,%r10  ;   {section_word}
  0x0000000106517346: push   %r10
  0x0000000106517348: jmpq   0x00000001064503c0  ;   {runtime_call}
  0x000000010651734d: hlt
  0x000000010651734e: hlt
  0x000000010651734f: hlt
[Loaded sun.nio.cs.ISO_8859_1 from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.nio.cs.UTF_16BE from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.nio.cs.UTF_16LE from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.nio.cs.UTF_16 from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.Queue from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.Deque from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.ArrayDeque from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.zip.ZipCoder from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
Decoding compiled method 0x0000000106516810:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000011a2a2130} 'indexOf' '(I)I' in 'java/lang/String'
  # this:     rsi:rsi   = 'java/lang/String'
  # parm0:    rdx       = int
  #           [sp+0x50]  (sp of caller)
  0x0000000106516980: mov    0x8(%rsi),%r10d
  0x0000000106516984: shl    $0x3,%r10
  0x0000000106516988: cmp    %rax,%r10
  0x000000010651698b: jne    0x000000010644ee20  ;   {runtime_call}
  0x0000000106516991: data32 data32 nopw 0x0(%rax,%rax,1)
  0x000000010651699c: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x00000001065169a0: mov    %eax,-0x14000(%rsp)
  0x00000001065169a7: push   %rbp
  0x00000001065169a8: sub    $0x40,%rsp
  0x00000001065169ac: movabs $0x11a4b4f88,%rcx  ;   {metadata(method data for {method} {0x000000011a2a2130} 'indexOf' '(I)I' in 'java/lang/String')}
  0x00000001065169b6: mov    0xdc(%rcx),%edi
  0x00000001065169bc: add    $0x8,%edi
  0x00000001065169bf: mov    %edi,0xdc(%rcx)
  0x00000001065169c5: movabs $0x11a2a2130,%rcx  ;   {metadata({method} {0x000000011a2a2130} 'indexOf' '(I)I' in 'java/lang/String')}
  0x00000001065169cf: and    $0x1ff8,%edi
  0x00000001065169d5: cmp    $0x0,%edi
  0x00000001065169d8: je     0x0000000106516aa0  ;*aload_0
                                                ; - java.lang.String::indexOf@0 (line 1503)

  0x00000001065169de: mov    %rsi,%rcx
  0x00000001065169e1: movabs $0x11a4b4f88,%rdi  ;   {metadata(method data for {method} {0x000000011a2a2130} 'indexOf' '(I)I' in 'java/lang/String')}
  0x00000001065169eb: mov    0x8(%rcx),%ecx
  0x00000001065169ee: shl    $0x3,%rcx
  0x00000001065169f2: cmp    0x110(%rdi),%rcx
  0x00000001065169f9: jne    [Loaded sun.misc.PerfCounter from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
0x0000000106516a08
  0x00000001065169fb: addq   $0x1,0x118(%rdi)
  0x0000000106516a03: jmpq   0x0000000106516a6e
  0x0000000106516a08: cmp    0x120(%rdi),%rcx
  0x0000000106516a0f: jne    0x0000000106516a1e
  0x0000000106516a11: addq   $0x1,0x128(%rdi)
  0x0000000106516a19: jmpq   0x0000000106516a6e
  0x0000000106516a1e: cmpq   $0x0,0x110(%rdi)
  0x0000000106516a29: jne    0x0000000106516a42
  0x0000000106516a2b: mov    %rcx,0x110(%rdi)
  0x0000000106516a32: movq   $0x1,0x118(%rdi)
  0x0000000106516a3d: jmpq   0x0000000106516a6e
  0x0000000106516a42: cmpq   $0x0,0x120(%rdi)
  0x0000000106516a4d: jne    0x0000000106516a66
  0x0000000106516a4f: mov    %rcx,0x120(%rdi)
  0x0000000106516a56: movq   $0x1,0x128(%rdi)
  0x0000000106516a61: jmpq   0x0000000106516a6e
  0x0000000106516a66: addq   $0x1,0x108(%rdi)
  0x0000000106516a6e: mov    %rdx,%rdi
  0x0000000106516a71: mov    %rdi,%rdx
  0x0000000106516a74: mov    $0x0,%ecx
  0x0000000106516a79: mov    %rsi,%rbx
  0x0000000106516a7c: mov    %rbx,%rsi          ;*invokevirtual indexOf
                                                ; - java.lang.String::indexOf@3 (line 1503)

  0x0000000106516a7f: mov    %edi,0x28(%rsp)
  0x0000000106516a83: mov    %rbx,0x20(%rsp)
  0x0000000106516a88: nop
  0x0000000106516a89: nop
  0x0000000106516a8a: nop
  0x0000000106516a8b: nop
  0x0000000106516a8c: nop
  0x0000000106516a8d: nop
  0x0000000106516a8e: nop
  0x0000000106516a8f: callq  0x000000010644f020  ; OopMap{[32]=Oop off=276}
                                                ;*invokevirtual indexOf
                                                ; - java.lang.String::indexOf@3 (line 1503)
                                                ;   {optimized virtual_call}
  0x0000000106516a94: add    $0x40,%rsp
  0x0000000106516a98: pop    %rbp
  0x0000000106516a99: test   %eax,-0x97499f(%rip)        # 0x0000000105ba2100
                                                ;   {poll_return}
  0x0000000106516a9f: retq
  0x0000000106516aa0: mov    %rcx,0x8(%rsp)
  0x0000000106516aa5: movq   $0xffffffffffffffff,(%rsp)
  0x0000000106516aad: callq  0x0000000106507020  ; OopMap{rsi=Oop off=306}
                                                ;*synchronization entry
                                                ; - java.lang.String::indexOf@-1 (line 1503)
                                                ;   {runtime_call}
  0x0000000106516ab2: jmpq   0x00000001065169de
  0x0000000106516ab7: nop
  0x0000000106516ab8: nop
  0x0000000106516ab9: mov    0x2a8(%r15),%rax
  0x0000000106516ac0: movabs $0x0,%r10
  0x0000000106516aca: mov    %r10,0x2a8(%r15)
  0x0000000106516ad1: movabs $0x0,%r10
  0x0000000106516adb: mov    %r10,0x2b0(%r15)
  0x0000000106516ae2: add    $0x40,%rsp
  0x0000000106516ae6: pop    %rbp
  0x0000000106516ae7: jmpq   0x00000001064776a0  ;   {runtime_call}
  0x0000000106516aec: hlt
  0x0000000106516aed: hlt
  0x0000000106516aee: hlt
  0x0000000106516aef: hlt
  0x0000000106516af0: hlt
  0x0000000106516af1: hlt
  0x0000000106516af2: hlt
  0x0000000106516af3: hlt
  0x0000000106516af4: hlt
  0x0000000106516af5: hlt
  0x0000000106516af6: hlt
  0x0000000106516af7: hlt
  0x0000000106516af8: hlt
  0x0000000106516af9: hlt
  0x0000000106516afa: hlt
  0x0000000106516afb: hlt
  0x0000000106516afc: hlt
  0x0000000106516afd: hlt
  0x0000000106516afe: hlt
  0x0000000106516aff: hlt
[Stub Code]
  0x0000000106516b00: nop                       ;   {no_reloc}
  0x0000000106516b01: nop
  0x0000000106516b02: nop
  0x0000000106516b03: nop
  0x0000000106516b04: nop
  0x0000000106516b05: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000106516b0f: jmpq   0x0000000106516b0f  ;   {runtime_call}
[Exception Handler]
  0x0000000106516b14: callq  0x00000001065049a0  ;   {runtime_call}
  0x0000000106516b19: mov    %rsp,-0x28(%rsp)
  0x0000000106516b1e: sub    $0x80,%rsp
  0x0000000106516b25: mov    %rax,0x78(%rsp)
  0x0000000106516b2a: mov    %rcx,0x70(%rsp)
  0x0000000106516b2f: mov    %rdx,0x68(%rsp)
  0x0000000106516b34: mov    %rbx,0x60(%rsp)
  0x0000000106516b39: mov    %rbp,0x50(%rsp)
  0x0000000106516b3e: mov    %rsi,0x48(%rsp)
  0x0000000106516b43: mov    %rdi,0x40(%rsp)
  0x0000000106516b48: mov    %r8,0x38(%rsp)
  0x0000000106516b4d: mov    %r9,0x30(%rsp)
  0x0000000106516b52: mov    %r10,0x28(%rsp)
  0x0000000106516b57: mov    %r11,0x20(%rsp)
  0x0000000106516b5c: mov    %r12,0x18(%rsp)
  0x0000000106516b61: mov    %r13,0x10(%rsp)
  0x0000000106516b66: mov    %r14,0x8(%rsp)
  0x0000000106516b6b: mov    %r15,(%rsp)
  0x0000000106516b6f: movabs $0x105194e90,%rdi  ;   {external_word}
  0x0000000106516b79: movabs $0x106516b19,%rsi  ;   {internal_word}
  0x0000000106516b83: mov    %rsp,%rdx
  0x0000000106516b86: and    $0xfffffffffffffff0,%rsp
  0x0000000106516b8a: callq  0x0000000104fc0196  ;   {runtime_call}
  0x0000000106516b8f: hlt
[Deopt Handler Code]
  0x0000000106516b90: movabs $0x106516b90,%r10  ;   {section_word}
  0x0000000106516b9a: push   %r10
  0x0000000106516b9c: jmpq   0x00000001064503c0  ;   {runtime_call}
  0x0000000106516ba1: hlt
  0x0000000106516ba2: hlt
  0x0000000106516ba3: hlt
  0x0000000106516ba4: hlt
  0x0000000106516ba5: hlt
  0x0000000106516ba6: hlt
  0x0000000106516ba7: hlt
[Loaded sun.misc.Perf$GetPerfAction from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.misc.Perf from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.misc.PerfCounter$CoreCounters from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.nio.ch.DirectBuffer from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.nio.MappedByteBuffer from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.nio.DirectByteBuffer from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.nio.LongBuffer from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.nio.DirectLongBufferU from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.misc.JarIndex from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.zip.ZipEntry from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.jar.JarEntry from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.jar.JarFile$JarFileEntry from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.zip.ZipFile$ZipFileInputStream from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.zip.Inflater from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.zip.ZStreamRef from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.zip.InflaterInputStream from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.zip.ZipFile$ZipFileInflaterInputStream from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.AbstractSequentialList from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.LinkedList from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.LinkedList$Node from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
Decoding compiled method 0x0000000106518990:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000000011a33a7a0} 'toLowerCase' '(C)C' in 'java/lang/Character'
  # parm0:    rsi       = char
  #           [sp+0x50]  (sp of caller)
  0x0000000106518b20: mov    %eax,-0x14000(%rsp)
  0x0000000106518b27: push   %rbp
  0x0000000106518b28: sub    $0x40,%rsp
  0x0000000106518b2c: movabs $0x11a4d39b0,%rdi  ;   {metadata(method data for {method} {0x000000011a33a7a0} 'toLowerCase' '(C)C' in 'java/lang/Character')}
  0x0000000106518b36: mov    0xdc(%rdi),%ebx
  0x0000000106518b3c: add    $0x8,%ebx
  0x0000000106518b3f: mov    %ebx,0xdc(%rdi)
  0x0000000106518b45: movabs $0x11a33a7a0,%rdi  ;   {metadata({method} {0x000000011a33a7a0} 'toLowerCase' '(C)C' in 'java/lang/Character')}
  0x0000000106518b4f: and    $0x1ff8,%ebx
  0x0000000106518b55: cmp    $0x0,%ebx
  0x0000000106518b58: je     0x0000000106518c8c  ;*iload_0
                                                ; - java.lang.Character::toLowerCase@0 (line 6309)

  0x0000000106518b5e: movabs $0x11a4d39b0,%rdi  ;   {metadata(method data for {method} {0x000000011a33a7a0} 'toLowerCase' '(C)C' in 'java/lang/Character')}
  0x0000000106518b68: addq   $0x1,0x108(%rdi)
  0x0000000106518b70: movabs $0x11a4d3b08,%rdi  ;   {metadata(method data for {method} {0x000000011a33a838} 'toLowerCase' '(I)I' in 'java/lang/Character')}
  0x0000000106518b7a: mov    0xdc(%rdi),%ebx
  0x0000000106518b80: add    $0x8,%ebx
  0x0000000106518b83: mov    %ebx,0xdc(%rdi)
  0x0000000106518b89: movabs $0x11a33a838,%rdi  ;   {metadata({method} {0x000000011a33a838} 'toLowerCase' '(I)I' in 'java/lang/Character')}
  0x0000000106518b93: and    $0x7ffff8,%ebx
  0x0000000106518b99: cmp    $0x0,%ebx
  0x0000000106518b9c: je     0x0000000106518ca3
  0x0000000106518ba2: movabs $0x11a4d3b08,%rdi  ;   {metadata(method data for {method} {0x000000011a33a838} 'toLowerCase' '(I)I' in 'java/lang/Character')}
  0x0000000106518bac: addq   $0x1,0x108(%rdi)
  0x0000000106518bb4: mov    %rsi,%rdi
  0x0000000106518bb7: mov    %rdi,%rsi          ;*invokestatic of
                [Loaded sun.misc.ExtensionDependency from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
                                ; - java.lang.Character::toLowerCase@1 (line 6338)
                                                ; - java.lang.Character::toLowerCase@1 (line 6309)

  0x0000000106518bba: mov    %edi,0x28(%rsp)
  0x0000000106518bbe: nop
  0x0000000106518bbf: callq  0x000000010644f420  ; OopMap{off=164}
                                                ;*invokestatic of
                                                ; - java.lang.Character::toLowerCase@1 (line 6338)
                                                ; - java.lang.Character::toLowerCase@1 (line 6309)
                                                ;   {static_call}
  0x0000000106518bc4: cmp    (%rax),%rax        ; implicit exception: dispatches to 0x0000000106518cba
  0x0000000106518bc7: mov    %rax,%rdx
  0x0000000106518bca: movabs $0x11a4d3b08,%rsi  ;   {metadata(method data for {method} {0x000000011a33a838} 'toLowerCase' '(I)I' in 'java/lang/Character')}
  0x0000000106518bd4: mov    0x8(%rdx),%edx
  0x0000000106518bd7: shl    $0x3,%rdx
  0x0000000106518bdb: cmp    0x120(%rsi),%rdx
  0x0000000106518be2: jne    0x0000000106518bf1
  0x0000000106518be4: addq   $0x1,0x128(%rsi)
  0x0000000106518bec: jmpq   0x0000000106518c57
  0x0000000106518bf1: cmp    0x130(%rsi),%rdx
  0x0000000106518bf8: jne    0x0000000106518c07
  0x0000000106518bfa: addq   $0x1,0x138(%rsi)
  0x0000000106518c02: jmpq   0x0000000106518c57
  0x0000000106518c07: cmpq   $0x0,0x120(%rsi)
  0x0000000106518c12: jne    0x0000000106518c2b
  0x0000000106518c14: mov    %rdx,0x120(%rsi)
  0x0000000106518c1b: movq   $0x1,0x128(%rsi)
  0x0000000106518c26: jmpq   0x0000000106518c57
  0x0000000106518c2b: cmpq   $0x0,0x130(%rsi)
  0x0000000106518c36: jne    0x0000000106518c4f
  0x0000000106518c38: mov    %rdx,0x130(%rsi)
  0x0000000106518c3f: movq   $0x1,0x138(%rsi)
  0x0000000106518c4a: jmpq   0x0000000106518c57
  0x0000000106518c4f: addq   $0x1,0x118(%rsi)
  0x0000000106518c57: mov    0x28(%rsp),%edx
  0x0000000106518c5b: mov    %rax,%rsi          ;*invokevirtual toLowerCase
                                                ; - java.lang.Character::toLowerCase@5 (line 6338)
                                                ; - java.lang.Character::toLowerCase@1 (line 6309)

  0x0000000106518c5e: nop
  0x0000000106518c5f: nop
  0x0000000106518c60: nop
  0x0000000106518c61: nop
  0x0000000106518c62: nop
  0x0000000106518c63: nop
  0x0000000106518c64: nop
  0x0000000106518c65: movabs $0xffffffffffffffff,%rax
  0x0000000106518c6f: callq  0x000000010644f220  ; OopMap{off=340}
                                                ;*invokevirtual toLowerCase
                                                ; - java.lang.Character::toLowerCase@5 (line 6338)
                                                ; - java.lang.Character::toLowerCase@1 (line 6309)
                                                ;   {virtual_call}
  0x0000000106518c74: and    $0xffff,%eax
  0x0000000106518c7a: and    $0xffff,%eax
  0x0000000106518c80: add    $0x40,%rsp
  0x0000000106518c84: pop    %rbp
  0x0000000106518c85: test   %eax,-0x976b8b(%rip)        # 0x0000000105ba2100
                                                ;   {poll_return}
  0x0000000106518c8b: retq
  0x0000000106518c8c: mov    %rdi,0x8(%rsp)
  0x0000000106518c91: movq   $0xffffffffffffffff,(%rsp)
  0x0000000106518c99: callq  0x0000000106507020  ; OopMap{off=382}
                                                ;*synchronization entry
                                                ; - java.lang.Character::toLowerCase@-1 (line 6309)
                                                ;   {runtime_call}
  0x0000000106518c9e: jmpq   0x0000000106518b5e
  0x0000000106518ca3: mov    %rdi,0x8(%rsp)
  0x0000000106518ca8: movq   $0xffffffffffffffff,(%rsp)
  0x0000000106518cb0: callq  0x0000000106507020  ; OopMap{off=405}
                                                ;*synchronization entry
                                                ; - java.lang.Character::toLowerCase@-1 (line 6338)
                                                ; - java.lang.Character::toLowerCase@1 (line 6309)
                                                ;   {runtime_call}
  0x0000000106518cb5: jmpq   0x0000000106518ba2
  0x0000000106518cba: callq  0x0000000106476b40  ; OopMap{rax=Oop off=415}
                                                ;*invokevirtual toLowerCase
                                                ; - java.lang.Character::toLowerCase@5 (line 6338)
                                                ; - java.lang.Character::toLowerCase@1 (line 6309)
                                                ;   {runtime_call}
  0x0000000106518cbf: nop
  0x0000000106518cc0: nop
  0x0000000106518cc1: mov    0x2a8(%r15),%rax
  0x0000000106518cc8: movabs $0x0,%r10
  0x0000000106518cd2: mov    %r10,0x2a8(%r15)
  0x0000000106518cd9: movabs $0x0,%r10
  0x0000000106518ce3: mov    %r10,0x2b0(%r15)
  0x0000000106518cea: add    $0x40,%rsp
  0x0000000106518cee: pop    %rbp
  0x0000000106518cef: jmpq   0x00000001064776a0  ;   {runtime_call}
  0x0000000106518cf4: hlt
  0x0000000106518cf5: hlt
  0x0000000106518cf6: hlt
  0x0000000106518cf7: hlt
  0x0000000106518cf8: hlt
  0x0000000106518cf9: hlt
  0x0000000106518cfa: hlt
  0x0000000106518cfb: hlt
  0x0000000106518cfc: hlt
  0x0000000106518cfd: hlt
  0x0000000106518cfe: hlt
  0x0000000106518cff: hlt
[Stub Code]
  0x0000000106518d00: nop                       ;   {no_reloc}
  0x0000000106518d01: nop
  0x0000000106518d02: nop
  0x0000000106518d03: nop
  0x0000000106518d04: nop
  0x0000000106518d05: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000106518d0f: jmpq   0x0000000106518d0f  ;   {runtime_call}
  0x0000000106518d14: nop
  0x0000000106518d15: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000106518d1f: jmpq   0x0000000106518d1f  ;   {runtime_call}
[Exception Handler]
  0x0000000106518d24: callq  0x00000001065049a0  ;   {runtime_call}
  0x0000000106518d29: mov    %rsp,-0x28(%rsp)
  0x0000000106518d2e: sub    $0x80,%rsp
  0x0000000106518d35: mov    %rax,0x78(%rsp)
  0x0000000106518d3a: mov    %rcx,0x70(%rsp)
  0x0000000106518d3f: mov    %rdx,0x68(%rsp)
  0x0000000106518d44: mov    %rbx,0x60(%rsp)
  0x0000000106518d49: mov    %rbp,0x50(%rsp)
  0x0000000106518d4e: mov    %rsi,0x48(%rsp)
  0x0000000106518d53: mov    %rdi,0x40(%rsp)
  0x0000000106518d58: mov    %r8,0x38(%rsp)
  0x0000000106518d5d: mov    %r9,0x30(%rsp)
  0x0000000106518d62: mov    %r10,0x28(%rsp)
  0x0000000106518d67: mov    %r11,0x20(%rsp)
  0x0000000106518d6c: mov    %r12,0x18(%rsp)
  0x0000000106518d71: mov    %r13,0x10(%rsp)
  0x0000000106518d76: mov    %r14,0x8(%rsp)
  0x0000000106518d7b: mov    %r15,(%rsp)
  0x0000000106518d7f: movabs $0x105194e90,%rdi  ;   {external_word}
  0x0000000106518d89: movabs $0x106518d29,%rsi  ;   {internal_word}
  0x0000000106518d93: mov    %rsp,%rdx
  0x0000000106518d96: and    $0xfffffffffffffff0,%rsp
  0x0000000106518d9a: callq  0x0000000104fc0196  ;   {runtime_call}
  0x0000000106518d9f: hlt
[Deopt Handler Code]
  0x0000000106518da0: movabs $0x106518da0,%r10  ;   {section_word}
  0x0000000106518daa: push   %r10
  0x0000000106518dac: jmpq   0x00000001064503c0  ;   {runtime_call}
  0x0000000106518db1: hlt
  0x0000000106518db2: hlt
  0x0000000106518db3: hlt
  0x0000000106518db4: hlt
  0x0000000106518db5: hlt
  0x0000000106518db6: hlt
  0x0000000106518db7: hlt
[Loaded sun.misc.IOUtils from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
Decoding compiled method 0x0000000106518f10:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000011a313b38} 'append' '(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;' in 'java/lang/AbstractStringBuilder'
  # this:     rsi:rsi   = 'java/lang/AbstractStringBuilder'
  # parm0:    rdx:rdx   = 'java/lang/String'
  #           [sp+0xf0]  (sp of caller)
  0x00000001065190e0: mov    0x8(%rsi),%r10d
  0x00000001065190e4: shl    $0x3,%r10
  0x00000001065190e8: cmp    %rax,%r10
  0x00000001065190eb: jne    0x000000010644ee20  ;   {runtime_call}
  0x00000001065190f1: data32 data32 nopw 0x0(%rax,%rax,1)
  0x00000001065190fc: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x0000000106519100: mov    %eax,-0x14000(%rsp)
  0x0000000106519107: push   %rbp
  0x0000000106519108: sub    $0xe0,%rsp
  0x000000010651910f: mov    %rsi,0xb8(%rsp)
  0x0000000106519117: mov    %rdx,0xc0(%rsp)
  0x000000010651911f: movabs $0x11a496c30,%rdi  ;   {metadata(method data for {method} {0x000000011a313b38} 'append' '(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;' in 'java/lang/AbstractStringBuilder')}
  0x0000000106519129: mov    0xdc(%rdi),%ebx
  0x000000010651912f: add    $0x8,%ebx
  0x0000000106519132: mov    %ebx,0xdc(%rdi)
  0x0000000106519138: movabs $0x11a313b38,%rdi  ;   {metadata({method} {0x000000011a313b38} 'append' '(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;' in 'java/lang/AbstractStringBuilder')}
  0x0000000106519142: and    $0x1ff8,%ebx
  0x0000000106519148: cmp    $0x0,%ebx
  0x000000010651914b: je     0x0000000106519673  ;*aload_1
                                                ; - java.lang.AbstractStringBuilder::append@0 (line 445)

  0x0000000106519151: cmp    $0x0,%rdx
  0x0000000106519155: movabs $0x11a496c30,%rdi  ;   {metadata(method data for {method} {0x000000011a313b38} 'append' '(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;' in 'java/lang/AbstractStringBuilder')}
  0x000000010651915f: movabs $0x108,%rbx
  0x0000000106519169: jne    0x0000000106519179
  0x000000010651916f: movabs $0x118,%rbx
  0x0000000106519179: mov    (%rdi,%rbx,1),%rax
  0x000000010651917d: lea    0x1(%rax),%rax
  0x0000000106519181: mov    %rax,(%rdi,%rbx,1)
  0x0000000106519185: je     0x0000000106519643  ;*ifnonnull
                                                ; - java.lang.AbstractStringBuilder::append@1 (line 445)

  0x000000010651918b: cmp    (%rdx),%rax        ;*invokevirtual length
                                                ; - java.lang.AbstractStringBuilder::append@10 (line 447)
                                                ; implicit exception: dispatches to 0x000000010651968a
  0x000000010651918e: mov    %rdx,%rdi
  0x0000000106519191: movabs $0x11a496c30,%rbx  ;   {metadata(method data for {method} {0x000000011a313b38} 'append' '(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;' in 'java/lang/AbstractStringBuilder')}
  0x000000010651919b: mov    0x8(%rdi),%edi
  0x000000010651919e: shl    $0x3,%rdi
  0x00000001065191a2: cmp    0x140(%rbx),%rdi
  0x00000001065191a9: jne    0x00000001065191b8
  0x00000001065191ab: addq   $0x1,0x148(%rbx)
  0x00000001065191b3: jmpq   0x000000010651921e
  0x00000001065191b8: cmp    0x150(%rbx),%rdi
  0x00000001065191bf: jne    0x00000001065191ce
  0x00000001065191c1: addq   $0x1,0x158(%rbx)
  0x00000001065191c9: jmpq   0x000000010651921e
  0x00000001065191ce: cmpq   $0x0,0x140(%rbx)
  0x00000001065191d9: jne    0x00000001065191f2
  0x00000001065191db: mov    %rdi,0x140(%rbx)
  0x00000001065191e2: movq   $0x1,0x148(%rbx)
  0x00000001065191ed: jmpq   0x000000010651921e
  0x00000001065191f2: cmpq   $0x0,0x150(%rbx)
  0x00000001065191fd: jne    0x0000000106519216
  0x00000001065191ff: mov    %rdi,0x150(%rbx)
  0x0000000106519206: movq   $0x1,0x158(%rbx)
  0x0000000106519211: jmpq   0x000000010651921e
  0x0000000106519216: addq   $0x1,0x138(%rbx)
  0x000000010651921e: movabs $0x11a4760c0,%rdi  ;   {metadata(method data for {method} {0x000000011a2a0cf8} 'length' '()I' in 'java/lang/String')}
  0x0000000106519228: mov    0xdc(%rdi),%ebx
  0x000000010651922e: add    $0x8,%ebx
  0x0000000106519231: mov    %ebx,0xdc(%rdi)
  0x0000000106519237: movabs $0x11a2a0cf8,%rdi  ;   {metadata({method} {0x000000011a2a0cf8} 'length' '()I' in 'java/lang/String')}
  0x0000000106519241: and    $0x7ffff8,%ebx
  0x0000000106519247: cmp    $0x0,%ebx
  0x000000010651924a: je     0x000000010651968f
  0x0000000106519250: mov    0xc(%rdx),%edi
  0x0000000106519253: shl    $0x3,%rdi          ;*getfield value
                                                ; - java.lang.String::length@1 (line 623)
                                                ; - java.lang.AbstractStringBuilder::append@10 (line 447)

  0x0000000106519257: mov    0xc(%rdi),%edi     ;*arraylength
                                                ; - java.lang.String::length@4 (line 623)
                                                ; - java.lang.AbstractStringBuilder::append@10 (line 447)
                                                ; implicit exception: dispatches to 0x00000001065196a6
  0x000000010651925a: mov    %edi,0xac(%rsp)
  0x0000000106519261: mov    0xc(%rsi),%ebx     ;*getfield count
                                                ; - java.lang.AbstractStringBuilder::append@16 (line 448)

  0x0000000106519264: add    %edi,%ebx
  0x0000000106519266: mov    %ebx,0xc8(%rsp)
  0x000000010651926d: mov    %rsi,%rax
  0x0000000106519270: movabs $0x11a496c30,%rcx  ;   {metadata(method data for {method} {0x000000011a313b38} 'append' '(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;' in 'java/lang/AbstractStringBuilder')}
  0x000000010651927a: addq   $0x1,0x168(%rcx)
  0x0000000106519282: movabs $0x11a4a5750,%rax  ;   {metadata(method data for {method} {0x000000011a3131e0} 'ensureCapacityInternal' '(I)V' in 'java/lang/AbstractStringBuilder')}
  0x000000010651928c: mov    0xdc(%rax),%ecx
  0x0000000106519292: add    $0x8,%ecx
  0x0000000106519295: mov    %ecx,0xdc(%rax)
  0x000000010651929b: movabs $0x11a3131e0,%rax  ;   {metadata({method} {0x000000011a3131e0} 'ensureCapacityInternal' '(I)V' in 'java/lang/AbstractStringBuilder')}
  0x00000001065192a5: and    $0x7ffff8,%ecx
  0x00000001065192ab: cmp    $0x0,%ecx
  0x00000001065192ae: je     0x00000001065196ab
  0x00000001065192b4: mov    0x10(%rsi),%eax
  0x00000001065192b7: shl    $0x3,%rax          ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@2 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)

  0x00000001065192bb: mov    %rax,0xb0(%rsp)
  0x00000001065192c3: mov    0xc(%rax),%ecx     ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ; implicit exception: dispatches to 0x00000001065196c2
  0x00000001065192c6: mov    %rbx,%r8
  0x00000001065192c9: sub    %ecx,%r8d
  0x00000001065192cc: cmp    $0x0,%r8d
  0x00000001065192d0: movabs $0x11a4a5750,%r8   ;   {metadata(method data for {method} {0x000000011a3131e0} 'ensureCapacityInternal' '(I)V' in 'java/lang/AbstractStringBuilder')}
  0x00000001065192da: movabs $0x108,%r9
  0x00000001065192e4: jle    0x00000001065192f4
  0x00000001065192ea: movabs $0x118,%r9
  0x00000001065192f4: mov    (%r8,%r9,1),%r11
  0x00000001065192f8: lea    0x1(%r11),%r11
  0x00000001065192fc: mov    %r11,(%r8,%r9,1)
  0x0000000106519300: jle    0x000000010651955e  ;*ifle
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@7 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)

  0x0000000106519306: mov    %ecx,0xa8(%rsp)
  0x000000010651930d: mov    %rsi,%r8
  0x0000000106519310: movabs $0x11a4a5750,%r9   ;   {metadata(method data for {method} {0x000000011a3131e0} 'ensureCapacityInternal' '(I)V' in 'java/lang/AbstractStringBuilder')}
  0x000000010651931a: addq   $0x1,0x128(%r9)
  0x0000000106519322: mov    %rbx,%rdx
  0x0000000106519325: mov    %rsi,%r9
  0x0000000106519328: mov    %r9,%rsi           ;*invokespecial newCapacity
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)

  0x000000010651932b: nop
  0x000000010651932c: nop
  0x000000010651932d: nop
  0x000000010651932e: nop
  0x000000010651932f: callq  0x000000010644f020  ; OopMap{[184]=Oop [192]=Oop [176]=Oop off=596}
                                                ;*invokespecial newCapacity
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ;   {optimized virtual_call}
  0x0000000106519334: movabs $0x11a4a5750,%rbx  ;   {metadata(method data for {method} {0x000000011a3131e0} 'ensureCapacityInternal' '(I)V' in 'java/lang/AbstractStringBuilder')}
  0x000000010651933e: addq   $0x1,0x138(%rbx)
  0x0000000106519346: movabs $0x11a4a5e98,%rbx  ;   {metadata(method data for {method} {0x000000011a3bad30} 'copyOf' '([CI)[C' in 'java/util/Arrays')}
  0x0000000106519350: mov    0xdc(%rbx),%edx
  0x0000000106519356: add    $0x8,%edx
  0x0000000106519359: mov    %edx,0xdc(%rbx)
  0x000000010651935f: movabs $0x11a3bad30,%rbx  ;   {metadata({method} {0x000000011a3bad30} 'copyOf' '([CI)[C' in 'java/util/Arrays')}
  0x0000000106519369: and    $0x7ffff8,%edx
  0x000000010651936f: cmp    $0x0,%edx
  0x0000000106519372: je     0x00000001065196c7
  0x0000000106519378: mov    %rax,%rbx
  0x000000010651937b: movabs $0x7c0000208,%rdx  ;   {metadata({type array char})}
  0x0000000106519385: mov    %rax,%r11
  0x0000000106519388: movslq %ebx,%rbx
  0x000000010651938b: mov    %rbx,%rdi
  0x000000010651938e: cmp    $0xffffff,%rbx
  0x0000000106519395: ja     0x00000001065196de
  0x000000010651939b: movabs $0x17,%rsi
  0x00000001065193a5: lea    (%rsi,%rbx,2),%rsi
  0x00000001065193a9: and    $0xfffffffffffffff8,%rsi
  0x00000001065193ad: mov    0x60(%r15),%rax
  0x00000001065193b1: lea    (%rax,%rsi,1),%rsi
  0x00000001065193b5: cmp    0x70(%r15),%rsi
  0x00000001065193b9: ja     0x00000001065196de
  0x00000001065193bf: mov    %rsi,0x60(%r15)
  0x00000001065193c3: sub    %rax,%rsi
  0x00000001065193c6: movq   $0x1,(%rax)
  0x00000001065193cd: mov    %rdx,%rcx
  0x00000001065193d0: shr    $0x3,%rcx
  0x00000001065193d4: mov    %ecx,0x8(%rax)
  0x00000001065193d7: mov    %ebx,0xc(%rax)
  0x00000001065193da: sub    $0x10,%rsi
  0x00000001065193de: je     0x00000001065193f5
  0x00000001065193e4: xor    %rbx,%rbx
  0x00000001065193e7: shr    $0x3,%rsi
  0x00000001065193eb: mov    %rbx,0x8(%rax,%rsi,8)
  0x00000001065193f0: dec    %rsi
  0x00000001065193f3: jne    0x00000001065193eb  ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)

  0x00000001065193f5: movabs $0x11a4a5e98,%rsi  ;   {metadata(method data for {method} {0x000000011a3bad30} 'copyOf' '([CI)[C' in 'java/util/Arrays')}
  0x00000001065193ff: addq   $0x1,0x108(%rsi)
  0x0000000106519407: movabs $0x11a46bfa0,%rsi  ;   {metadata(method data for {method} {0x000000011a395fb8} 'min' '(II)I' in 'java/lang/Math')}
  0x0000000106519411: mov    0xdc(%rsi),%edx
  0x0000000106519417: add    $0x8,%edx
  0x000000010651941a: mov    %edx,0xdc(%rsi)
  0x0000000106519420: movabs $0x11a395fb8,%rsi  ;   {metadata({method} {0x000000011a395fb8} 'min' '(II)I' in 'java/lang/Math')}
  0x000000010651942a: and    $0x7ffff8,%edx
  0x0000000106519430: cmp    $0x0,%edx
  0x0000000106519433: je     0x00000001065196e8
  0x0000000106519439: mov    0xa8(%rsp),%ecx
  0x0000000106519440: cmp    %r11d,%ecx
  0x0000000106519443: movabs $0x11a46bfa0,%rsi  ;   {metadata(method data for {method} {0x000000011a395fb8} 'min' '(II)I' in 'java/lang/Math')}
  0x000000010651944d: movabs $0x108,%rdx
  0x0000000106519457: jg     0x0000000106519467
  0x000000010651945d: movabs $0x118,%rdx
  0x0000000106519467: mov    (%rsi,%rdx,1),%r8
  0x000000010651946b: lea    0x1(%r8),%r8
  0x000000010651946f: mov    %r8,(%rsi,%rdx,1)
  0x0000000106519473: jg     0x0000000106519491  ;*if_icmpgt
                                                ; - java.lang.Math::min@2 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)

  0x0000000106519479: movabs $0x11a46bfa0,%rsi  ;   {metadata(method data for {method} {0x000000011a395fb8} 'min' '(II)I' in 'java/lang/Math')}
  0x0000000106519483: incl   0x128(%rsi)
  0x0000000106519489: mov    %rcx,%r9
  0x000000010651948c: jmpq   0x0000000106519494  ;*goto
                                                ; - java.lang.Math::min@6 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)

  0x0000000106519491: mov    %r11,%r9           ;*ireturn
                                                ; - java.lang.Math::min@10 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)

  0x0000000106519494: mov    %r11d,0xcc(%rsp)
  0x000000010651949c: mov    0xb0(%rsp),%rdi
  0x00000001065194a4: movabs $0x11a4a5e98,%rsi  ;   {metadata(method data for {method} {0x000000011a3bad30} 'copyOf' '([CI)[C' in 'java/util/Arrays')}
  0x00000001065194ae: addq   $0x1,0x118(%rsi)
  0x00000001065194b6: mov    %rdi,%rsi
  0x00000001065194b9: mov    $0x0,%edx
  0x00000001065194be: mov    %rax,%rcx
  0x00000001065194c1: mov    $0x0,%r8d
  0x00000001065194c7: mov    %rax,0xd0(%rsp)
  0x00000001065194cf: lea    (%rdx,%r9,1),%rdi
  0x00000001065194d3: cmp    0xc(%rsi),%edi
  0x00000001065194d6: ja     0x00000001065196ff
  0x00000001065194dc: lea    (%r8,%r9,1),%rdi
  0x00000001065194e0: cmp    0xc(%rcx),%edi
  0x00000001065194e3: ja     0x00000001065196ff
  0x00000001065194e9: test   %r9d,%r9d
  0x00000001065194ec: jl     0x00000001065196ff
  0x00000001065194f2: je     0x000000010651952e
  0x00000001065194f8: movslq %edx,%rdx
  0x00000001065194fb: movslq %r8d,%r8
  0x00000001065194fe: lea    0x10(%rsi,%rdx,2),%rdi
  0x0000000106519503: lea    0x10(%rcx,%r8,2),%rsi
  0x0000000106519508: mov    %r9,%rdx
  0x000000010651950b: test   $0xf,%esp
  0x0000000106519511: je     0x0000000106519529
  0x0000000106519517: sub    $0x8,%rsp
  0x000000010651951b: callq  Stub::jshort_disjoint_arraycopy
                                                ;   {runtime_call}
  0x0000000106519520: add    $0x8,%rsp
  0x0000000106519524: jmpq   0x000000010651952e
  0x0000000106519529: callq  Stub::jshort_disjoint_arraycopy
                                                ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ;   {runtime_call}
  0x000000010651952e: mov    0xd0(%rsp),%rax
  0x0000000106519536: mov    0xb8(%rsp),%rsi
  0x000000010651953e: mov    %rax,%r10
  0x0000000106519541: shr    $0x3,%r10
  0x0000000106519545: mov    %r10d,0x10(%rsi)
  0x0000000106519549: mov    %rsi,%rdx
  0x000000010651954c: shr    $0x9,%rdx
  0x0000000106519550: movabs $0x111dc9000,%rcx
  0x000000010651955a: movb   $0x0,(%rdx,%rcx,1)  ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@23 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)

  0x000000010651955e: mov    0xac(%rsp),%edi
  0x0000000106519565: mov    0x10(%rsi),%r8d
  0x0000000106519569: shl    $0x3,%r8           ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::append@28 (line 449)

  0x000000010651956d: mov    0xc(%rsi),%r9d     ;*getfield count
                                                ; - java.lang.AbstractStringBuilder::append@32 (line 449)

  0x0000000106519571: mov    0xc0(%rsp),%rdx
  0x0000000106519579: movabs $0x11a496c30,%rcx  ;   {metadata(method data for {method} {0x000000011a313b38} 'append' '(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;' in 'java/lang/AbstractStringBuilder')}
  0x0000000106519583: mov    0x8(%rdx),%edx
  0x0000000106519586: shl    $0x3,%rdx
  0x000000010651958a: cmp    0x180(%rcx),%rdx
  0x0000000106519591: jne    0x00000001065195a0
  0x0000000106519593: addq   $0x1,0x188(%rcx)
  0x000000010651959b: jmpq   0x0000000106519606
  0x00000001065195a0: cmp    0x190(%rcx),%rdx
  0x00000001065195a7: jne    0x00000001065195b6
  0x00000001065195a9: addq   $0x1,0x198(%rcx)
  0x00000001065195b1: jmpq   0x0000000106519606
  0x00000001065195b6: cmpq   $0x0,0x180(%rcx)
  0x00000001065195c1: jne    0x00000001065195da
  0x00000001065195c3: mov    %rdx,0x180(%rcx)
  0x00000001065195ca: movq   $0x1,0x188(%rcx)
  0x00000001065195d5: jmpq   0x0000000106519606
  0x00000001065195da: cmpq   $0x0,0x190(%rcx)
  0x00000001065195e5: jne    0x00000001065195fe
  0x00000001065195e7: mov    %rdx,0x190(%rcx)
  0x00000001065195ee: movq   $0x1,0x198(%rcx)
  0x00000001065195f9: jmpq   0x0000000106519606
  0x00000001065195fe: addq   $0x1,0x178(%rcx)
  0x0000000106519606: mov    $0x0,%edx
  0x000000010651960b: mov    %rdi,%rcx
  0x000000010651960e: mov    0xc0(%rsp),%rsi    ;*invokevirtual getChars
                                                ; - java.lang.AbstractStringBuilder::append@35 (line 449)

  0x0000000106519616: nop
  0x0000000106519617: callq  0x000000010644f020  ; OopMap{[192]=Oop [184]=Oop off=1340}
                                                ;*invokevirtual getChars
                                                ; - java.lang.AbstractStringBuilder::append@35 (line 449)
                                                ;   {optimized virtual_call}
  0x000000010651961c: mov    0xb8(%rsp),%rsi
  0x0000000106519624: mov    0xc(%rsi),%eax     ;*getfield count
                                                ; - java.lang.AbstractStringBuilder::append@40 (line 450)

  0x0000000106519627: add    0xac(%rsp),%eax
  0x000000010651962e: mov    %eax,0xc(%rsi)     ;*putfield count
                                                ; - java.lang.AbstractStringBuilder::append@45 (line 450)

  0x0000000106519631: mov    %rsi,%rax
  0x0000000106519634: add    $0xe0,%rsp
  0x000000010651963b: pop    %rbp
  0x000000010651963c: test   %eax,-0x977542(%rip)        # 0x0000000105ba2100
                                                ;   {poll_return}
  0x0000000106519642: retq                      ;*areturn
                                                ; - java.lang.AbstractStringBuilder::append@49 (line 451)

  0x0000000106519643: mov    %rsi,%rdi
  0x0000000106519646: movabs $0x11a496c30,%rbx  ;   {metadata(method data for {method} {0x000000011a313b38} 'append' '(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;' in 'java/lang/AbstractStringBuilder')}
  0x0000000106519650: addq   $0x1,0x128(%rbx)
  0x0000000106519658: mov    %rsi,%rdi
  0x000000010651965b: mov    %rdi,%rsi          ;*invokespecial appendNull
                                                ; - java.lang.AbstractStringBuilder::append@5 (line 446)

  0x000000010651965e: nop
  0x000000010651965f: callq  0x000000010644f020  ; OopMap{[184]=Oop [192]=Oop off=1412}
                                                ;*invokespecial appendNull
                                                ; - java.lang.AbstractStringBuilder::append@5 (line 446)
                                                ;   {optimized virtual_call}
  0x0000000106519664: add    $0xe0,%rsp
  0x000000010651966b: pop    %rbp
  0x000000010651966c: test   %eax,-0x977572(%rip)        # 0x0000000105ba2100
                                                ;   {poll_return}
  0x0000000106519672: retq
  0x0000000106519673: mov    %rdi,0x8(%rsp)
  0x0000000106519678: movq   $0xffffffffffffffff,(%rsp)
  0x0000000106519680: callq  0x0000000106507020  ; OopMap{rsi=Oop [184]=Oop rdx=Oop [192]=Oop off=1445}
                                                ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::append@-1 (line 445)
                                                ;   {runtime_call}
  0x0000000106519685: jmpq   0x0000000106519151
  0x000000010651968a: callq  0x0000000106476b40  ; OopMap{rsi=Oop [184]=Oop rdx=Oop [192]=Oop off=1455}
                                                ;*invokevirtual length
                                                ; - java.lang.AbstractStringBuilder::append@10 (line 447)
                                                ;   {runtime_call}
  0x000000010651968f: mov    %rdi,0x8(%rsp)
  0x0000000106519694: movq   $0xffffffffffffffff,(%rsp)
  0x000000010651969c: callq  0x0000000106507020  ; OopMap{rsi=Oop [184]=Oop rdx=Oop [192]=Oop off=1473}
                                                ;*synchronization entry
                                                ; - java.lang.String::length@-1 (line 623)
                                                ; - java.lang.AbstractStringBuilder::append@10 (line 447)
                                                ;   {runtime_call}
  0x00000001065196a1: jmpq   0x0000000106519250
  0x00000001065196a6: callq  0x0000000106476b40  ; OopMap{rsi=Oop [184]=Oop rdx=Oop [192]=Oop off=1483}
                                                ;*arraylength
                                                ; - java.lang.String::length@4 (line 623)
                                                ; - java.lang.AbstractStringBuilder::append@10 (line 447)
                                                ;   {runtime_call}
  0x00000001065196ab: mov    %rax,0x8(%rsp)
  0x00000001065196b0: movq   $0xffffffffffffffff,(%rsp)
  0x00000001065196b8: callq  0x0000000106507020  ; OopMap{rsi=Oop [184]=Oop rdx=Oop [192]=Oop off=1501}
                                                ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@-1 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ;   {runtime_call}
  0x00000001065196bd: jmpq   0x00000001065192b4
  0x00000001065196c2: callq  0x0000000106476b40  ; OopMap{rsi=Oop [184]=Oop rdx=Oop [192]=Oop rax=Oop [176]=Oop off=1511}
                                                ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ;   {runtime_call}
  0x00000001065196c7: mov    %rbx,0x8(%rsp)
  0x00000001065196cc: movq   $0xffffffffffffffff,(%rsp)
  0x00000001065196d4: callq  0x0000000106507020  ; OopMap{[184]=Oop [192]=Oop [176]=Oop off=1529}
                                                ;*synchronization entry
                                                ; - java.util.Arrays::copyOf@-1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ;   {runtime_call}
  0x00000001065196d9: jmpq   0x0000000106519378
  0x00000001065196de: callq  0x00000001064758a0  ; OopMap{[184]=Oop [192]=Oop [176]=Oop off=1539}
                                                ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ;   {runtime_call}
  0x00000001065196e3: jmpq   0x00000001065193f5
  0x00000001065196e8: mov    %rsi,0x8(%rsp)
  0x00000001065196ed: movq   $0xffffffffffffffff,(%rsp)
  0x00000001065196f5: callq  0x0000000106507020  ; OopMap{[184]=Oop [192]=Oop [176]=Oop rax=Oop off=1562}
                                                ;*synchronization entry
                                                ; - java.lang.Math::min@-1 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ;   {runtime_call}
  0x00000001065196fa: jmpq   0x0000000106519439
  0x00000001065196ff: callq  0x000000010644f420  ; OopMap{[184]=Oop [192]=Oop [208]=Oop [176]=Oop off=1572}
                                                ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ;   {static_call}
  0x0000000106519704: jmpq   0x000000010651952e
  0x0000000106519709: nop
  0x000000010651970a: nop
  0x000000010651970b: mov    0x2a8(%r15),%rax
  0x0000000106519712: movabs $0x0,%r10
  0x000000010651971c: mov    %r10,0x2a8(%r15)
  0x0000000106519723: movabs $0x0,%r10
  0x000000010651972d: mov    %r10,0x2b0(%r15)
  0x0000000106519734: add    $0xe0,%rsp
  0x000000010651973b: pop    %rbp
  0x000000010651973c: jmpq   0x00000001064776a0  ;   {runtime_call}
  0x0000000106519741: hlt
  0x0000000106519742: hlt
  0x0000000106519743: hlt
  0x0000000106519744: hlt
  0x0000000106519745: hlt
  0x0000000106519746: hlt
  0x0000000106519747: hlt
  0x0000000106519748: hlt
  0x0000000106519749: hlt
  0x000000010651974a: hlt
  0x000000010651974b: hlt
  0x000000010651974c: hlt
  0x000000010651974d: hlt
  0x000000010651974e: hlt
  0x000000010651974f: hlt
  0x0000000106519750: hlt
  0x0000000106519751: hlt
  0x0000000106519752: hlt
  0x0000000106519753: hlt
  0x0000000106519754: hlt
  0x0000000106519755: hlt
  0x0000000106519756: hlt
  0x0000000106519757: hlt
  0x0000000106519758: hlt
  0x0000000106519759: hlt
  0x000000010651975a: hlt
  0x000000010651975b: hlt
  0x000000010651975c: hlt
  0x000000010651975d: hlt
  0x000000010651975e: hlt
  0x000000010651975f: hlt
[Stub Code]
  0x0000000106519760: nop                       ;   {no_reloc}
  0x0000000106519761: nop
  0x0000000106519762: nop
  0x0000000106519763: nop
  0x0000000106519764: nop
  0x0000000106519765: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010651976f: jmpq   0x000000010651976f  ;   {runtime_call}
  0x0000000106519774: nop
  0x0000000106519775: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010651977f: jmpq   0x000000010651977f  ;   {runtime_call}
  0x0000000106519784: nop
  0x0000000106519785: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010651978f: jmpq   0x000000010651978f  ;   {runtime_call}
  0x0000000106519794: nop
  0x0000000106519795: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010651979f: jmpq   0x000000010651979f  ;   {runtime_call}
[Exception Handler]
  0x00000001065197a4: callq  0x00000001065049a0  ;   {runtime_call}
  0x00000001065197a9: mov    %rsp,-0x28(%rsp)
  0x00000001065197ae: sub    $0x80,%rsp
  0x00000001065197b5: mov    %rax,0x78(%rsp)
  0x00000001065197ba: mov    %rcx,0x70(%rsp)
  0x00000001065197bf: mov    %rdx,0x68(%rsp)
  0x00000001065197c4: mov    %rbx,0x60(%rsp)
  0x00000001065197c9: mov    %rbp,0x50(%rsp)
  0x00000001065197ce: mov    %rsi,0x48(%rsp)
  0x00000001065197d3: mov    %rdi,0x40(%rsp)
  0x00000001065197d8: mov    %r8,0x38(%rsp)
  0x00000001065197dd: mov    %r9,0x30(%rsp)
  0x00000001065197e2: mov    %r10,0x28(%rsp)
  0x00000001065197e7: mov    %r11,0x20(%rsp)
  0x00000001065197ec: mov    %r12,0x18(%rsp)
  0x00000001065197f1: mov    %r13,0x10(%rsp)
  0x00000001065197f6: mov    %r14,0x8(%rsp)
  0x00000001065197fb: mov    %r15,(%rsp)
  0x00000001065197ff: movabs $0x105194e90,%rdi  ;   {external_word}
  0x0000000106519809: movabs $0x1065197a9,%rsi  ;   {internal_word}
  0x0000000106519813: mov    %rsp,%rdx
  0x0000000106519816: and    $0xfffffffffffffff0,%rsp
  0x000000010651981a: callq  0x0000000104fc0196  ;   {runtime_call}
  0x000000010651981f: hlt
[Deopt Handler Code]
  0x0000000106519820: movabs $0x106519820,%r10  ;   {section_word}
  0x000000010651982a: push   %r10
  0x000000010651982c: jmpq   0x00000001064503c0  ;   {runtime_call}
  0x0000000106519831: hlt
  0x0000000106519832: hlt
  0x0000000106519833: hlt
  0x0000000106519834: hlt
  0x0000000106519835: hlt
  0x0000000106519836: hlt
  0x0000000106519837: hlt
Decoding compiled method 0x0000000106515850:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000011a3171c0} 'append' '(Ljava/lang/String;)Ljava/lang/StringBuilder;' in 'java/lang/StringBuilder'
  # this:     rsi:rsi   = 'java/lang/StringBuilder'
  # parm0:    rdx:rdx   = 'java/lang/String'
  #           [sp+0x50]  (sp of caller)
  0x00000001065159c0: mov    0x8(%rsi),%r10d
  0x00000001065159c4: shl    $0x3,%r10
  0x00000001065159c8: cmp    %rax,%r10
  0x00000001065159cb: jne    0x000000010644ee20  ;   {runtime_call}
  0x00000001065159d1: data32 data32 nopw 0x0(%rax,%rax,1)
  0x00000001065159dc: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x00000001065159e0: mov    %eax,-0x14000(%rsp)
  0x00000001065159e7: push   %rbp
  0x00000001065159e8: sub    $0x40,%rsp
  0x00000001065159ec: movabs $0x11a496af8,%rdi  ;   {metadata(method data for {method} {0x000000011a3171c0} 'append' '(Ljava/lang/String;)Ljava/lang/StringBuilder;' in 'java/lang/StringBuilder')}
  0x00000001065159f6: mov    0xdc(%rdi),%ebx
  0x00000001065159fc: add    $0x8,%ebx
  0x00000001065159ff: mov    %ebx,0xdc(%rdi)
  0x0000000106515a05: movabs $0x11a3171c0,%rdi  ;   {metadata({method} {0x000000011a3171c0} 'append' '(Ljava/lang/String;)Ljava/lang/StringBuilder;' in 'java/lang/StringBuilder')}
  0x0000000106515a0f: and    $0x1ff8,%ebx
  0x0000000106515a15: cmp    $0x0,%ebx
  0x0000000106515a18: je     0x0000000106515a65  ;*aload_0
                                                ; - java.lang.StringBuilder::append@0 (line 136)

  0x0000000106515a1e: mov    %rsi,%rdi
  0x0000000106515a21: movabs $0x11a496af8,%rbx  ;   {metadata(method data for {method} {0x000000011a3171c0} 'append' '(Ljava/lang/String;)Ljava/lang/StringBuilder;' in 'java/lang/StringBuilder')}
  0x0000000106515a2b: addq   $0x1,0x108(%rbx)
  0x0000000106515a33: mov    %rdx,%rdi
  0x0000000106515a36: mov    %rdi,%rdx
  0x0000000106515a39: mov    %rsi,%rbx
  0x0000000106515a3c: mov    %rbx,%rsi          ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 136)

  0x0000000106515a3f: mov    %rdi,0x28(%rsp)
  0x0000000106515a44: mov    %rbx,0x20(%rsp)
  0x0000000106515a49: nop
  0x0000000106515a4a: nop
  0x0000000106515a4b: nop
  0x0000000106515a4c: nop
  0x0000000106515a4d: nop
  0x0000000106515a4e: nop
  0x0000000106515a4f: callq  0x000000010644f020  ; OopMap{[32]=Oop [40]=Oop off=148}
                                                ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ;   {optimized virtual_call}
  0x0000000106515a54: mov    0x20(%rsp),%rax
  0x0000000106515a59: add    $0x40,%rsp
  0x0000000106515a5d: pop    %rbp
  0x0000000106515a5e: test   %eax,-0x973964(%rip)        # 0x0000000105ba2100
                                                ;   {poll_return}
  0x0000000106515a64: retq
  0x0000000106515a65: mov    %rdi,0x8(%rsp)
  0x0000000106515a6a: movq   $0xffffffffffffffff,(%rsp)
  0x0000000106515a72: callq  0x0000000106507020  ; OopMap{rsi=Oop rdx=Oop off=183}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::append@-1 (line 136)
                                                ;   {runtime_call}
  0x0000000106515a77: jmp    0x0000000106515a1e
  0x0000000106515a79: nop
  0x0000000106515a7a: nop
  0x0000000106515a7b: mov    0x2a8(%r15),%rax
  0x0000000106515a82: movabs $0x0,%r10
  0x0000000106515a8c: mov    %r10,0x2a8(%r15)
  0x0000000106515a93: movabs $0x0,%r10
  0x0000000106515a9d: mov    %r10,0x2b0(%r15)
  0x0000000106515aa4: add    $0x40,%rsp
  0x0000000106515aa8: pop    %rbp
  0x0000000106515aa9: jmpq   0x00000001064776a0  ;   {runtime_call}
  0x0000000106515aae: hlt
  0x0000000106515aaf: hlt
  0x0000000106515ab0: hlt
  0x0000000106515ab1: hlt
  0x0000000106515ab2: hlt
  0x0000000106515ab3: hlt
  0x0000000106515ab4: hlt
  0x0000000106515ab5: hlt
  0x0000000106515ab6: hlt
  0x0000000106515ab7: hlt
  0x0000000106515ab8: hlt
  0x0000000106515ab9: hlt
  0x0000000106515aba: hlt
  0x0000000106515abb: hlt
  0x0000000106515abc: hlt
  0x0000000106515abd: hlt
  0x0000000106515abe: hlt
  0x0000000106515abf: hlt
[Stub Code]
  0x0000000106515ac0: nop                       ;   {no_reloc}
  0x0000000106515ac1: nop
  0x0000000106515ac2: nop
  0x0000000106515ac3: nop
  0x0000000106515ac4: nop
  0x0000000106515ac5: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000106515acf: jmpq   0x0000000106515acf  ;   {runtime_call}
[Exception Handler]
  0x0000000106515ad4: callq  0x00000001065049a0  ;   {runtime_call}
  0x0000000106515ad9: mov    %rsp,-0x28(%rsp)
  0x0000000106515ade: sub    $0x80,%rsp
  0x0000000106515ae5: mov    %rax,0x78(%rsp)
  0x0000000106515aea: mov    %rcx,0x70(%rsp)
  0x0000000106515aef: mov    %rdx,0x68(%rsp)
  0x0000000106515af4: mov    %rbx,0x60(%rsp)
  0x0000000106515af9: mov    %rbp,0x50(%rsp)
  0x0000000106515afe: mov    %rsi,0x48(%rsp)
  0x0000000106515b03: mov    %rdi,0x40(%rsp)
  0x0000000106515b08: mov    %r8,0x38(%rsp)
  0x0000000106515b0d: mov    %r9,0x30(%rsp)
  0x0000000106515b12: mov    %r10,0x28(%rsp)
  0x0000000106515b17: mov    %r11,0x20(%rsp)
  0x0000000106515b1c: mov    %r12,0x18(%rsp)
  0x0000000106515b21: mov    %r13,0x10(%rsp)
  0x0000000106515b26: mov    %r14,0x8(%rsp)
  0x0000000106515b2b: mov    %r15,(%rsp)
  0x0000000106515b2f: movabs $0x105194e90,%rdi  ;   {external_word}
  0x0000000106515b39: movabs $0x106515ad9,%rsi  ;   {internal_word}
  0x0000000106515b43: mov    %rsp,%rdx
  0x0000000106515b46: and    $0xfffffffffffffff0,%rsp
  0x0000000106515b4a: callq  0x0000000104fc0196  ;   {runtime_call}
  0x0000000106515b4f: hlt
[Deopt Handler Code]
  0x0000000106515b50: movabs $0x106515b50,%r10  ;   {section_word}
  0x0000000106515b5a: push   %r10
  0x0000000106515b5c: jmpq   0x00000001064503c0  ;   {runtime_call}
  0x0000000106515b61: hlt
  0x0000000106515b62: hlt
  0x0000000106515b63: hlt
  0x0000000106515b64: hlt
  0x0000000106515b65: hlt
  0x0000000106515b66: hlt
  0x0000000106515b67: hlt
Decoding compiled method 0x0000000106519cd0:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000011a2a2468} 'lastIndexOf' '(II)I' in 'java/lang/String'
  # this:     rsi:rsi   = 'java/lang/String'
  # parm0:    rdx       = int
  # parm1:    rcx       = int
  #           [sp+0x60]  (sp of caller)
  0x0000000106519e60: mov    0x8(%rsi),%r10d
  0x0000000106519e64: shl    $0x3,%r10
  0x0000000106519e68: cmp    %rax,%r10
  0x0000000106519e6b: jne    0x000000010644ee20  ;   {runtime_call}
  0x0000000106519e71: data32 data32 nopw 0x0(%rax,%rax,1)
  0x0000000106519e7c: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x0000000106519e80: mov    %eax,-0x14000(%rsp)
  0x0000000106519e87: push   %rbp
  0x0000000106519e88: sub    $0x50,%rsp
  0x0000000106519e8c: movabs $0x11a4d73d0,%rax  ;   {metadata(method data for {method} {0x000000011a2a2468} 'lastIndexOf' '(II)I' in 'java/lang/String')}
  0x0000000106519e96: mov    0xdc(%rax),%edi
  0x0000000106519e9c: add    $0x8,%edi
  0x0000000106519e9f: mov    %edi,0xdc(%rax)
  0x0000000106519ea5: movabs $0x11a2a2468,%rax  ;   {metadata({method} {0x000000011a2a2468} 'lastIndexOf' '(II)I' in 'java/lang/String')}
  0x0000000106519eaf: and    $0x1ff8,%edi
  0x0000000106519eb5: cmp    $0x0,%edi
  0x0000000106519eb8: je     0x000000010651a0e0  ;*iload_1
                                                ; - java.lang.String::lastIndexOf@0 (line 1649)

  0x0000000106519ebe: cmp    $0x10000,%edx
  0x0000000106519ec4: movabs $0x11a4d73d0,%rax  ;   {metadata(method data for {method} {0x000000011a2a2468} 'lastIndexOf' '(II)I' in 'java/lang/String')}
  0x0000000106519ece: movabs $0x108,%rdi
  0x0000000106519ed8: jge    0x0000000106519ee8
  0x0000000106519ede: movabs $0x118,%rdi
  0x0000000106519ee8: mov    (%rax,%rdi,1),%rbx
  0x0000000106519eec: lea    0x1(%rbx),%rbx
  0x0000000106519ef0: mov    %rbx,(%rax,%rdi,1)
  0x0000000106519ef4: jge    0x000000010651a096  ;*if_icmpge
                                                ; - java.lang.String::lastIndexOf@3 (line 1649)

  0x0000000106519efa: mov    0xc(%rsi),%eax
  0x0000000106519efd: shl    $0x3,%rax          ;*getfield value
                                                ; - java.lang.String::lastIndexOf@7 (line 1652)

  0x0000000106519f01: mov    0xc(%rax),%edi     ;*arraylength
                                                ; - java.lang.String::lastIndexOf@13 (line 1653)
                                                ; implicit exception: dispatches to 0x000000010651a0f7
  0x0000000106519f04: dec    %edi
  0x0000000106519f06: movabs $0x11a4d73d0,%rbx  ;   {metadata(method data for {method} {0x000000011a2a2468} 'lastIndexOf' '(II)I' in 'java/lang/String')}
  0x0000000106519f10: addq   $0x1,0x128(%rbx)
  0x0000000106519f18: movabs $0x11a46bfa0,%rbx  ;   {metadata(method data for {method} {0x000000011a395fb8} 'min' '(II)I' in 'java/lang/Math')}
  0x0000000106519f22: mov    0xdc(%rbx),%r8d
  0x0000000106519f29: add    $0x8,%r8d
  0x0000000106519f2d: mov    %r8d,0xdc(%rbx)
  0x0000000106519f34: movabs $0x11a395fb8,%rbx  ;   {metadata({method} {0x000000011a395fb8} 'min' '(II)I' in 'java/lang/Math')}
  0x0000000106519f3e: and    $0x7ffff8,%r8d
  0x0000000106519f45: cmp    $0x0,%r8d
  0x0000000106519f49: je     0x000000010651a0fc
  0x0000000106519f4f: cmp    %edi,%ecx
  0x0000000106519f51: movabs $0x11a46bfa0,%rbx  ;   {metadata(method data for {method} {0x000000011a395fb8} 'min' '(II)I' in 'java/lang/Math')}
  0x0000000106519f5b: movabs $0x108,%r8
  0x0000000106519f65: jg     0x0000000106519f75
  0x0000000106519f6b: movabs $0x118,%r8
  0x0000000106519f75: mov    (%rbx,%r8,1),%r9
  0x0000000106519f79: lea    0x1(%r9),%r9
  0x0000000106519f7d: mov    %r9,(%rbx,%r8,1)
  0x0000000106519f81: jg     0x000000010651a038  ;*if_icmpgt
                                                ; - java.lang.Math::min@2 (line 1336)
                                                ; - java.lang.String::lastIndexOf@16 (line 1653)

  0x0000000106519f87: movabs $0x11a46bfa0,%rdi  ;   {metadata(method data for {method} {0x000000011a395fb8} 'min' '(II)I' in 'java/lang/Math')}
  0x0000000106519f91: incl   0x128(%rdi)
  0x0000000106519f97: mov    %rcx,%rdi
  0x0000000106519f9a: jmpq   0x000000010651a038  ;*goto
                                                ; - java.lang.Math::min@6 (line 1336)
                                                ; - java.lang.String::lastIndexOf@16 (line 1653)

  0x0000000106519f9f: nop
  0x0000000106519fa0: movslq %edi,%rbx
  0x0000000106519fa3: cmp    0xc(%rax),%edi
  0x0000000106519fa6: jae    0x000000010651a113
  0x0000000106519fac: movzwl 0x10(%rax,%rbx,2),%ebx  ;*caload
                                                ; - java.lang.String::lastIndexOf@29 (line 1655)

  0x0000000106519fb1: cmp    %edx,%ebx
  0x0000000106519fb3: movabs $0x11a4d73d0,%rbx  ;   {metadata(method data for {method} {0x000000011a2a2468} 'lastIndexOf' '(II)I' in 'java/lang/String')}
  0x0000000106519fbd: movabs $0x158,%r8
  0x0000000106519fc7: jne    0x0000000106519fd7
  0x0000000106519fcd: movabs $0x168,%r8
  0x0000000106519fd7: mov    (%rbx,%r8,1),%r9
  0x0000000106519fdb: lea    0x1(%r9),%r9
  0x0000000106519fdf: mov    %r9,(%rbx,%r8,1)
  0x0000000106519fe3: je     0x000000010651a076  ;*if_icmpne
                                                ; - java.lang.String::lastIndexOf@31 (line 1655)

  0x0000000106519fe9: dec    %edi
  0x0000000106519feb: movabs $0x11a4d73d0,%rbx  ;   {metadata(method data for {method} {0x000000011a2a2468} 'lastIndexOf' '(II)I' in 'java/lang/String')}
  0x0000000106519ff5: mov    0xe0(%rbx),%r8d
  0x0000000106519ffc: add    $0x8,%r8d
  0x000000010651a000: mov    %r8d,0xe0(%rbx)
  0x000000010651a007: movabs $0x11a2a2468,%rbx  ;   {metadata({method} {0x000000011a2a2468} 'lastIndexOf' '(II)I' in 'java/lang/String')}
  0x000000010651a011: and    $0xfff8,%r8d
  0x000000010651a018: cmp    $0x0,%r8d
  0x000000010651a01c: je     0x000000010651a11c  ; OopMap{rsi=Oop rax=Oop off=450}
                                                ;*goto
                                                ; - java.lang.String::lastIndexOf@40 (line 1654)

  0x000000010651a022: test   %eax,-0x977f28(%rip)        # 0x0000000105ba2100
                                                ;   {poll}
  0x000000010651a028: movabs $0x11a4d73d0,%rbx  ;   {metadata(method data for {method} {0x000000011a2a2468} 'lastIndexOf' '(II)I' in 'java/lang/String')}
  0x000000010651a032: incl   0x178(%rbx)        ;*goto
                                                ; - java.lang.String::lastIndexOf@40 (line 1654)

  0x000000010651a038: cmp    $0x0,%edi
  0x000000010651a03b: movabs $0x11a4d73d0,%rbx  ;   {metadata(method data for {method} {0x000000011a2a2468} 'lastIndexOf' '(II)I' in 'java/lang/String')}
  0x000000010651a045: movabs $0x138,%r8
  0x000000010651a04f: jl     0x000000010651a05f
  0x000000010651a055: movabs $0x148,%r8
  0x000000010651a05f: mov    (%rbx,%r8,1),%r9
  0x000000010651a063: lea    0x1(%r9),%r9
  0x000000010651a067: mov    %r9,(%rbx,%r8,1)
  0x000000010651a06b: jl     0x000000010651a085
  0x000000010651a071: jmpq   0x0000000106519fa0  ;*iflt
                                                ; - java.lang.String::lastIndexOf@23 (line 1654)

  0x000000010651a076: mov    %rdi,%rax
  0x000000010651a079: add    $0x50,%rsp
  0x000000010651a07d: pop    %rbp
  0x000000010651a07e: test   %eax,-0x977f84(%rip)        # 0x0000000105ba2100
                                                ;   {poll_return}
  0x000000010651a084: retq                      ;*ireturn
                                                ; - java.lang.String::lastIndexOf@36 (line 1656)

  0x000000010651a085: mov    $0xffffffff,%eax
  0x000000010651a08a: add    $0x50,%rsp
  0x000000010651a08e: pop    %rbp
  0x000000010651a08f: test   %eax,-0x977f95(%rip)        # 0x0000000105ba2100
                                                ;   {poll_return}
  0x000000010651a095: retq                      ;*ireturn
                                                ; - java.lang.String::lastIndexOf@44 (line 1659)

  0x000000010651a096: mov    %rsi,%rdi
  0x000000010651a099: movabs $0x11a4d73d0,%rbx  ;   {metadata(method data for {method} {0x000000011a2a2468} 'lastIndexOf' '(II)I' in 'java/lang/String')}
  0x000000010651a0a3: addq   $0x1,0x190(%rbx)
  0x000000010651a0ab: mov    %rdx,%rdi
  0x000000010651a0ae: mov    %rdi,%rdx
  0x000000010651a0b1: mov    %rcx,%rbx
  0x000000010651a0b4: mov    %rbx,%rcx
  0x000000010651a0b7: mov    %rsi,%rax
  0x000000010651a0ba: mov    %rax,%rsi          ;*invokespecial lastIndexOfSupplementary
                                                ; - java.lang.String::lastIndexOf@48 (line 1661)

  0x000000010651a0bd: mov    %edi,0x44(%rsp)
  0x000000010651a0c1: mov    %ebx,0x40(%rsp)
  0x000000010651a0c5: mov    %rax,0x38(%rsp)
  0x000000010651a0ca: nop
  0x000000010651a0cb: nop
  0x000000010651a0cc: nop
  0x000000010651a0cd: nop
  0x000000010651a0ce: nop
  0x000000010651a0cf: callq  0x000000010644f020  ; OopMap{[56]=Oop off=628}
                                                ;*invokespecial lastIndexOfSupplementary
                                                ; - java.lang.String::lastIndexOf@48 (line 1661)
                                                ;   {optimized virtual_call}
  0x000000010651a0d4: add    $0x50,%rsp
  0x000000010651a0d8: pop    %rbp
  0x000000010651a0d9: test   %eax,-0x977fdf(%rip)        # 0x0000000105ba2100
                                                ;   {poll_return}
  0x000000010651a0df: retq
  0x000000010651a0e0: mov    %rax,0x8(%rsp)
  0x000000010651a0e5: movq   $0xffffffffffffffff,(%rsp)
  0x000000010651a0ed: callq  0x0000000106507020  ; OopMap{rsi=Oop off=658}
                                                ;*synchronization entry
                                                ; - java.lang.String::lastIndexOf@-1 (line 1649)
                                                ;   {runtime_call}
  0x000000010651a0f2: jmpq   0x0000000106519ebe
  0x000000010651a0f7: callq  0x0000000106476b40  ; OopMap{rsi=Oop rax=Oop off=668}
                                                ;*arraylength
                                                ; - java.lang.String::lastIndexOf@13 (line 1653)
                                                ;   {runtime_call}
  0x000000010651a0fc: mov    %rbx,0x8(%rsp)
  0x000000010651a101: movq   $0xffffffffffffffff,(%rsp)
  0x000000010651a109: callq  0x0000000106507020  ; OopMap{rsi=Oop rax=Oop off=686}
                                                ;*synchronization entry
                                                ; - java.lang.Math::min@-1 (line 1336)
                                                ; - java.lang.String::lastIndexOf@16 (line 1653)
                                                ;   {runtime_call}
  0x000000010651a10e: jmpq   0x0000000106519f4f
  0x000000010651a113: mov    %rdi,(%rsp)
  0x000000010651a117: callq  0x0000000106477200  ; OopMap{rsi=Oop rax=Oop off=700}
                                                ;*caload
                                                ; - java.lang.String::lastIndexOf@29 (line 1655)
                                                ;   {runtime_call}
  0x000000010651a11c: mov    %rbx,0x8(%rsp)
  0x000000010651a121: movq   $0x28,(%rsp)
  0x000000010651a129: callq  0x0000000106507020  ; OopMap{rsi=Oop rax=Oop off=718}
                                                ;*goto
                                                ; - java.lang.String::lastIndexOf@40 (line 1654)
                                                ;   {runtime_call}
  0x000000010651a12e: jmpq   0x000000010651a022
  0x000000010651a133: nop
  0x000000010651a134: nop
  0x000000010651a135: mov    0x2a8(%r15),%rax
  0x000000010651a13c: movabs $0x0,%r10
  0x000000010651a146: mov    %r10,0x2a8(%r15)
  0x000000010651a14d: movabs $0x0,%r10
  0x000000010651a157: mov    %r10,0x2b0(%r15)
  0x000000010651a15e: add    $0x50,%rsp
  0x000000010651a162: pop    %rbp
  0x000000010651a163: jmpq   0x00000001064776a0  ;   {runtime_call}
  0x000000010651a168: hlt
  0x000000010651a169: hlt
  0x000000010651a16a: hlt
  0x000000010651a16b: hlt
  0x000000010651a16c: hlt
  0x000000010651a16d: hlt
  0x000000010651a16e: hlt
  0x000000010651a16f: hlt
  0x000000010651a170: hlt
  0x000000010651a171: hlt
  0x000000010651a172: hlt
  0x000000010651a173: hlt
  0x000000010651a174: hlt
  0x000000010651a175: hlt
  0x000000010651a176: hlt
  0x000000010651a177: hlt
  0x000000010651a178: hlt
  0x000000010651a179: hlt
  0x000000010651a17a: hlt
  0x000000010651a17b: hlt
  0x000000010651a17c: hlt
  0x000000010651a17d: hlt
  0x000000010651a17e: hlt
  0x000000010651a17f: hlt
[Stub Code]
  0x000000010651a180: nop                       ;   {no_reloc}
  0x000000010651a181: nop
  0x000000010651a182: nop
  0x000000010651a183: nop
  0x000000010651a184: nop
  0x000000010651a185: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010651a18f: jmpq   0x000000010651a18f  ;   {runtime_call}
[Exception Handler]
  0x000000010651a194: callq  0x00000001065049a0  ;   {runtime_call}
  0x000000010651a199: mov    %rsp,-0x28(%rsp)
  0x000000010651a19e: sub    $0x80,%rsp
  0x000000010651a1a5: mov    %rax,0x78(%rsp)
  0x000000010651a1aa: mov    %rcx,0x70(%rsp)
  0x000000010651a1af: mov    %rdx,0x68(%rsp)
  0x000000010651a1b4: mov    %rbx,0x60(%rsp)
  0x000000010651a1b9: mov    %rbp,0x50(%rsp)
  0x000000010651a1be: mov    %rsi,0x48(%rsp)
  0x000000010651a1c3: mov    %rdi,0x40(%rsp)
  0x000000010651a1c8: mov    %r8,0x38(%rsp)
  0x000000010651a1cd: mov    %r9,0x30(%rsp)
  0x000000010651a1d2: mov    %r10,0x28(%rsp)
  0x000000010651a1d7: mov    %r11,0x20(%rsp)
  0x000000010651a1dc: mov    %r12,0x18(%rsp)
  0x000000010651a1e1: mov    %r13,0x10(%rsp)
  0x000000010651a1e6: mov    %r14,0x8(%rsp)
  0x000000010651a1eb: mov    %r15,(%rsp)
  0x000000010651a1ef: movabs $0x105194e90,%rdi  ;   {external_word}
  0x000000010651a1f9: movabs $0x10651a199,%rsi  ;   {internal_word}
  0x000000010651a203: mov    %rsp,%rdx
  0x000000010651a206: and    $0xfffffffffffffff0,%rsp
  0x000000010651a20a: callq  0x0000000104fc0196  ;   {runtime_call}
  0x000000010651a20f: hlt
[Deopt Handler Code]
  0x000000010651a210: movabs $0x10651a210,%r10  ;   {section_word}
  0x000000010651a21a: push   %r10
  0x000000010651a21c: jmpq   0x00000001064503c0  ;   {runtime_call}
  0x000000010651a221: hlt
  0x000000010651a222: hlt
  0x000000010651a223: hlt
  0x000000010651a224: hlt
  0x000000010651a225: hlt
  0x000000010651a226: hlt
  0x000000010651a227: hlt
Decoding compiled method 0x000000010651a490:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000011a467470} 'getProperties' '(I)I' in 'java/lang/CharacterDataLatin1'
  # this:     rsi:rsi   = 'java/lang/CharacterDataLatin1'
  # parm0:    rdx       = int
  #           [sp+0x40]  (sp of caller)
  0x000000010651a600: mov    0x8(%rsi),%r10d
  0x000000010651a604: shl    $0x3,%r10
  0x000000010651a608: cmp    %rax,%r10
  0x000000010651a60b: jne    0x000000010644ee20  ;   {runtime_call}
  0x000000010651a611: data32 data32 nopw 0x0(%rax,%rax,1)
  0x000000010651a61c: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x000000010651a620: mov    %eax,-0x14000(%rsp)
  0x000000010651a627: push   %rbp
  0x000000010651a628: sub    $0x30,%rsp
  0x000000010651a62c: movabs $0x11a4d77f0,%rax  ;   {metadata(method data for {method} {0x000000011a467470} 'getProperties' '(I)I' in 'java/lang/CharacterDataLatin1')}
  0x000000010651a636: mov    0xdc(%rax),%edi
  0x000000010651a63c: add    $0x8,%edi
  0x000000010651a63f: mov    %edi,0xdc(%rax)
  0x000000010651a645: movabs $0x11a467470,%rax  ;   {metadata({method} {0x000000011a467470} 'getProperties' '(I)I' in 'java/lang/CharacterDataLatin1')}
  0x000000010651a64f: and    $0x1ff8,%edi
  0x000000010651a655: cmp    $0x0,%edi
  0x000000010651a658: je     0x000000010651a68d  ;*iload_1
                                                ; - java.lang.CharacterDataLatin1::getProperties@0 (line 71)

  0x000000010651a65e: mov    %rdx,%rax
  0x000000010651a661: and    $0xffff,%eax
  0x000000010651a667: movabs $0x7955c8ec0,%rdi  ;   {oop([I)}
  0x000000010651a671: movslq %eax,%rbx
  0x000000010651a674: cmp    0xc(%rdi),%eax     ; implicit exception: dispatches to 0x000000010651a6a1
  0x000000010651a677: jae    0x000000010651a6ab
  0x000000010651a67d: mov    0x10(%rdi,%rbx,4),%eax  ;*iaload
                                                ; - java.lang.CharacterDataLatin1::getProperties@7 (line 72)

  0x000000010651a681: add    $0x30,%rsp
  0x000000010651a685: pop    %rbp
  0x000000010651a686: test   %eax,-0x97858c(%rip)        # 0x0000000105ba2100
                                                ;   {poll_return}
  0x000000010651a68c: retq
  0x000000010651a68d: mov    %rax,0x8(%rsp)
  0x000000010651a692: movq   $0xffffffffffffffff,(%rsp)
  0x000000010651a69a: callq  0x0000000106507020  ; OopMap{rsi=Oop off=159}
                                                ;*synchronization entry
                                                ; - java.lang.CharacterDataLatin1::getProperties@-1 (line 71)
                                                ;   {runtime_call}
  0x000000010651a69f: jmp    0x000000010651a65e
  0x000000010651a6a1: callq  0x0000000106476b40  ; OopMap{rsi=Oop rdi=Oop off=166}
                                                ;*iaload
                                                ; - java.lang.CharacterDataLatin1::getProperties@7 (line 72)
                                                ;   {runtime_call}
  0x000000010651a6a6: callq  0x0000000106476b40  ; OopMap{rsi=Oop rdi=Oop off=171}
                                                ;*iaload
                                                ; - java.lang.CharacterDataLatin1::getProperties@7 (line 72)
                                                ;   {runtime_call}
  0x000000010651a6ab: mov    %rax,(%rsp)
  0x000000010651a6af: callq  0x0000000106477200  ; OopMap{rsi=Oop rdi=Oop off=180}
                                                ;*iaload
                                                ; - java.lang.CharacterDataLatin1::getProperties@7 (line 72)
                                                ;   {runtime_call}
  0x000000010651a6b4: nop
  0x000000010651a6b5: nop
  0x000000010651a6b6: mov    0x2a8(%r15),%rax
  0x000000010651a6bd: movabs $0x0,%r10
  0x000000010651a6c7: mov    %r10,0x2a8(%r15)
  0x000000010651a6ce: movabs $0x0,%r10
  0x000000010651a6d8: mov    %r10,0x2b0(%r15)
  0x000000010651a6df: add    $0x30,%rsp
  0x000000010651a6e3: pop    %rbp
  0x000000010651a6e4: jmpq   0x00000001064776a0  ;   {runtime_call}
  0x000000010651a6e9: hlt
  0x000000010651a6ea: hlt
  0x000000010651a6eb: hlt
  0x000000010651a6ec: hlt
  0x000000010651a6ed: hlt
  0x000000010651a6ee: hlt
  0x000000010651a6ef: hlt
  0x000000010651a6f0: hlt
  0x000000010651a6f1: hlt
  0x000000010651a6f2: hlt
  0x000000010651a6f3: hlt
  0x000000010651a6f4: hlt
  0x000000010651a6f5: hlt
  0x000000010651a6f6: hlt
  0x000000010651a6f7: hlt
  0x000000010651a6f8: hlt
  0x000000010651a6f9: hlt
  0x000000010651a6fa: hlt
  0x000000010651a6fb: hlt
  0x000000010651a6fc: hlt
  0x000000010651a6fd: hlt
  0x000000010651a6fe: hlt
  0x000000010651a6ff: hlt
[Exception Handler]
[Stub Code]
  0x000000010651a700: callq  0x00000001065049a0  ;   {no_reloc}
  0x000000010651a705: mov    %rsp,-0x28(%rsp)
  0x000000010651a70a: sub    $0x80,%rsp
  0x000000010651a711: mov    %rax,0x78(%rsp)
  0x000000010651a716: mov    %rcx,0x70(%rsp)
  0x000000010651a71b: mov    %rdx,0x68(%rsp)
  0x000000010651a720: mov    %rbx,0x60(%rsp)
  0x000000010651a725: mov    %rbp,0x50(%rsp)
  0x000000010651a72a: mov    %rsi,0x48(%rsp)
  0x000000010651a72f: mov    %rdi,0x40(%rsp)
  0x000000010651a734: mov    %r8,0x38(%rsp)
  0x000000010651a739: mov    %r9,0x30(%rsp)
  0x000000010651a73e: mov    %r10,0x28(%rsp)
  0x000000010651a743: mov    %r11,0x20(%rsp)
  0x000000010651a748: mov    %r12,0x18(%rsp)
  0x000000010651a74d: mov    %r13,0x10(%rsp)
  0x000000010651a752: mov    %r14,0x8(%rsp)
  0x000000010651a757: mov    %r15,(%rsp)
  0x000000010651a75b: movabs $0x105194e90,%rdi  ;   {external_word}
  0x000000010651a765: movabs $0x10651a705,%rsi  ;   {internal_word}
  0x000000010651a76f: mov    %rsp,%rdx
  0x000000010651a772: and    $0xfffffffffffffff0,%rsp
  0x000000010651a776: callq  0x0000000104fc0196  ;   {runtime_call}
  0x000000010651a77b: hlt
[Deopt Handler Code]
  0x000000010651a77c: movabs $0x10651a77c,%r10  ;   {section_word}
  0x000000010651a786: push   %r10
  0x000000010651a788: jmpq   0x00000001064503c0  ;   {runtime_call}
  0x000000010651a78d: hlt
  0x000000010651a78e: hlt
  0x000000010651a78f: hlt
Decoding compiled method 0x000000010651a890:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000011a2c5ea0} 'get' '()Ljava/lang/Object;' in 'java/lang/ref/Reference'
  #           [sp+0x40]  (sp of caller)
  0x000000010651a9e0: mov    0x8(%rsi),%r10d
  0x000000010651a9e4: shl    $0x3,%r10
  0x000000010651a9e8: cmp    %rax,%r10
  0x000000010651a9eb: jne    0x000000010644ee20  ;   {runtime_call}
  0x000000010651a9f1: data32 data32 nopw 0x0(%rax,%rax,1)
  0x000000010651a9fc: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x000000010651aa00: mov    %eax,-0x14000(%rsp)
  0x000000010651aa07: push   %rbp
  0x000000010651aa08: sub    $0x30,%rsp
  0x000000010651aa0c: mov    0xc(%rsi),%eax
  0x000000010651aa0f: shl    $0x3,%rax          ;*aload_0
                                                ; - java.lang.ref.Reference::get@0 (line 254)

  0x000000010651aa13: add    $0x30,%rsp
  0x000000010651aa17: pop    %rbp
  0x000000010651aa18: test   %eax,-0x97891e(%rip)        # 0x0000000105ba2100
                                                ;   {poll_return}
  0x000000010651aa1e: retq
  0x000000010651aa1f: nop
  0x000000010651aa20: nop
  0x000000010651aa21: mov    0x2a8(%r15),%rax
  0x000000010651aa28: movabs $0x0,%r10
  0x000000010651aa32: mov    %r10,0x2a8(%r15)
  0x000000010651aa39: movabs $0x0,%r10
  0x000000010651aa43: mov    %r10,0x2b0(%r15)
  0x000000010651aa4a: add    $0x30,%rsp
  0x000000010651aa4e: pop    %rbp
  0x000000010651aa4f: jmpq   0x00000001064776a0  ;   {runtime_call}
  0x000000010651aa54: hlt
  0x000000010651aa55: hlt
  0x000000010651aa56: hlt
  0x000000010651aa57: hlt
  0x000000010651aa58: hlt
  0x000000010651aa59: hlt
  0x000000010651aa5a: hlt
  0x000000010651aa5b: hlt
  0x000000010651aa5c: hlt
  0x000000010651aa5d: hlt
  0x000000010651aa5e: hlt
  0x000000010651aa5f: hlt
[Exception Handler]
[Stub Code]
  0x000000010651aa60: callq  0x00000001065049a0  ;   {no_reloc}
  0x000000010651aa65: mov    %rsp,-0x28(%rsp)
  0x000000010651aa6a: sub    $0x80,%rsp
  0x000000010651aa71: mov    %rax,0x78(%rsp)
  0x000000010651aa76: mov    %rcx,0x70(%rsp)
  0x000000010651aa7b: mov    %rdx,0x68(%rsp)
  0x000000010651aa80: mov    %rbx,0x60(%rsp)
  0x000000010651aa85: mov    %rbp,0x50(%rsp)
  0x000000010651aa8a: mov    %rsi,0x48(%rsp)
  0x000000010651aa8f: mov    %rdi,0x40(%rsp)
  0x000000010651aa94: mov    %r8,0x38(%rsp)
  0x000000010651aa99: mov    %r9,0x30(%rsp)
  0x000000010651aa9e: mov    %r10,0x28(%rsp)
  0x000000010651aaa3: mov    %r11,0x20(%rsp)
  0x000000010651aaa8: mov    %r12,0x18(%rsp)
  0x000000010651aaad: mov    %r13,0x10(%rsp)
  0x000000010651aab2: mov    %r14,0x8(%rsp)
  0x000000010651aab7: mov    %r15,(%rsp)
  0x000000010651aabb: movabs $0x105194e90,%rdi  ;   {external_word}
  0x000000010651aac5: movabs $0x10651aa65,%rsi  ;   {internal_word}
  0x000000010651aacf: mov    %rsp,%rdx
  0x000000010651aad2: and    $0xfffffffffffffff0,%rsp
  0x000000010651aad6: callq  0x0000000104fc0196  ;   {runtime_call}
  0x000000010651aadb: hlt
[Deopt Handler Code]
  0x000000010651aadc: movabs $0x10651aadc,%r10  ;   {section_word}
  0x000000010651aae6: push   %r10
  0x000000010651aae8: jmpq   0x00000001064503c0  ;   {runtime_call}
  0x000000010651aaed: hlt
  0x000000010651aaee: hlt
  0x000000010651aaef: hlt
Decoding compiled method 0x000000010651ab50:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000011a2a1e90} 'startsWith' '(Ljava/lang/String;I)Z' in 'java/lang/String'
  # this:     rsi:rsi   = 'java/lang/String'
  # parm0:    rdx:rdx   = 'java/lang/String'
  # parm1:    rcx       = int
  #           [sp+0x40]  (sp of caller)
  0x000000010651acc0: mov    0x8(%rsi),%r10d
  0x000000010651acc4: shl    $0x3,%r10
  0x000000010651acc8: cmp    %rax,%r10
  0x000000010651accb: jne    0x000000010644ee20  ;   {runtime_call}
  0x000000010651acd1: data32 data32 nopw 0x0(%rax,%rax,1)
  0x000000010651acdc: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x000000010651ace0: mov    %eax,-0x14000(%rsp)
  0x000000010651ace7: push   %rbp
  0x000000010651ace8: sub    $0x30,%rsp
  0x000000010651acec: mov    %rsi,0x20(%rsp)
  0x000000010651acf1: movabs $0x11a4d7918,%rax  ;   {metadata(method data for {method} {0x000000011a2a1e90} 'startsWith' '(Ljava/lang/String;I)Z' in 'java/lang/String')}
  0x000000010651acfb: mov    0xdc(%rax),%edi
  0x000000010651ad01: add    $0x8,%edi
  0x000000010651ad04: mov    %edi,0xdc(%rax)
  0x000000010651ad0a: movabs $0x11a2a1e90,%rax  ;   {metadata({method} {0x000000011a2a1e90} 'startsWith' '(Ljava/lang/String;I)Z' in 'java/lang/String')}
  0x000000010651ad14: and    $0x1ff8,%edi
  0x000000010651ad1a: cmp    $0x0,%edi
  0x000000010651ad1d: je     0x000000010651aede  ;*aload_0
                                                ; - java.lang.String::startsWith@0 (line 1403)

  0x000000010651ad23: mov    0xc(%rsi),%eax
  0x000000010651ad26: shl    $0x3,%rax          ;*getfield value
                                                ; - java.lang.String::startsWith@1 (line 1403)

  0x000000010651ad2a: mov    0xc(%rdx),%edi     ; implicit exception: dispatches to 0x000000010651aef5
  0x000000010651ad2d: shl    $0x3,%rdi          ;*getfield value
                                                ; - java.lang.String::startsWith@9 (line 1405)

  0x000000010651ad31: mov    0xc(%rdi),%ebx     ;*arraylength
                                                ; - java.lang.String::startsWith@21 (line 1407)
                                                ; implicit exception: dispatches to 0x000000010651aefa
  0x000000010651ad34: cmp    $0x0,%ecx
  0x000000010651ad37: movabs $0x11a4d7918,%r8   ;   {metadata(method data for {method} {0x000000011a2a1e90} 'startsWith' '(Ljava/lang/String;I)Z' in 'java/lang/String')}
  0x000000010651ad41: movabs $0x108,%r9
  0x000000010651ad4b: jl     0x000000010651ad5b
  0x000000010651ad51: movabs $0x118,%r9
  0x000000010651ad5b: mov    (%r8,%r9,1),%r11
  0x000000010651ad5f: lea    0x1(%r11),%r11
  0x000000010651ad63: mov    %r11,(%r8,%r9,1)
  0x000000010651ad67: jl     0x000000010651aeab  ;*iflt
                                                ; - java.lang.String::startsWith@25 (line 1409)

  0x000000010651ad6d: mov    0xc(%rax),%r8d     ;*arraylength
                                                ; - java.lang.String::startsWith@33 (line 1409)
                                                ; implicit exception: dispatches to 0x000000010651aeff
  0x000000010651ad71: sub    %ebx,%r8d
  0x000000010651ad74: cmp    %r8d,%ecx
  0x000000010651ad77: movabs $0x11a4d7918,%r8   ;   {metadata(method data for {method} {0x000000011a2a1e90} 'startsWith' '(Ljava/lang/String;I)Z' in 'java/lang/String')}
  0x000000010651ad81: movabs $0x128,%r9
  0x000000010651ad8b: jle    0x000000010651ad9b
  0x000000010651ad91: movabs $0x138,%r9
  0x000000010651ad9b: mov    (%r8,%r9,1),%r11
  0x000000010651ad9f: lea    0x1(%r11),%r11
  0x000000010651ada3: mov    %r11,(%r8,%r9,1)
  0x000000010651ada7: jg     0x000000010651aeab  ;*if_icmple
                                                ; - java.lang.String::startsWith@37 (line 1409)

  0x000000010651adad: mov    %rcx,%r8
  0x000000010651adb0: mov    $0x0,%r9d
  0x000000010651adb6: jmpq   0x000000010651ae6b  ;*iinc
                                                ; - java.lang.String::startsWith@42 (line 1412)

  0x000000010651adbb: nopl   0x0(%rax,%rax,1)
  0x000000010651adc0: mov    %r8,%r11
  0x000000010651adc3: inc    %r11d
  0x000000010651adc6: movslq %r8d,%r13
  0x000000010651adc9: cmp    0xc(%rax),%r8d
  0x000000010651adcd: jae    0x000000010651af04
  0x000000010651add3: movzwl 0x10(%rax,%r13,2),%r8d  ;*caload
                                                ; - java.lang.String::startsWith@56 (line 1413)

  0x000000010651add9: mov    %r9,%r13
  0x000000010651addc: inc    %r13d
  0x000000010651addf: movslq %r9d,%r14
  0x000000010651ade2: cmp    0xc(%rdi),%r9d
  0x000000010651ade6: jae    0x000000010651af0d
  0x000000010651adec: movzwl 0x10(%rdi,%r14,2),%r9d  ;*caload
                                                ; - java.lang.String::startsWith@64 (line 1413)

  0x000000010651adf2: movabs $0x11a4d7918,%r14  ;   {metadata(method data for {method} {0x000000011a2a1e90} 'startsWith' '(Ljava/lang/String;I)Z' in 'java/lang/String')}
  0x000000010651adfc: mov    0xe0(%r14),%esi
  0x000000010651ae03: add    $0x8,%esi
  0x000000010651ae06: mov    %esi,0xe0(%r14)
  0x000000010651ae0d: movabs $0x11a2a1e90,%r14  ;   {metadata({method} {0x000000011a2a1e90} 'startsWith' '(Ljava/lang/String;I)Z' in 'java/lang/String')}
  0x000000010651ae17: and    $0xfff8,%esi
  0x000000010651ae1d: cmp    $0x0,%esi
  0x000000010651ae20: je     0x000000010651af16  ; OopMap{rdi=Oop rax=Oop rdx=Oop [32]=Oop off=358}
                                                ;*if_icmpeq
                                                ; - java.lang.String::startsWith@65 (line 1413)

  0x000000010651ae26: test   %eax,-0x978d2c(%rip)        # 0x0000000105ba2100
                                                ;   {poll}
  0x000000010651ae2c: cmp    %r9d,%r8d
  0x000000010651ae2f: movabs $0x11a4d7918,%rsi  ;   {metadata(method data for {method} {0x000000011a2a1e90} 'startsWith' '(Ljava/lang/String;I)Z' in 'java/lang/String')}
  0x000000010651ae39: movabs $0x168,%r8
  0x000000010651ae43: je     0x000000010651ae53
  0x000000010651ae49: movabs $0x178,%r8
  0x000000010651ae53: mov    (%rsi,%r8,1),%r9
  0x000000010651ae57: lea    0x1(%r9),%r9
  0x000000010651ae5b: mov    %r9,(%rsi,%r8,1)
  0x000000010651ae5f: jne    0x000000010651aebc  ;*if_icmpeq
                                                ; - java.lang.String::startsWith@65 (line 1413)

  0x000000010651ae65: mov    %r13,%r9
  0x000000010651ae68: mov    %r11,%r8           ;*iinc
                                                ; - java.lang.String::startsWith@42 (line 1412)

  0x000000010651ae6b: dec    %ebx
  0x000000010651ae6d: cmp    $0x0,%ebx
  0x000000010651ae70: movabs $0x11a4d7918,%r11  ;   {metadata(method data for {method} {0x000000011a2a1e90} 'startsWith' '(Ljava/lang/String;I)Z' in 'java/lang/String')}
  0x000000010651ae7a: movabs $0x148,%r13
  0x000000010651ae84: jl     0x000000010651ae94
  0x000000010651ae8a: movabs $0x158,%r13
  0x000000010651ae94: mov    (%r11,%r13,1),%r14
  0x000000010651ae98: lea    0x1(%r14),%r14
  0x000000010651ae9c: mov    %r14,(%r11,%r13,1)
  0x000000010651aea0: jl     0x000000010651aecd
  0x000000010651aea6: jmpq   0x000000010651adc0  ;*iflt
                                                ; - java.lang.String::startsWith@47 (line 1412)

  0x000000010651aeab: mov    $0x0,%eax
  0x000000010651aeb0: add    $0x30,%rsp
  0x000000010651aeb4: pop    %rbp
  0x000000010651aeb5: test   %eax,-0x978dbb(%rip)        # 0x0000000105ba2100
                                                ;   {poll_return}
  0x000000010651aebb: retq                      ;*ireturn
                                                ; - java.lang.String::startsWith@41 (line 1410)

  0x000000010651aebc: mov    $0x0,%eax
  0x000000010651aec1: add    $0x30,%rsp
  0x000000010651aec5: pop    %rbp
  0x000000010651aec6: test   %eax,-0x978dcc(%rip)        # 0x0000000105ba2100
                                                ;   {poll_return}
  0x000000010651aecc: retq                      ;*ireturn
                                                ; - java.lang.String::startsWith@69 (line 1414)

  0x000000010651aecd: mov    $0x1,%eax
  0x000000010651aed2: add    $0x30,%rsp
  0x000000010651aed6: pop    %rbp
  0x000000010651aed7: test   %eax,-0x978ddd(%rip)        # 0x0000000105ba2100
                                                ;   {poll_return}
  0x000000010651aedd: retq
  0x000000010651aede: mov    %rax,0x8(%rsp)
  0x000000010651aee3: movq   $0xffffffffffffffff,(%rsp)
  0x000000010651aeeb: callq  0x0000000106507020  ; OopMap{rsi=Oop [32]=Oop rdx=Oop off=560}
                                                ;*synchronization entry
                                                ; - java.lang.String::startsWith@-1 (line 1403)
                                                ;   {runtime_call}
  0x000000010651aef0: jmpq   0x000000010651ad23
  0x000000010651aef5: callq  0x0000000106476b40  ; OopMap{rsi=Oop [32]=Oop rdx=Oop rax=Oop off=570}
                                                ;*getfield value
                                                ; - java.lang.String::startsWith@9 (line 1405)
                                                ;   {runtime_call}
  0x000000010651aefa: callq  0x0000000106476b40  ; OopMap{rsi=Oop [32]=Oop rdx=Oop rax=Oop rdi=Oop off=575}
                                                ;*arraylength
                                                ; - java.lang.String::startsWith@21 (line 1407)
                                                ;   {runtime_call}
  0x000000010651aeff: callq  0x0000000106476b40  ; OopMap{rdi=Oop rax=Oop rdx=Oop rsi=Oop [32]=Oop off=580}
                                                ;*arraylength
                                                ; - java.lang.String::startsWith@33 (line 1409)
                                                ;   {runtime_call}
  0x000000010651af04: mov    %r8,(%rsp)
  0x000000010651af08: callq  0x0000000106477200  ; OopMap{rdi=Oop rax=Oop rdx=Oop [32]=Oop off=589}
                                                ;*caload
                                                ; - java.lang.String::startsWith@56 (line 1413)
                                                ;   {runtime_call}
  0x000000010651af0d: mov    %r9,(%rsp)
  0x000000010651af11: callq  0x0000000106477200  ; OopMap{rdi=Oop rax=Oop rdx=Oop [32]=Oop off=598}
                                                ;*caload
                                                ; - java.lang.String::startsWith@64 (line 1413)
                                                ;   {runtime_call}
  0x000000010651af16: mov    %r14,0x8(%rsp)
  0x000000010651af1b: movq   $0x41,(%rsp)
  0x000000010651af23: callq  0x0000000106507020  ; OopMap{rdi=Oop rax=Oop rdx=Oop [32]=Oop off=616}
                                                ;*if_icmpeq
                                                ; - java.lang.String::startsWith@65 (line 1413)
                                                ;   {runtime_call}
  0x000000010651af28: jmpq   0x000000010651ae26
  0x000000010651af2d: nop
  0x000000010651af2e: nop
  0x000000010651af2f: mov    0x2a8(%r15),%rax
  0x000000010651af36: movabs $0x0,%r10
  0x000000010651af40: mov    %r10,0x2a8(%r15)
  0x000000010651af47: movabs $0x0,%r10
  0x000000010651af51: mov    %r10,0x2b0(%r15)
  0x000000010651af58: add    $0x30,%rsp
  0x000000010651af5c: pop    %rbp
  0x000000010651af5d: jmpq   0x00000001064776a0  ;   {runtime_call}
  0x000000010651af62: hlt
  0x000000010651af63: hlt
  0x000000010651af64: hlt
  0x000000010651af65: hlt
  0x000000010651af66: hlt
  0x000000010651af67: hlt
  0x000000010651af68: hlt
  0x000000010651af69: hlt
  0x000000010651af6a: hlt
  0x000000010651af6b: hlt
  0x000000010651af6c: hlt
  0x000000010651af6d: hlt
  0x000000010651af6e: hlt
  0x000000010651af6f: hlt
  0x000000010651af70: hlt
  0x000000010651af71: hlt
  0x000000010651af72: hlt
  0x000000010651af73: hlt
  0x000000010651af74: hlt
  0x000000010651af75: hlt
  0x000000010651af76: hlt
  0x000000010651af77: hlt
  0x000000010651af78: hlt
  0x000000010651af79: hlt
  0x000000010651af7a: hlt
  0x000000010651af7b: hlt
  0x000000010651af7c: hlt
  0x000000010651af7d: hlt
  0x000000010651af7e: hlt
  0x000000010651af7f: hlt
[Exception Handler]
[Stub Code]
  0x000000010651af80: callq  0x00000001065049a0  ;   {no_reloc}
  0x000000010651af85: mov    %rsp,-0x28(%rsp)
  0x000000010651af8a: sub    $0x80,%rsp
  0x000000010651af91: mov    %rax,0x78(%rsp)
  0x000000010651af96: mov    %rcx,0x70(%rsp)
  0x000000010651af9b: mov    %rdx,0x68(%rsp)
  0x000000010651afa0: mov    %rbx,0x60(%rsp)
  0x000000010651afa5: mov    %rbp,0x50(%rsp)
  0x000000010651afaa: mov    %rsi,0x48(%rsp)
  0x000000010651afaf: mov    %rdi,0x40(%rsp)
  0x000000010651afb4: mov    %r8,0x38(%rsp)
  0x000000010651afb9: mov    %r9,0x30(%rsp)
  0x000000010651afbe: mov    %r10,0x28(%rsp)
  0x000000010651afc3: mov    %r11,0x20(%rsp)
  0x000000010651afc8: mov    %r12,0x18(%rsp)
  0x000000010651afcd: mov    %r13,0x10(%rsp)
  0x000000010651afd2: mov    %r14,0x8(%rsp)
  0x000000010651afd7: mov    %r15,(%rsp)
  0x000000010651afdb: movabs $0x105194e90,%rdi  ;   {external_word}
  0x000000010651afe5: movabs $0x10651af85,%rsi  ;   {internal_word}
  0x000000010651afef: mov    %rsp,%rdx
  0x000000010651aff2: and    $0xfffffffffffffff0,%rsp
  0x000000010651aff6: callq  0x0000000104fc0196  ;   {runtime_call}
  0x000000010651affb: hlt
[Deopt Handler Code]
  0x000000010651affc: movabs $0x10651affc,%r10  ;   {section_word}
  0x000000010651b006: push   %r10
  0x000000010651b008: jmpq   0x00000001064503c0  ;   {runtime_call}
  0x000000010651b00d: hlt
  0x000000010651b00e: hlt
  0x000000010651b00f: hlt
Decoding compiled method 0x000000010651b310:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000000011a466d38} 'of' '(I)Ljava/lang/CharacterData;' in 'java/lang/CharacterData'
  # parm0:    rsi       = int
  #           [sp+0x40]  (sp of caller)
  0x000000010651b4c0: mov    %eax,-0x14000(%rsp)
  0x000000010651b4c7: push   %rbp
  0x000000010651b4c8: sub    $0x30,%rsp
  0x000000010651b4cc: movabs $0x11a4d3c90,%rax  ;   {metadata(method data for {method} {0x000000011a466d38} 'of' '(I)Ljava/lang/CharacterData;' in 'java/lang/CharacterData')}
  0x000000010651b4d6: mov    0xdc(%rax),%edi
  0x000000010651b4dc: add    $0x8,%edi
  0x000000010651b4df: mov    %edi,0xdc(%rax)
  0x000000010651b4e5: movabs $0x11a466d38,%rax  ;   {metadata({method} {0x000000011a466d38} 'of' '(I)Ljava/lang/CharacterData;' in 'java/lang/CharacterData')}
  0x000000010651b4ef: and    $0x1ff8,%edi
  0x000000010651b4f5: cmp    $0x0,%edi
  0x000000010651b4f8: je     0x000000010651b684  ;*iload_0
                                                ; - java.lang.CharacterData::of@0 (line 77)

  0x000000010651b4fe: mov    %rsi,%rax
  0x000000010651b501: shr    $0x8,%eax
  0x000000010651b504: cmp    $0x0,%eax
  0x000000010651b507: movabs $0x11a4d3c90,%rax  ;   {metadata(method data for {method} {0x000000011a466d38} 'of' '(I)Ljava/lang/CharacterData;' in 'java/lang/CharacterData')}
  0x000000010651b511: movabs $0x108,%rdi
  0x000000010651b51b: jne    0x000000010651b52b
  0x000000010651b521: movabs $0x118,%rdi
  0x000000010651b52b: mov    (%rax,%rdi,1),%rbx
  0x000000010651b52f: lea    0x1(%rbx),%rbx
  0x000000010651b533: mov    %rbx,(%rax,%rdi,1)
  0x000000010651b537: je     0x000000010651b66e  ;*ifne
                                                ; - java.lang.CharacterData::of@4 (line 77)

  0x000000010651b53d: mov    %rsi,%rax
  0x000000010651b540: shr    $0x10,%eax
  0x000000010651b543: cmp    $0x0,%eax
  0x000000010651b546: je     0x000000010651b646
  0x000000010651b54c: cmp    $0x1,%eax
  0x000000010651b54f: je     0x000000010651b61e
  0x000000010651b555: cmp    $0x2,%eax
  0x000000010651b558: je     0x000000010651b5f6
  0x000000010651b55e: cmp    $0xe,%eax
  0x000000010651b561: je     0x000000010651b5ce
  0x000000010651b567: cmp    $0xf,%eax
  0x000000010651b56a: je     0x000000010651b579
  0x000000010651b570: cmp    $0x10,%eax
  0x000000010651b573: jne    0x000000010651b5a6  ;*tableswitch
                                                ; - java.lang.CharacterData::of@15 (line 80)

  0x000000010651b579: nopl   0x0(%rax)
  0x000000010651b580: jmpq   0x000000010651b6f8  ;   {no_reloc}
  0x000000010651b585: add    %al,(%rax)
  0x000000010651b587: add    %al,(%rax)
  0x000000010651b589: add    %ah,0xf(%rsi)
  0x000000010651b58c: (bad)
  0x000000010651b58d: add    %r8b,(%rax)
  0x000000010651b590: jmpq   0x000000010651b712  ; implicit exception: dispatches to 0x000000010651b702
  0x000000010651b595: nop
  0x000000010651b596: shl    $0x3,%rax          ;*getstatic instance
                                                ; - java.lang.CharacterData::of@112 (line 91)

  0x000000010651b59a: add    $0x30,%rsp
  0x000000010651b59e: pop    %rbp
  0x000000010651b59f: test   %eax,-0x9794a5(%rip)        # 0x0000000105ba2100
                                                ;   {poll_return}
  0x000000010651b5a5: retq                      ;*areturn
                                                ; - java.lang.CharacterData::of@115 (line 91)

  0x000000010651b5a6: xchg   %ax,%ax
  0x000000010651b5a8: jmpq   0x000000010651b779  ;   {no_reloc}
  0x000000010651b5ad: add    %al,(%rax)
  0x000000010651b5af: add    %al,(%rax)
  0x000000010651b5b1: add    %ah,0xf(%rsi)
  0x000000010651b5b4: (bad)
  0x000000010651b5b5: add    %r8b,(%rax)
  0x000000010651b5b8: jmpq   0x000000010651b793  ; implicit exception: dispatches to 0x000000010651b783
  0x000000010651b5bd: nop
  0x000000010651b5be: shl    $0x3,%rax          ;*getstatic instance
                                                ; - java.lang.CharacterData::of@116 (line 93)

  0x000000010651b5c2: add    $0x30,%rsp
  0x000000010651b5c6: pop    %rbp
  0x000000010651b5c7: test   %eax,-0x9794cd(%rip)        # 0x0000000105ba2100
                                                ;   {poll_return}
  0x000000010651b5cd: retq                      ;*areturn
                                                ; - java.lang.CharacterData::of@119 (line 93)

  0x000000010651b5ce: xchg   %ax,%ax
  0x000000010651b5d0: jmpq   0x000000010651b7fa  ;   {no_reloc}
  0x000000010651b5d5: add    %al,(%rax)
  0x000000010651b5d7: add    %al,(%rax)
  0x000000010651b5d9: add    %ah,0xf(%rsi)
  0x000000010651b5dc: (bad)
  0x000000010651b5dd: add    %r8b,(%rax)
  0x000000010651b5e0: jmpq   0x000000010651b814  ; implicit exception: dispatches to 0x000000010651b804
  0x000000010651b5e5: nop
  0x000000010651b5e6: shl    $0x3,%rax          ;*getstatic instance
                                                ; - java.lang.CharacterData::of@108 (line 88)

  0x000000010651b5ea: add    $0x30,%rsp
  0x000000010651b5ee: pop    %rbp
  0x000000010651b5ef: test   %eax,-0x9794f5(%rip)        # 0x0000000105ba2100
                                                ;   {poll_return}
  0x000000010651b5f5: retq                      ;*areturn
                                                ; - java.lang.CharacterData::of@111 (line 88)

  0x000000010651b5f6: xchg   %ax,%ax
  0x000000010651b5f8: jmpq   0x000000010651b87b  ;   {no_reloc}
  0x000000010651b5fd: add    %al,(%rax)
  0x000000010651b5ff: add    %al,(%rax)
  0x000000010651b601: add    %ah,0xf(%rsi)
  0x000000010651b604: (bad)
  0x000000010651b605: add    %r8b,(%rax)
  0x000000010651b608: jmpq   0x000000010651b895  ; implicit exception: dispatches to 0x000000010651b885
  0x000000010651b60d: nop
  0x000000010651b60e: shl    $0x3,%rax          ;*getstatic instance
                                                ; - java.lang.CharacterData::of@104 (line 86)

  0x000000010651b612: add    $0x30,%rsp
  0x000000010651b616: pop    %rbp
  0x000000010651b617: test   %eax,-0x97951d(%rip)        # 0x0000000105ba2100
                                                ;   {poll_return}
  0x000000010651b61d: retq                      ;*areturn
                                                ; - java.lang.CharacterData::of@107 (line 86)

  0x000000010651b61e: xchg   %ax,%ax
  0x000000010651b620: jmpq   0x000000010651b8fc  ;   {no_reloc}
  0x000000010651b625: add    %al,(%rax)
  0x000000010651b627: add    %al,(%rax)
  0x000000010651b629: add    %ah,0xf(%rsi)
  0x000000010651b62c: (bad)
  0x000000010651b62d: add    %r8b,(%rax)
  0x000000010651b630: jmpq   0x000000010651b916  ; implicit exception: dispatches to 0x000000010651b906
  0x000000010651b635: nop
  0x000000010651b636: shl    $0x3,%rax          ;*getstatic instance
                                                ; - java.lang.CharacterData::of@100 (line 84)

  0x000000010651b63a: add    $0x30,%rsp
  0x000000010651b63e: pop    %rbp
  0x000000010651b63f: test   %eax,-0x979545(%rip)        # 0x0000000105ba2100
                                                ;   {poll_return}
  0x000000010651b645: retq                      ;*areturn
                                                ; - java.lang.CharacterData::of@103 (line 84)

  0x000000010651b646: xchg   %ax,%ax
  0x000000010651b648: jmpq   0x000000010651b97d  ;   {no_reloc}
  0x000000010651b64d: add    %al,(%rax)
  0x000000010651b64f: add    %al,(%rax)
  0x000000010651b651: add    %ah,0xf(%rsi)
  0x000000010651b654: (bad)
  0x000000010651b655: add    %r8b,(%rax)
  0x000000010651b658: jmpq   0x000000010651b997  ; implicit exception: dispatches to 0x000000010651b987
  0x000000010651b65d: nop
  0x000000010651b65e: shl    $0x3,%rax          ;*getstatic instance
                                                ; - java.lang.CharacterData::of@96 (line 82)

  0x000000010651b662: add    $0x30,%rsp
  0x000000010651b666: pop    %rbp
  0x000000010651b667: test   %eax,-0x97956d(%rip)        # 0x0000000105ba2100
                                                ;   {poll_return}
  0x000000010651b66d: retq                      ;*areturn
                                                ; - java.lang.CharacterData::of@99 (line 82)

  0x000000010651b66e: movabs $0x7955c8eb0,%rax  ;   {oop(a 'java/lang/CharacterDataLatin1')}
  0x000000010651b678: add    $0x30,%rsp
  0x000000010651b67c: pop    %rbp
  0x000000010651b67d: test   %eax,-0x979583(%rip)        # 0x0000000105ba2100
                                                ;   {poll_return}
  0x000000010651b683: retq
  0x000000010651b684: mov    %rax,0x8(%rsp)
  0x000000010651b689: movq   $0xffffffffffffffff,(%rsp)
  0x000000010651b691: callq  0x0000000106507020  ; OopMap{off=470}
                                                ;*synchronization entry
                                                ; - java.lang.CharacterData::of@-1 (line 77)
                                                ;   {runtime_call}
  0x000000010651b696: jmpq   0x000000010651b4fe
  0x000000010651b69b: movabs $0x0,%rax          ;   {oop(NULL)}
  0x000000010651b6a5: push   %rax
  0x000000010651b6a6: push   %rbx
  0x000000010651b6a7: mov    0x48(%rax),%rbx
  0x000000010651b6ab: push   %rdi
  0x000000010651b6ac: push   %rsi
  0x000000010651b6ad: push   %rdx
  0x000000010651b6ae: push   %rcx
  0x000000010651b6af: push   %r8
  0x000000010651b6b1: push   %r9
  0x000000010651b6b3: push   %r10
  0x000000010651b6b5: mov    %rsp,%r10
  0x000000010651b6b8: and    $0xfffffffffffffff0,%rsp
  0x000000010651b6bc: push   %r10
  0x000000010651b6be: push   %r11
  0x000000010651b6c0: mov    $0x102,%edi
  0x000000010651b6c5: movabs $0x7fff8e9d3aa2,%r10  ;   {runtime_call}
  0x000000010651b6cf: callq  *%r10
  0x000000010651b6d2: pop    %r11
  0x000000010651b6d4: pop    %rsp
  0x000000010651b6d5: pop    %r10
  0x000000010651b6d7: pop    %r9
  0x000000010651b6d9: pop    %r8
  0x000000010651b6db: pop    %rcx
  0x000000010651b6dc: pop    %rdx
  0x000000010651b6dd: pop    %rsi
  0x000000010651b6de: pop    %rdi
  0x000000010651b6df: cmp    0x118(%rbx),%rax
  0x000000010651b6e6: pop    %rbx
  0x000000010651b6e7: pop    %rax
  0x000000010651b6e8: jne    0x000000010651b6f8
  0x000000010651b6ee: jmpq   0x000000010651b58a
  0x000000010651b6f3: mov    $0xa535d00,%eax
  0x000000010651b6f8: callq  0x0000000106506420  ; OopMap{off=573}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@112 (line 91)
                                                ;   {runtime_call}
  0x000000010651b6fd: jmpq   0x000000010651b580
  0x000000010651b702: callq  0x0000000106476b40  ; OopMap{rax=Oop off=583}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@112 (line 91)
                                                ;   {runtime_call}
  0x000000010651b707: mov    0x0(%rax),%eax
  0x000000010651b70d: mov    $0x6050b00,%eax
  0x000000010651b712: callq  0x0000000106505c20  ; OopMap{rax=Oop off=599}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@112 (line 91)
                                                ;   {runtime_call}
  0x000000010651b717: jmpq   0x000000010651b590
  0x000000010651b71c: movabs $0x0,%rax          ;   {oop(NULL)}
  0x000000010651b726: push   %rax
  0x000000010651b727: push   %rbx
  0x000000010651b728: mov    0x48(%rax),%rbx
  0x000000010651b72c: push   %rdi
  0x000000010651b72d: push   %rsi
  0x000000010651b72e: push   %rdx
  0x000000010651b72f: push   %rcx
  0x000000010651b730: push   %r8
  0x000000010651b732: push   %r9
  0x000000010651b734: push   %r10
  0x000000010651b736: mov    %rsp,%r10
  0x000000010651b739: and    $0xfffffffffffffff0,%rsp
  0x000000010651b73d: push   %r10
  0x000000010651b73f: push   %r11
  0x000000010651b741: mov    $0x102,%edi
  0x000000010651b746: movabs $0x7fff8e9d3aa2,%r10  ;   {runtime_call}
  0x000000010651b750: callq  *%r10
  0x000000010651b753: pop    %r11
  0x000000010651b755: pop    %rsp
  0x000000010651b756: pop    %r10
  0x000000010651b758: pop    %r9
  0x000000010651b75a: pop    %r8
  0x000000010651b75c: pop    %rcx
  0x000000010651b75d: pop    %rdx
  0x000000010651b75e: pop    %rsi
  0x000000010651b75f: pop    %rdi
  0x000000010651b760: cmp    0x118(%rbx),%rax
  0x000000010651b767: pop    %rbx
  0x000000010651b768: pop    %rax
  0x000000010651b769: jne    0x000000010651b779
  0x000000010651b76f: jmpq   0x000000010651b5b2
  0x000000010651b774: mov    $0xa535d00,%eax
  0x000000010651b779: callq  0x0000000106506420  ; OopMap{off=702}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@116 (line 93)
                                                ;   {runtime_call}
  0x000000010651b77e: jmpq   0x000000010651b5a8
  0x000000010651b783: callq  0x0000000106476b40  ; OopMap{rax=Oop off=712}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@116 (line 93)
                                                ;   {runtime_call}
  0x000000010651b788: mov    0x0(%rax),%eax
  0x000000010651b78e: mov    $0x6050b00,%eax
  0x000000010651b793: callq  0x0000000106505c20  ; OopMap{rax=Oop off=728}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@116 (line 93)
                                                ;   {runtime_call}
  0x000000010651b798: jmpq   0x000000010651b5b8
  0x000000010651b79d: movabs $0x0,%rax          ;   {oop(NULL)}
  0x000000010651b7a7: push   %rax
  0x000000010651b7a8: push   %rbx
  0x000000010651b7a9: mov    0x48(%rax),%rbx
  0x000000010651b7ad: push   %rdi
  0x000000010651b7ae: push   %rsi
  0x000000010651b7af: push   %rdx
  0x000000010651b7b0: push   %rcx
  0x000000010651b7b1: push   %r8
  0x000000010651b7b3: push   %r9
  0x000000010651b7b5: push   %r10
  0x000000010651b7b7: mov    %rsp,%r10
  0x000000010651b7ba: and    $0xfffffffffffffff0,%rsp
  0x000000010651b7be: push   %r10
  0x000000010651b7c0: push   %r11
  0x000000010651b7c2: mov    $0x102,%edi
  0x000000010651b7c7: movabs $0x7fff8e9d3aa2,%r10  ;   {runtime_call}
  0x000000010651b7d1: callq  *%r10
  0x000000010651b7d4: pop    %r11
  0x000000010651b7d6: pop    %rsp
  0x000000010651b7d7: pop    %r10
  0x000000010651b7d9: pop    %r9
  0x000000010651b7db: pop    %r8
  0x000000010651b7dd: pop    %rcx
  0x000000010651b7de: pop    %rdx
  0x000000010651b7df: pop    %rsi
  0x000000010651b7e0: pop    %rdi
  0x000000010651b7e1: cmp    0x118(%rbx),%rax
  0x000000010651b7e8: pop    %rbx
  0x000000010651b7e9: pop    %rax
  0x000000010651b7ea: jne    0x000000010651b7fa
  0x000000010651b7f0: jmpq   0x000000010651b5da
  0x000000010651b7f5: mov    $0xa535d00,%eax
  0x000000010651b7fa: callq  0x0000000106506420  ; OopMap{off=831}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@108 (line 88)
                                                ;   {runtime_call}
  0x000000010651b7ff: jmpq   0x000000010651b5d0
  0x000000010651b804: callq  0x0000000106476b40  ; OopMap{rax=Oop off=841}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@108 (line 88)
                                                ;   {runtime_call}
  0x000000010651b809: mov    0x0(%rax),%eax
  0x000000010651b80f: mov    $0x6050b00,%eax
  0x000000010651b814: callq  0x0000000106505c20  ; OopMap{rax=Oop off=857}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@108 (line 88)
                                                ;   {runtime_call}
  0x000000010651b819: jmpq   0x000000010651b5e0
  0x000000010651b81e: movabs $0x0,%rax          ;   {oop(NULL)}
  0x000000010651b828: push   %rax
  0x000000010651b829: push   %rbx
  0x000000010651b82a: mov    0x48(%rax),%rbx
  0x000000010651b82e: push   %rdi
  0x000000010651b82f: push   %rsi
  0x000000010651b830: push   %rdx
  0x000000010651b831: push   %rcx
  0x000000010651b832: push   %r8
  0x000000010651b834: push   %r9
  0x000000010651b836: push   %r10
  0x000000010651b838: mov    %rsp,%r10
  0x000000010651b83b: and    $0xfffffffffffffff0,%rsp
  0x000000010651b83f: push   %r10
  0x000000010651b841: push   %r11
  0x000000010651b843: mov    $0x102,%edi
  0x000000010651b848: movabs $0x7fff8e9d3aa2,%r10  ;   {runtime_call}
  0x000000010651b852: callq  *%r10
  0x000000010651b855: pop    %r11
  0x000000010651b857: pop    %rsp
  0x000000010651b858: pop    %r10
  0x000000010651b85a: pop    %r9
  0x000000010651b85c: pop    %r8
  0x000000010651b85e: pop    %rcx
  0x000000010651b85f: pop    %rdx
  0x000000010651b860: pop    %rsi
  0x000000010651b861: pop    %rdi
  0x000000010651b862: cmp    0x118(%rbx),%rax
  0x000000010651b869: pop    %rbx
  0x000000010651b86a: pop    %rax
  0x000000010651b86b: jne    0x000000010651b87b
  0x000000010651b871: jmpq   0x000000010651b602
  0x000000010651b876: mov    $0xa535d00,%eax
  0x000000010651b87b: callq  0x0000000106506420  ; OopMap{off=960}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@104 (line 86)
                                                ;   {runtime_call}
  0x000000010651b880: jmpq   0x000000010651b5f8
  0x000000010651b885: callq  0x0000000106476b40  ; OopMap{rax=Oop off=970}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@104 (line 86)
                                                ;   {runtime_call}
  0x000000010651b88a: mov    0x0(%rax),%eax
  0x000000010651b890: mov    $0x6050b00,%eax
  0x000000010651b895: callq  0x0000000106505c20  ; OopMap{rax=Oop off=986}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@104 (line 86)
                                                ;   {runtime_call}
  0x000000010651b89a: jmpq   0x000000010651b608
  0x000000010651b89f: movabs $0x0,%rax          ;   {oop(NULL)}
  0x000000010651b8a9: push   %rax
  0x000000010651b8aa: push   %rbx
  0x000000010651b8ab: mov    0x48(%rax),%rbx
  0x000000010651b8af: push   %rdi
  0x000000010651b8b0: push   %rsi
  0x000000010651b8b1: push   %rdx
  0x000000010651b8b2: push   %rcx
  0x000000010651b8b3: push   %r8
  0x000000010651b8b5: push   %r9
  0x000000010651b8b7: push   %r10
  0x000000010651b8b9: mov    %rsp,%r10
  0x000000010651b8bc: and    $0xfffffffffffffff0,%rsp
  0x000000010651b8c0: push   %r10
  0x000000010651b8c2: push   %r11
  0x000000010651b8c4: mov    $0x102,%edi
  0x000000010651b8c9: movabs $0x7fff8e9d3aa2,%r10  ;   {runtime_call}
  0x000000010651b8d3: callq  *%r10
  0x000000010651b8d6: pop    %r11
  0x000000010651b8d8: pop    %rsp
  0x000000010651b8d9: pop    %r10
  0x000000010651b8db: pop    %r9
  0x000000010651b8dd: pop    %r8
  0x000000010651b8df: pop    %rcx
  0x000000010651b8e0: pop    %rdx
  0x000000010651b8e1: pop    %rsi
  0x000000010651b8e2: pop    %rdi
  0x000000010651b8e3: cmp    0x118(%rbx),%rax
  0x000000010651b8ea: pop    %rbx
  0x000000010651b8eb: pop    %rax
  0x000000010651b8ec: jne    0x000000010651b8fc
  0x000000010651b8f2: jmpq   0x000000010651b62a
  0x000000010651b8f7: mov    $0xa535d00,%eax
  0x000000010651b8fc: callq  0x0000000106506420  ; OopMap{off=1089}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@100 (line 84)
                                                ;   {runtime_call}
  0x000000010651b901: jmpq   0x000000010651b620
  0x000000010651b906: callq  0x0000000106476b40  ; OopMap{rax=Oop off=1099}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@100 (line 84)
                                                ;   {runtime_call}
  0x000000010651b90b: mov    0x0(%rax),%eax
  0x000000010651b911: mov    $0x6050b00,%eax
  0x000000010651b916: callq  0x0000000106505c20  ; OopMap{rax=Oop off=1115}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@100 (line 84)
                                                ;   {runtime_call}
  0x000000010651b91b: jmpq   0x000000010651b630
  0x000000010651b920: movabs $0x0,%rax          ;   {oop(NULL)}
  0x000000010651b92a: push   %rax
  0x000000010651b92b: push   %rbx
  0x000000010651b92c: mov    0x48(%rax),%rbx
  0x000000010651b930: push   %rdi
  0x000000010651b931: push   %rsi
  0x000000010651b932: push   %rdx
  0x000000010651b933: push   %rcx
  0x000000010651b934: push   %r8
  0x000000010651b936: push   %r9
  0x000000010651b938: push   %r10
  0x000000010651b93a: mov    %rsp,%r10
  0x000000010651b93d: and    $0xfffffffffffffff0,%rsp
  0x000000010651b941: push   %r10
  0x000000010651b943: push   %r11
  0x000000010651b945: mov    $0x102,%edi
  0x000000010651b94a: movabs $0x7fff8e9d3aa2,%r10  ;   {runtime_call}
  0x000000010651b954: callq  *%r10
  0x000000010651b957: pop    %r11
  0x000000010651b959: pop    %rsp
  0x000000010651b95a: pop    %r10
  0x000000010651b95c: pop    %r9
  0x000000010651b95e: pop    %r8
  0x000000010651b960: pop    %rcx
  0x000000010651b961: pop    %rdx
  0x000000010651b962: pop    %rsi
  0x000000010651b963: pop    %rdi
  0x000000010651b964: cmp    0x118(%rbx),%rax
  0x000000010651b96b: pop    %rbx
  0x000000010651b96c: pop    %rax
  0x000000010651b96d: jne    0x000000010651b97d
  0x000000010651b973: jmpq   0x000000010651b652
  0x000000010651b978: mov    $0xa535d00,%eax
  0x000000010651b97d: callq  0x0000000106506420  ; OopMap{off=1218}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@96 (line 82)
                                                ;   {runtime_call}
  0x000000010651b982: jmpq   0x000000010651b648
  0x000000010651b987: callq  0x0000000106476b40  ; OopMap{rax=Oop off=1228}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@96 (line 82)
                                                ;   {runtime_call}
  0x000000010651b98c: mov    0x0(%rax),%eax
  0x000000010651b992: mov    $0x6050b00,%eax
  0x000000010651b997: callq  0x0000000106505c20  ; OopMap{rax=Oop off=1244}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@96 (line 82)
                                                ;   {runtime_call}
  0x000000010651b99c: jmpq   0x000000010651b658
  0x000000010651b9a1: nop
  0x000000010651b9a2: nop
  0x000000010651b9a3: mov    0x2a8(%r15),%rax
  0x000000010651b9aa: movabs $0x0,%r10
  0x000000010651b9b4: mov    %r10,0x2a8(%r15)
  0x000000010651b9bb: movabs $0x0,%r10
  0x000000010651b9c5: mov    %r10,0x2b0(%r15)
  0x000000010651b9cc: add    $0x30,%rsp
  0x000000010651b9d0: pop    %rbp
  0x000000010651b9d1: jmpq   0x00000001064776a0  ;   {runtime_call}
  0x000000010651b9d6: hlt
  0x000000010651b9d7: hlt
  0x000000010651b9d8: hlt
  0x000000010651b9d9: hlt
  0x000000010651b9da: hlt
  0x000000010651b9db: hlt
  0x000000010651b9dc: hlt
  0x000000010651b9dd: hlt
  0x000000010651b9de: hlt
  0x000000010651b9df: hlt
[Exception Handler]
[Stub Code]
  0x000000010651b9e0: callq  0x00000001065049a0  ;   {no_reloc}
  0x000000010651b9e5: mov    %rsp,-0x28(%rsp)
  0x000000010651b9ea: sub    $0x80,%rsp
  0x000000010651b9f1: mov    %rax,0x78(%rsp)
  0x000000010651b9f6: mov    %rcx,0x70(%rsp)
  0x000000010651b9fb: mov    %rdx,0x68(%rsp)
  0x000000010651ba00: mov    %rbx,0x60(%rsp)
  0x000000010651ba05: mov    %rbp,0x50(%rsp)
  0x000000010651ba0a: mov    %rsi,0x48(%rsp)
  0x000000010651ba0f: mov    %rdi,0x40(%rsp)
  0x000000010651ba14: mov    %r8,0x38(%rsp)
  0x000000010651ba19: mov    %r9,0x30(%rsp)
  0x000000010651ba1e: mov    %r10,0x28(%rsp)
  0x000000010651ba23: mov    %r11,0x20(%rsp)
  0x000000010651ba28: mov    %r12,0x18(%rsp)
  0x000000010651ba2d: mov    %r13,0x10(%rsp)
  0x000000010651ba32: mov    %r14,0x8(%rsp)
  0x000000010651ba37: mov    %r15,(%rsp)
  0x000000010651ba3b: movabs $0x105194e90,%rdi  ;   {external_word}
  0x000000010651ba45: movabs $0x10651b9e5,%rsi  ;   {internal_word}
  0x000000010651ba4f: mov    %rsp,%rdx
  0x000000010651ba52: and    $0xfffffffffffffff0,%rsp
  0x000000010651ba56: callq  0x0000000104fc0196  ;   {runtime_call}
  0x000000010651ba5b: hlt
[Deopt Handler Code]
  0x000000010651ba5c: movabs $0x10651ba5c,%r10  ;   {section_word}
  0x000000010651ba66: push   %r10
  0x000000010651ba68: jmpq   0x00000001064503c0  ;   {runtime_call}
  0x000000010651ba6d: hlt
  0x000000010651ba6e: hlt
  0x000000010651ba6f: hlt
Decoding compiled method 0x000000010651bdd0:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000011a3f0470} 'encode' '([CII[B)I' in 'sun/nio/cs/UTF_8$Encoder'
  # this:     rsi:rsi   = 'sun/nio/cs/UTF_8$Encoder'
  # parm0:    rdx:rdx   = '[C'
  # parm1:    rcx       = int
  # parm2:    r8        = int
  # parm3:    r9:r9     = '[B'
  #           [sp+0xa0]  (sp of caller)
  0x000000010651bfc0: mov    0x8(%rsi),%r10d
  0x000000010651bfc4: shl    $0x3,%r10
  0x000000010651bfc8: cmp    %rax,%r10
  0x000000010651bfcb: jne    0x000000010644ee20  ;   {runtime_call}
  0x000000010651bfd1: data32 data32 nopw 0x0(%rax,%rax,1)
  0x000000010651bfdc: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x000000010651bfe0: mov    %eax,-0x14000(%rsp)
  0x000000010651bfe7: push   %rbp
  0x000000010651bfe8: sub    $0x90,%rsp
  0x000000010651bfef: mov    %rsi,0x48(%rsp)
  0x000000010651bff4: mov    %rdx,0x68(%rsp)
  0x000000010651bff9: mov    %r8d,0x74(%rsp)
  0x000000010651bffe: mov    %r9,0x78(%rsp)
  0x000000010651c003: movabs $0x11a4d7ac8,%rax  ;   {metadata(method data for {method} {0x000000011a3f0470} 'encode' '([CII[B)I' in 'sun/nio/cs/UTF_8$Encoder')}
  0x000000010651c00d: mov    0xdc(%rax),%edi
  0x000000010651c013: add    $0x8,%edi
  0x000000010651c016: mov    %edi,0xdc(%rax)
  0x000000010651c01c: movabs $0x11a3f0470,%rax  ;   {metadata({method} {0x000000011a3f0470} 'encode' '([CII[B)I' in 'sun/nio/cs/UTF_8$Encoder')}
  0x000000010651c026: and    $0x1ff8,%edi
  0x000000010651c02c: cmp    $0x0,%edi
  0x000000010651c02f: je     0x000000010651c90b  ;*iload_2
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@0 (line 704)

  0x000000010651c035: mov    %rcx,%rdi
  0x000000010651c038: add    %r8d,%edi
  0x000000010651c03b: mov    %edi,0x50(%rsp)
  0x000000010651c03f: mov    0xc(%r9),%eax      ;*arraylength
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@13 (line 706)
                                                ; implicit exception: dispatches to 0x000000010651c922
  0x000000010651c043: movabs $0x11a4d7ac8,%rbx  ;   {metadata(method data for {method} {0x000000011a3f0470} 'encode' '([CII[B)I' in 'sun/nio/cs/UTF_8$Encoder')}
  0x000000010651c04d: addq   $0x1,0x108(%rbx)
  0x000000010651c055: movabs $0x11a46bfa0,%rbx  ;   {metadata(method data for {method} {0x000000011a395fb8} 'min' '(II)I' in 'java/lang/Math')}
  0x000000010651c05f: mov    0xdc(%rbx),%r11d
  0x000000010651c066: add    $0x8,%r11d
  0x000000010651c06a: mov    %r11d,0xdc(%rbx)
  0x000000010651c071: movabs $0x11a395fb8,%rbx  ;   {metadata({method} {0x000000011a395fb8} 'min' '(II)I' in 'java/lang/Math')}
  0x000000010651c07b: and    $0x7ffff8,%r11d
  0x000000010651c082: cmp    $0x0,%r11d
  0x000000010651c086: je     0x000000010651c927
  0x000000010651c08c: cmp    %eax,%r8d
  0x000000010651c08f: movabs $0x11a46bfa0,%rbx  ;   {metadata(method data for {method} {0x000000011a395fb8} 'min' '(II)I' in 'java/lang/Math')}
  0x000000010651c099: movabs $0x108,%r11
  0x000000010651c0a3: jg     0x000000010651c0b3
  0x000000010651c0a9: movabs $0x118,%r11
  0x000000010651c0b3: mov    (%rbx,%r11,1),%r13
  0x000000010651c0b7: lea    0x1(%r13),%r13
  0x000000010651c0bb: mov    %r13,(%rbx,%r11,1)
  0x000000010651c0bf: jg     0x000000010651c0dd  ;*if_icmpgt
                                                ; - java.lang.Math::min@2 (line 1336)
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@14 (line 706)

  0x000000010651c0c5: movabs $0x11a46bfa0,%rax  ;   {metadata(method data for {method} {0x000000011a395fb8} 'min' '(II)I' in 'java/lang/Math')}
  0x000000010651c0cf: incl   0x128(%rax)
  0x000000010651c0d5: mov    %r8,%rbx
  0x000000010651c0d8: jmpq   0x000000010651c0e0  ;*goto
                                                ; - java.lang.Math::min@6 (line 1336)
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@14 (line 706)

  0x000000010651c0dd: mov    %rax,%rbx          ;*ireturn
                                                ; - java.lang.Math::min@10 (line 1336)
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@14 (line 706)

  0x000000010651c0e0: mov    $0x0,%eax
  0x000000010651c0e5: jmpq   0x000000010651c1aa  ;*iload
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@20 (line 709)

  0x000000010651c0ea: nopw   0x0(%rax,%rax,1)
  0x000000010651c0f0: movslq %ecx,%r11
  0x000000010651c0f3: cmp    0xc(%rdx),%ecx     ; implicit exception: dispatches to 0x000000010651c93e
  0x000000010651c0f6: jae    0x000000010651c948
  0x000000010651c0fc: movzwl 0x10(%rdx,%r11,2),%r11d  ;*caload
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@29 (line 709)

  0x000000010651c102: cmp    $0x80,%r11d
  0x000000010651c109: movabs $0x11a4d7ac8,%r13  ;   {metadata(method data for {method} {0x000000011a3f0470} 'encode' '([CII[B)I' in 'sun/nio/cs/UTF_8$Encoder')}
  0x000000010651c113: movabs $0x138,%r14
  0x000000010651c11d: jge    0x000000010651c12d
  0x000000010651c123: movabs $0x148,%r14
  0x000000010651c12d: mov    0x0(%r13,%r14,1),%rsi
  0x000000010651c132: lea    0x1(%rsi),%rsi
  0x000000010651c136: mov    %rsi,0x0(%r13,%r14,1)
  0x000000010651c13b: jge    0x000000010651c1e7  ;*if_icmpge
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@33 (line 709)

  0x000000010651c141: mov    %rax,%rsi
  0x000000010651c144: inc    %esi
  0x000000010651c146: inc    %ecx
  0x000000010651c148: movslq %eax,%r13
  0x000000010651c14b: cmp    0xc(%r9),%eax
  0x000000010651c14f: jae    0x000000010651c951
  0x000000010651c155: mov    %r11b,0x10(%r9,%r13,1)  ;*bastore
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@50 (line 710)

  0x000000010651c15a: movabs $0x11a4d7ac8,%rax  ;   {metadata(method data for {method} {0x000000011a3f0470} 'encode' '([CII[B)I' in 'sun/nio/cs/UTF_8$Encoder')}
  0x000000010651c164: mov    0xe0(%rax),%r11d
  0x000000010651c16b: add    $0x8,%r11d
  0x000000010651c16f: mov    %r11d,0xe0(%rax)
  0x000000010651c176: movabs $0x11a3f0470,%rax  ;   {metadata({method} {0x000000011a3f0470} 'encode' '([CII[B)I' in 'sun/nio/cs/UTF_8$Encoder')}
  0x000000010651c180: and    $0xfff8,%r11d
  0x000000010651c187: cmp    $0x0,%r11d
  0x000000010651c18b: je     0x000000010651c95a  ; OopMap{rdx=Oop [104]=Oop r9=Oop [120]=Oop [72]=Oop off=465}
                                                ;*goto
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@51 (line 710)

  0x000000010651c191: test   %eax,-0x97a097(%rip)        # 0x0000000105ba2100
                                                ;   {poll}
  0x000000010651c197: movabs $0x11a4d7ac8,%rax  ;   {metadata(method data for {method} {0x000000011a3f0470} 'encode' '([CII[B)I' in 'sun/nio/cs/UTF_8$Encoder')}
  0x000000010651c1a1: incl   0x158(%rax)
  0x000000010651c1a7: mov    %rsi,%rax          ;*goto
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@51 (line 710)

  0x000000010651c1aa: cmp    %ebx,%eax
  0x000000010651c1ac: movabs $0x11a4d7ac8,%r11  ;   {metadata(method data for {method} {0x000000011a3f0470} 'encode' '([CII[B)I' in 'sun/nio/cs/UTF_8$Encoder')}
  0x000000010651c1b6: movabs $0x118,%r13
  0x000000010651c1c0: jge    0x000000010651c1d0
  0x000000010651c1c6: movabs $0x128,%r13
  0x000000010651c1d0: mov    (%r11,%r13,1),%r14
  0x000000010651c1d4: lea    0x1(%r14),%r14
  0x000000010651c1d8: mov    %r14,(%r11,%r13,1)
  0x000000010651c1dc: jge    0x000000010651c1f5
  0x000000010651c1e2: jmpq   0x000000010651c0f0  ;*if_icmpge
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@24 (line 709)

  0x000000010651c1e7: mov    %ebx,0x54(%rsp)
  0x000000010651c1eb: mov    0x48(%rsp),%rsi
  0x000000010651c1f0: jmpq   0x000000010651c200  ;*iload_2
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@54 (line 712)

  0x000000010651c1f5: mov    %ebx,0x54(%rsp)
  0x000000010651c1f9: mov    0x48(%rsp),%rsi
  0x000000010651c1fe: xchg   %ax,%ax
  0x000000010651c200: cmp    %edi,%ecx
  0x000000010651c202: movabs $0x11a4d7ac8,%r11  ;   {metadata(method data for {method} {0x000000011a3f0470} 'encode' '([CII[B)I' in 'sun/nio/cs/UTF_8$Encoder')}
  0x000000010651c20c: movabs $0x170,%r13
  0x000000010651c216: jge    0x000000010651c226
  0x000000010651c21c: movabs $0x180,%r13
  0x000000010651c226: mov    (%r11,%r13,1),%r14
  0x000000010651c22a: lea    0x1(%r14),%r14
  0x000000010651c22e: mov    %r14,(%r11,%r13,1)
  0x000000010651c232: jge    0x000000010651c8f6  ;*if_icmpge
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@57 (line 712)

  0x000000010651c238: mov    %rcx,%r11
  0x000000010651c23b: inc    %r11d
  0x000000010651c23e: movslq %ecx,%r13
  0x000000010651c241: cmp    0xc(%rdx),%ecx     ; implicit exception: dispatches to 0x000000010651c971
  0x000000010651c244: jae    0x000000010651c97b
  0x000000010651c24a: movzwl 0x10(%rdx,%r13,2),%ecx  ;*caload
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@65 (line 713)

  0x000000010651c250: cmp    $0x80,%ecx
  0x000000010651c256: movabs $0x11a4d7ac8,%r13  ;   {metadata(method data for {method} {0x000000011a3f0470} 'encode' '([CII[B)I' in 'sun/nio/cs/UTF_8$Encoder')}
  0x000000010651c260: movabs $0x190,%r14
  0x000000010651c26a: jge    0x000000010651c27a
  0x000000010651c270: movabs $0x1a0,%r14
  0x000000010651c27a: mov    0x0(%r13,%r14,1),%rdi
  0x000000010651c27f: lea    0x1(%rdi),%rdi
  0x000000010651c283: mov    %rdi,0x0(%r13,%r14,1)
  0x000000010651c288: jge    0x000000010651c2bd  ;*if_icmpge
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@73 (line 714)

  0x000000010651c28e: mov    %rax,%rdi
  0x000000010651c291: inc    %edi
  0x000000010651c293: mov    %rcx,%r13
  0x000000010651c296: movslq %eax,%r14
  0x000000010651c299: cmp    0xc(%r9),%eax
  0x000000010651c29d: jae    0x000000010651c984
  0x000000010651c2a3: mov    %r13b,0x10(%r9,%r14,1)  ;*bastore
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@86 (line 716)

  0x000000010651c2a8: movabs $0x11a4d7ac8,%rax  ;   {metadata(method data for {method} {0x000000011a3f0470} 'encode' '([CII[B)I' in 'sun/nio/cs/UTF_8$Encoder')}
  0x000000010651c2b2: incl   0x1b0(%rax)
  0x000000010651c2b8: jmpq   0x000000010651c886  ;*goto
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@87 (line 716)

  0x000000010651c2bd: cmp    $0x800,%ecx
  0x000000010651c2c3: movabs $0x11a4d7ac8,%rdi  ;   {metadata(method data for {method} {0x000000011a3f0470} 'encode' '([CII[B)I' in 'sun/nio/cs/UTF_8$Encoder')}
  0x000000010651c2cd: movabs $0x1c8,%r13
  0x000000010651c2d7: jge    0x000000010651c2e7
  0x000000010651c2dd: movabs $0x1d8,%r13
  0x000000010651c2e7: mov    (%rdi,%r13,1),%r14
  0x000000010651c2eb: lea    0x1(%r14),%r14
  0x000000010651c2ef: mov    %r14,(%rdi,%r13,1)
  0x000000010651c2f3: jge    0x000000010651c358  ;*if_icmpge
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@95 (line 717)

  0x000000010651c2f9: mov    %rcx,%rdi
  0x000000010651c2fc: sar    $0x6,%edi
  0x000000010651c2ff: or     $0xc0,%edi
  0x000000010651c305: mov    %rax,%r13
  0x000000010651c308: inc    %r13d
  0x000000010651c30b: movslq %eax,%r14
  0x000000010651c30e: cmp    0xc(%r9),%eax
  0x000000010651c312: jae    0x000000010651c98d
  0x000000010651c318: mov    %dil,0x10(%r9,%r14,1)  ;*bastore
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@115 (line 719)

  0x000000010651c31d: mov    %r13,%rax
  0x000000010651c320: inc    %eax
  0x000000010651c322: mov    %rcx,%rdi
  0x000000010651c325: and    $0x3f,%edi
  0x000000010651c328: or     $0x80,%edi
  0x000000010651c32e: movslq %r13d,%r14
  0x000000010651c331: cmp    0xc(%r9),%r13d
  0x000000010651c335: jae    0x000000010651c996
  0x000000010651c33b: mov    %dil,0x10(%r9,%r14,1)  ;*bastore
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@133 (line 720)

  0x000000010651c340: movabs $0x11a4d7ac8,%rdi  ;   {metadata(method data for {method} {0x000000011a3f0470} 'encode' '([CII[B)I' in 'sun/nio/cs/UTF_8$Encoder')}
  0x000000010651c34a: incl   0x1e8(%rdi)
  0x000000010651c350: mov    %rax,%rdi
  0x000000010651c353: jmpq   0x000000010651c886  ;*goto
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@134 (line 720)

  0x000000010651c358: movabs $0x11a4d7ac8,%rdi  ;   {metadata(method data for {method} {0x000000011a3f0470} 'encode' '([CII[B)I' in 'sun/nio/cs/UTF_8$Encoder')}
  0x000000010651c362: addq   $0x1,0x200(%rdi)
  0x000000010651c36a: movabs $0x11a4d7e70,%rdi  ;   {metadata(method data for {method} {0x000000011a338500} 'isSurrogate' '(C)Z' in 'java/lang/Character')}
  0x000000010651c374: mov    0xdc(%rdi),%r13d
  0x000000010651c37b: add    $0x8,%r13d
  0x000000010651c37f: mov    %r13d,0xdc(%rdi)
  0x000000010651c386: movabs $0x11a338500,%rdi  ;   {metadata({method} {0x000000011a338500} 'isSurrogate' '(C)Z' in 'java/lang/Character')}
  0x000000010651c390: and    $0x7ffff8,%r13d
  0x000000010651c397: cmp    $0x0,%r13d
  0x000000010651c39b: je     0x000000010651c99f
  0x000000010651c3a1: cmp    $0xd800,%ecx
  0x000000010651c3a7: movabs $0x11a4d7e70,%rdi  ;   {metadata(method data for {method} {0x000000011a338500} 'isSurrogate' '(C)Z' in 'java/lang/Character')}
  0x000000010651c3b1: movabs $0x108,%r13
  0x000000010651c3bb: jl     0x000000010651c3cb
  0x000000010651c3c1: movabs $0x118,%r13
  0x000000010651c3cb: mov    (%rdi,%r13,1),%r14
  0x000000010651c3cf: lea    0x1(%r14),%r14
  0x000000010651c3d3: mov    %r14,(%rdi,%r13,1)
  0x000000010651c3d7: jl     0x000000010651c419  ;*if_icmplt
                                                ; - java.lang.Character::isSurrogate@3 (line 4776)
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@139 (line 721)

  0x000000010651c3dd: cmp    $0xe000,%ecx
  0x000000010651c3e3: movabs $0x11a4d7e70,%rdi  ;   {metadata(method data for {method} {0x000000011a338500} 'isSurrogate' '(C)Z' in 'java/lang/Character')}
  0x000000010651c3ed: movabs $0x128,%r13
  0x000000010651c3f7: jge    0x000000010651c407
  0x000000010651c3fd: movabs $0x138,%r13
  0x000000010651c407: mov    (%rdi,%r13,1),%r14
  0x000000010651c40b: lea    0x1(%r14),%r14
  0x000000010651c40f: mov    %r14,(%rdi,%r13,1)
  0x000000010651c413: jl     0x000000010651c423  ;*if_icmpge
                                                ; - java.lang.Character::isSurrogate@9 (line 4776)
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@139 (line 721)

  0x000000010651c419: mov    $0x0,%edi
  0x000000010651c41e: jmpq   0x000000010651c438  ;*ireturn
                                                ; - java.lang.Character::isSurrogate@17 (line 4776)
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@139 (line 721)

  0x000000010651c423: movabs $0x11a4d7e70,%rdi  ;   {metadata(method data for {method} {0x000000011a338500} 'isSurrogate' '(C)Z' in 'java/lang/Character')}
  0x000000010651c42d: incl   0x148(%rdi)
  0x000000010651c433: mov    $0x1,%edi          ;*goto
                                                ; - java.lang.Character::isSurrogate@13 (line 4776)
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@139 (line 721)

  0x000000010651c438: and    $0x1,%edi
  0x000000010651c43b: cmp    $0x0,%edi
  0x000000010651c43e: movabs $0x11a4d7ac8,%rdi  ;   {metadata(method data for {method} {0x000000011a3f0470} 'encode' '([CII[B)I' in 'sun/nio/cs/UTF_8$Encoder')}
  0x000000010651c448: movabs $0x210,%r13
  0x000000010651c452: je     0x000000010651c462
  0x000000010651c458: movabs $0x220,%r13
  0x000000010651c462: mov    (%rdi,%r13,1),%r14
  0x000000010651c466: lea    0x1(%r14),%r14
  0x000000010651c46a: mov    %r14,(%rdi,%r13,1)
  0x000000010651c46e: je     0x000000010651c809  ;*ifeq
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@142 (line 721)

  0x000000010651c474: mov    0x30(%rsi),%edi
  0x000000010651c477: shl    $0x3,%rdi          ;*getfield sgp
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@146 (line 722)

  0x000000010651c47b: cmp    $0x0,%rdi
  0x000000010651c47f: movabs $0x11a4d7ac8,%rdi  ;   {metadata(method data for {method} {0x000000011a3f0470} 'encode' '([CII[B)I' in 'sun/nio/cs/UTF_8$Encoder')}
  0x000000010651c489: movabs $0x230,%r13
  0x000000010651c493: jne    0x000000010651c4a3
  0x000000010651c499: movabs $0x240,%r13
  0x000000010651c4a3: mov    (%rdi,%r13,1),%r14
  0x000000010651c4a7: lea    0x1(%r14),%r14
  0x000000010651c4ab: mov    %r14,(%rdi,%r13,1)
  0x000000010651c4af: mov    %ecx,0x64(%rsp)
  0x000000010651c4b3: mov    %r11d,0x60(%rsp)
  0x000000010651c4b8: mov    %eax,0x70(%rsp)
  0x000000010651c4bc: jne    0x000000010651c526  ;*ifnonnull
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@149 (line 722)

  0x000000010651c4c2: nopw   0x0(%rax,%rax,1)
  0x000000010651c4c8: jmpq   0x000000010651c9c5  ;   {no_reloc}
  0x000000010651c4cd: add    %al,(%rax)
  0x000000010651c4cf: add    %al,(%rax)
  0x000000010651c4d1: add    %ch,%cl
  0x000000010651c4d3: clc
  0x000000010651c4d4: add    $0x0,%al
  0x000000010651c4d6: add    %cl,-0x75(%rax)    ;*new  ; - sun.nio.cs.UTF_8$Encoder::encode@153 (line 723)

  0x000000010651c4d9: rorb   -0x41(%rax)        ;   {metadata(method data for {method} {0x000000011a3f0470} 'encode' '([CII[B)I' in 'sun/nio/cs/UTF_8$Encoder')}
  0x000000010651c4dc: enterq $0x4d7a,$0x1a
  0x000000010651c4e0: add    %eax,(%rax)
  0x000000010651c4e2: add    %al,(%rax)
  0x000000010651c4e4: addq   $0x1,0x250(%rdi)
  0x000000010651c4ec: mov    %rax,%rsi          ;*invokespecial <init>
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@157 (line 723)

  0x000000010651c4ef: mov    %rax,0x58(%rsp)
  0x000000010651c4f4: nop
  0x000000010651c4f5: nop
  0x000000010651c4f6: nop
  0x000000010651c4f7: callq  0x000000010644f020  ; OopMap{[72]=Oop [88]=Oop [104]=Oop [120]=Oop off=1340}
                                                ;*invokespecial <init>
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@157 (line 723)
                                                ;   {optimized virtual_call}
  0x000000010651c4fc: mov    0x48(%rsp),%rsi
  0x000000010651c501: mov    0x58(%rsp),%rax
  0x000000010651c506: mov    %rax,%r10
  0x000000010651c509: shr    $0x3,%r10
  0x000000010651c50d: mov    %r10d,0x30(%rsi)
  0x000000010651c511: mov    %rsi,%rdx
  0x000000010651c514: shr    $0x9,%rdx
  0x000000010651c518: movabs $0x111dc9000,%rcx
  0x000000010651c522: movb   $0x0,(%rdx,%rcx,1)  ;*putfield sgp
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@160 (line 723)

  0x000000010651c526: mov    0x30(%rsi),%edi
  0x000000010651c529: shl    $0x3,%rdi          ;*getfield sgp
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@164 (line 724)

  0x000000010651c52d: cmp    (%rdi),%rax        ; implicit exception: dispatches to 0x000000010651c9dc
  0x000000010651c530: mov    %rdi,%rdx
  0x000000010651c533: movabs $0x11a4d7ac8,%rcx  ;   {metadata(method data for {method} {0x000000011a3f0470} 'encode' '([CII[B)I' in 'sun/nio/cs/UTF_8$Encoder')}
  0x000000010651c53d: mov    0x8(%rdx),%edx
  0x000000010651c540: shl    $0x3,%rdx
  0x000000010651c544: cmp    0x268(%rcx),%rdx
  0x000000010651c54b: jne    0x000000010651c55a
  0x000000010651c54d: addq   $0x1,0x270(%rcx)
  0x000000010651c555: jmpq   0x000000010651c5c0
  0x000000010651c55a: cmp    0x278(%rcx),%rdx
  0x000000010651c561: jne    0x000000010651c570
  0x000000010651c563: addq   $0x1,0x280(%rcx)
  0x000000010651c56b: jmpq   0x000000010651c5c0
  0x000000010651c570: cmpq   $0x0,0x268(%rcx)
  0x000000010651c57b: jne    0x000000010651c594
  0x000000010651c57d: mov    %rdx,0x268(%rcx)
  0x000000010651c584: movq   $0x1,0x270(%rcx)
  0x000000010651c58f: jmpq   0x000000010651c5c0
  0x000000010651c594: cmpq   $0x0,0x278(%rcx)
  0x000000010651c59f: jne    0x000000010651c5b8
  0x000000010651c5a1: mov    %rdx,0x278(%rcx)
  0x000000010651c5a8: movq   $0x1,0x280(%rcx)
  0x000000010651c5b3: jmpq   0x000000010651c5c0
  0x000000010651c5b8: addq   $0x1,0x260(%rcx)
  0x000000010651c5c0: mov    0x60(%rsp),%r11d
  0x000000010651c5c5: dec    %r11d
  0x000000010651c5c8: mov    0x64(%rsp),%edx
  0x000000010651c5cc: mov    0x68(%rsp),%rcx
  0x000000010651c5d1: mov    %r11,%r8
  0x000000010651c5d4: mov    0x50(%rsp),%r9d
  0x000000010651c5d9: mov    %rdi,%rsi          ;*invokevirtual parse
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@175 (line 724)

  0x000000010651c5dc: nop
  0x000000010651c5dd: movabs $0xffffffffffffffff,%rax
  0x000000010651c5e7: callq  0x000000010644f220  ; OopMap{[104]=Oop [120]=Oop [72]=Oop off=1580}
                                                ;*invokevirtual parse
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@175 (line 724)
                                                ;   {virtual_call}
  0x000000010651c5ec: cmp    $0x0,%eax
  0x000000010651c5ef: movabs $0x11a4d7ac8,%rsi  ;   {metadata(method data for {method} {0x000000011a3f0470} 'encode' '([CII[B)I' in 'sun/nio/cs/UTF_8$Encoder')}
  0x000000010651c5f9: movabs $0x290,%rdi
  0x000000010651c603: jge    0x000000010651c613
  0x000000010651c609: movabs $0x2a0,%rdi
  0x000000010651c613: mov    (%rsi,%rdi,1),%rbx
  0x000000010651c617: lea    0x1(%rbx),%rbx
  0x000000010651c61b: mov    %rbx,(%rsi,%rdi,1)
  0x000000010651c61f: jge    0x000000010651c742  ;*ifge
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@182 (line 725)

  0x000000010651c625: mov    0x48(%rsp),%rsi
  0x000000010651c62a: mov    %rsi,%rdi
  0x000000010651c62d: movabs $0x11a4d7ac8,%rbx  ;   {metadata(method data for {method} {0x000000011a3f0470} 'encode' '([CII[B)I' in 'sun/nio/cs/UTF_8$Encoder')}
  0x000000010651c637: mov    0x8(%rdi),%edi
  0x000000010651c63a: shl    $0x3,%rdi
  0x000000010651c63e: cmp    0x2b8(%rbx),%rdi
  0x000000010651c645: jne    0x000000010651c654
  0x000000010651c647: addq   $0x1,0x2c0(%rbx)
  0x000000010651c64f: jmpq   0x000000010651c6ba
  0x000000010651c654: cmp    0x2c8(%rbx),%rdi
  0x000000010651c65b: jne    0x000000010651c66a
  0x000000010651c65d: addq   $0x1,0x2d0(%rbx)
  0x000000010651c665: jmpq   0x000000010651c6ba
  0x000000010651c66a: cmpq   $0x0,0x2b8(%rbx)
  0x000000010651c675: jne    0x000000010651c68e
  0x000000010651c677: mov    %rdi,0x2b8(%rbx)
  0x000000010651c67e: movq   $0x1,0x2c0(%rbx)
  0x000000010651c689: jmpq   0x000000010651c6ba
  0x000000010651c68e: cmpq   $0x0,0x2c8(%rbx)
  0x000000010651c699: jne    0x000000010651c6b2
  0x000000010651c69b: mov    %rdi,0x2c8(%rbx)
  0x000000010651c6a2: movq   $0x1,0x2d0(%rbx)
  0x000000010651c6ad: jmpq   0x000000010651c6ba
  0x000000010651c6b2: addq   $0x1,0x2b0(%rbx)
  0x000000010651c6ba: mov    0x20(%rsi),%edi
  0x000000010651c6bd: shl    $0x3,%rdi          ;*getfield malformedInputAction
                                                ; - java.nio.charset.CharsetEncoder::malformedInputAction@1 (line 365)
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@186 (line 726)

  0x000000010651c6c1: movabs $0x795596980,%r10  ;   {oop(a 'java/nio/charset/CodingErrorAction')}
  0x000000010651c6cb: cmp    %r10,%rdi
  0x000000010651c6ce: movabs $0x11a4d7ac8,%rdi  ;   {metadata(method data for {method} {0x000000011a3f0470} 'encode' '([CII[B)I' in 'sun/nio/cs/UTF_8$Encoder')}
  0x000000010651c6d8: movabs $0x2e0,%rbx
  0x000000010651c6e2: je     0x000000010651c6f2
  0x000000010651c6e8: movabs $0x2f0,%rbx
  0x000000010651c6f2: mov    (%rdi,%rbx,1),%rdx
  0x000000010651c6f6: lea    0x1(%rdx),%rdx
  0x000000010651c6fa: mov    %rdx,(%rdi,%rbx,1)
  0x000000010651c6fe: jne    0x000000010651c8e2  ;*if_acmpeq
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@192 (line 726)

  0x000000010651c704: mov    0x70(%rsp),%edi
  0x000000010651c708: mov    0x78(%rsp),%r9
  0x000000010651c70d: mov    %rdi,%rbx
  0x000000010651c710: inc    %ebx
  0x000000010651c712: movsbl 0x2c(%rsi),%edx    ;*getfield repl
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@205 (line 728)

  0x000000010651c716: movslq %edi,%rcx
  0x000000010651c719: cmp    0xc(%r9),%edi
  0x000000010651c71d: jae    0x000000010651c9e1
  0x000000010651c723: mov    %dl,0x10(%r9,%rcx,1)  ;*bastore
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@208 (line 728)

  0x000000010651c728: movabs $0x11a4d7ac8,%rax  ;   {metadata(method data for {method} {0x000000011a3f0470} 'encode' '([CII[B)I' in 'sun/nio/cs/UTF_8$Encoder')}
  0x000000010651c732: incl   0x300(%rax)
  0x000000010651c738: mov    0x60(%rsp),%r11d
  0x000000010651c73d: jmpq   0x000000010651c7ed  ;*goto
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@209 (line 728)

  0x000000010651c742: mov    0x70(%rsp),%edi
  0x000000010651c746: mov    0x78(%rsp),%r9
  0x000000010651c74b: mov    0x48(%rsp),%rsi
  0x000000010651c750: mov    %rax,%rbx
  0x000000010651c753: sar    $0x12,%ebx
  0x000000010651c756: or     $0xf0,%ebx
  0x000000010651c75c: mov    %rdi,%rdx
  0x000000010651c75f: inc    %edx
  0x000000010651c761: movslq %edi,%rcx
  0x000000010651c764: cmp    0xc(%r9),%edi
  0x000000010651c768: jae    0x000000010651c9ea
  0x000000010651c76e: mov    %bl,0x10(%r9,%rcx,1)  ;*bastore
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@229 (line 730)

  0x000000010651c773: mov    %rax,%rdi
  0x000000010651c776: sar    $0xc,%edi
  0x000000010651c779: and    $0x3f,%edi
  0x000000010651c77c: or     $0x80,%edi
  0x000000010651c782: mov    %rdx,%rbx
  0x000000010651c785: inc    %ebx
  0x000000010651c787: movslq %edx,%rcx
  0x000000010651c78a: cmp    0xc(%r9),%edx
  0x000000010651c78e: jae    0x000000010651c9f3
  0x000000010651c794: mov    %dil,0x10(%r9,%rcx,1)  ;*bastore
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@250 (line 731)

  0x000000010651c799: mov    %rax,%rdi
  0x000000010651c79c: sar    $0x6,%edi
  0x000000010651c79f: and    $0x3f,%edi
  0x000000010651c7a2: or     $0x80,%edi
  0x000000010651c7a8: mov    %rbx,%rdx
  0x000000010651c7ab: inc    %edx
  0x000000010651c7ad: movslq %ebx,%rcx
  0x000000010651c7b0: cmp    0xc(%r9),%ebx
  0x000000010651c7b4: jae    0x000000010651c9fc
  0x000000010651c7ba: mov    %dil,0x10(%r9,%rcx,1)  ;*bastore
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@271 (line 732)

  0x000000010651c7bf: mov    %rdx,%rdi
  0x000000010651c7c2: inc    %edi
  0x000000010651c7c4: mov    %rax,%rbx
  0x000000010651c7c7: and    $0x3f,%ebx
  0x000000010651c7ca: or     $0x80,%ebx
  0x000000010651c7d0: movslq %edx,%rcx
  0x000000010651c7d3: cmp    0xc(%r9),%edx
  0x000000010651c7d7: jae    0x000000010651ca05
  0x000000010651c7dd: mov    %bl,0x10(%r9,%rcx,1)  ;*bastore
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@289 (line 733)

  0x000000010651c7e2: mov    0x60(%rsp),%r11d
  0x000000010651c7e7: inc    %r11d
  0x000000010651c7ea: mov    %rdi,%rbx
  0x000000010651c7ed: movabs $0x11a4d7ac8,%rax  ;   {metadata(method data for {method} {0x000000011a3f0470} 'encode' '([CII[B)I' in 'sun/nio/cs/UTF_8$Encoder')}
  0x000000010651c7f7: incl   0x318(%rax)
  0x000000010651c7fd: mov    %rbx,%rdi
  0x000000010651c800: mov    0x64(%rsp),%ecx
  0x000000010651c804: jmpq   0x000000010651c886  ;*goto
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@293 (line 736)

  0x000000010651c809: mov    %ecx,0x64(%rsp)
  0x000000010651c80d: mov    %rax,%rdi
  0x000000010651c810: mov    0x64(%rsp),%ecx
  0x000000010651c814: sar    $0xc,%ecx
  0x000000010651c817: or     $0xe0,%ecx
  0x000000010651c81d: mov    %rdi,%rax
  0x000000010651c820: inc    %eax
  0x000000010651c822: movslq %edi,%rbx
  0x000000010651c825: cmp    0xc(%r9),%edi
  0x000000010651c829: jae    0x000000010651ca0e
  0x000000010651c82f: mov    %cl,0x10(%r9,%rbx,1)  ;*bastore
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@313 (line 738)

  0x000000010651c834: mov    0x64(%rsp),%ecx
  0x000000010651c838: sar    $0x6,%ecx
  0x000000010651c83b: and    $0x3f,%ecx
  0x000000010651c83e: or     $0x80,%ecx
  0x000000010651c844: mov    %rax,%rdi
  0x000000010651c847: inc    %edi
  0x000000010651c849: movslq %eax,%rbx
  0x000000010651c84c: cmp    0xc(%r9),%eax
  0x000000010651c850: jae    0x000000010651ca17
  0x000000010651c856: mov    %cl,0x10(%r9,%rbx,1)  ;*bastore
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@334 (line 739)

  0x000000010651c85b: mov    %rdi,%rax
  0x000000010651c85e: inc    %eax
  0x000000010651c860: mov    0x64(%rsp),%ecx
  0x000000010651c864: and    $0x3f,%ecx
  0x000000010651c867: or     $0x80,%ecx
  0x000000010651c86d: movslq %edi,%rbx
  0x000000010651c870: cmp    0xc(%r9),%edi
  0x000000010651c874: jae    0x000000010651ca20
  0x000000010651c87a: mov    %cl,0x10(%r9,%rbx,1)  ;*bastore
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@352 (line 740)

  0x000000010651c87f: mov    %rax,%rdi          ;*goto
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@353 (line 742)

  0x000000010651c882: mov    0x64(%rsp),%ecx
  0x000000010651c886: movabs $0x11a4d7ac8,%rax  ;   {metadata(method data for {method} {0x000000011a3f0470} 'encode' '([CII[B)I' in 'sun/nio/cs/UTF_8$Encoder')}
  0x000000010651c890: mov    0xe0(%rax),%ebx
  0x000000010651c896: add    $0x8,%ebx
  0x000000010651c899: mov    %ebx,0xe0(%rax)
  0x000000010651c89f: movabs $0x11a3f0470,%rax  ;   {metadata({method} {0x000000011a3f0470} 'encode' '([CII[B)I' in 'sun/nio/cs/UTF_8$Encoder')}
  0x000000010651c8a9: and    $0xfff8,%ebx
  0x000000010651c8af: cmp    $0x0,%ebx
  0x000000010651c8b2: je     0x000000010651ca29  ; OopMap{[104]=Oop rsi=Oop [72]=Oop r9=Oop [120]=Oop off=2296}
                                                ;*goto
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@353 (line 742)

  0x000000010651c8b8: test   %eax,-0x97a7be(%rip)        # 0x0000000105ba2100
                                                ;   {poll}
  0x000000010651c8be: movabs $0x11a4d7ac8,%rax  ;   {metadata(method data for {method} {0x000000011a3f0470} 'encode' '([CII[B)I' in 'sun/nio/cs/UTF_8$Encoder')}
  0x000000010651c8c8: incl   0x330(%rax)
  0x000000010651c8ce: mov    %r11,%rcx
  0x000000010651c8d1: mov    %rdi,%rax
  0x000000010651c8d4: mov    0x50(%rsp),%edi
  0x000000010651c8d8: mov    0x68(%rsp),%rdx
  0x000000010651c8dd: jmpq   0x000000010651c200  ;*goto
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@353 (line 742)

  0x000000010651c8e2: mov    $0xffffffff,%eax
  0x000000010651c8e7: add    $0x90,%rsp
  0x000000010651c8ee: pop    %rbp
  0x000000010651c8ef: test   %eax,-0x97a7f5(%rip)        # 0x0000000105ba2100
                                                ;   {poll_return}
  0x000000010651c8f5: retq                      ;*ireturn
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@196 (line 727)

  0x000000010651c8f6: mov    %rax,%rdi
  0x000000010651c8f9: mov    %rdi,%rax
  0x000000010651c8fc: add    $0x90,%rsp
  0x000000010651c903: pop    %rbp
  0x000000010651c904: test   %eax,-0x97a80a(%rip)        # 0x0000000105ba2100
                                                ;   {poll_return}
  0x000000010651c90a: retq
  0x000000010651c90b: mov    %rax,0x8(%rsp)
  0x000000010651c910: movq   $0xffffffffffffffff,(%rsp)
  0x000000010651c918: callq  0x0000000106507020  ; OopMap{rsi=Oop [72]=Oop rdx=Oop [104]=Oop r9=Oop [120]=Oop off=2397}
                                                ;*synchronization entry
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@-1 (line 704)
                                                ;   {runtime_call}
  0x000000010651c91d: jmpq   0x000000010651c035
  0x000000010651c922: callq  0x0000000106476b40  ; OopMap{rsi=Oop [72]=Oop rdx=Oop [104]=Oop r9=Oop [120]=Oop off=2407}
                                                ;*arraylength
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@13 (line 706)
                                                ;   {runtime_call}
  0x000000010651c927: mov    %rbx,0x8(%rsp)
  0x000000010651c92c: movq   $0xffffffffffffffff,(%rsp)
  0x000000010651c934: callq  0x0000000106507020  ; OopMap{rsi=Oop [72]=Oop rdx=Oop [104]=Oop r9=Oop [120]=Oop off=2425}
                                                ;*synchronization entry
                                                ; - java.lang.Math::min@-1 (line 1336)
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@14 (line 706)
                                                ;   {runtime_call}
  0x000000010651c939: jmpq   0x000000010651c08c
  0x000000010651c93e: callq  0x0000000106476b40  ; OopMap{rdx=Oop [104]=Oop r9=Oop [120]=Oop [72]=Oop off=2435}
                                                ;*caload
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@29 (line 709)
                                                ;   {runtime_call}
  0x000000010651c943: callq  0x0000000106476b40  ; OopMap{rdx=Oop [104]=Oop r9=Oop [120]=Oop [72]=Oop off=2440}
                                                ;*caload
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@29 (line 709)
                                                ;   {runtime_call}
  0x000000010651c948: mov    %rcx,(%rsp)
  0x000000010651c94c: callq  0x0000000106477200  ; OopMap{rdx=Oop [104]=Oop r9=Oop [120]=Oop [72]=Oop off=2449}
                                                ;*caload
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@29 (line 709)
                                                ;   {runtime_call}
  0x000000010651c951: mov    %rax,(%rsp)
  0x000000010651c955: callq  0x0000000106477200  ; OopMap{rdx=Oop [104]=Oop r9=Oop [120]=Oop [72]=Oop off=2458}
                                                ;*bastore
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@50 (line 710)
                                                ;   {runtime_call}
  0x000000010651c95a: mov    %rax,0x8(%rsp)
  0x000000010651c95f: movq   $0x33,(%rsp)
  0x000000010651c967: callq  0x0000000106507020  ; OopMap{rdx=Oop [104]=Oop r9=Oop [120]=Oop [72]=Oop off=2476}
                                                ;*goto
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@51 (line 710)
                                                ;   {runtime_call}
  0x000000010651c96c: jmpq   0x000000010651c191
  0x000000010651c971: callq  0x0000000106476b40  ; OopMap{rdx=Oop [104]=Oop r9=Oop [120]=Oop rsi=Oop [72]=Oop off=2486}
                                                ;*caload
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@65 (line 713)
                                                ;   {runtime_call}
  0x000000010651c976: callq  0x0000000106476b40  ; OopMap{rdx=Oop [104]=Oop r9=Oop [120]=Oop rsi=Oop [72]=Oop off=2491}
                                                ;*caload
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@65 (line 713)
                                                ;   {runtime_call}
  0x000000010651c97b: mov    %rcx,(%rsp)
  0x000000010651c97f: callq  0x0000000106477200  ; OopMap{rdx=Oop [104]=Oop r9=Oop [120]=Oop rsi=Oop [72]=Oop off=2500}
                                                ;*caload
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@65 (line 713)
                                                ;   {runtime_call}
  0x000000010651c984: mov    %rax,(%rsp)
  0x000000010651c988: callq  0x0000000106477200  ; OopMap{rdx=Oop [104]=Oop r9=Oop [120]=Oop rsi=Oop [72]=Oop off=2509}
                                                ;*bastore
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@86 (line 716)
                                                ;   {runtime_call}
  0x000000010651c98d: mov    %rax,(%rsp)
  0x000000010651c991: callq  0x0000000106477200  ; OopMap{rdx=Oop [104]=Oop r9=Oop [120]=Oop rsi=Oop [72]=Oop off=2518}
                                                ;*bastore
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@115 (line 719)
                                                ;   {runtime_call}
  0x000000010651c996: mov    %r13,(%rsp)
  0x000000010651c99a: callq  0x0000000106477200  ; OopMap{rdx=Oop [104]=Oop r9=Oop [120]=Oop rsi=Oop [72]=Oop off=2527}
                                                ;*bastore
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@133 (line 720)
                                                ;   {runtime_call}
  0x000000010651c99f: mov    %rdi,0x8(%rsp)
  0x000000010651c9a4: movq   $0xffffffffffffffff,(%rsp)
  0x000000010651c9ac: callq  0x0000000106507020  ; OopMap{rdx=Oop [104]=Oop r9=Oop [120]=Oop rsi=Oop [72]=Oop off=2545}
                                                ;*synchronization entry
                                                ; - java.lang.Character::isSurrogate@-1 (line 4776)
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@139 (line 721)
                                                ;   {runtime_call}
  0x000000010651c9b1: jmpq   0x000000010651c3a1
  0x000000010651c9b6: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x000000010651c9c0: mov    $0xa050f00,%eax
  0x000000010651c9c5: callq  0x0000000106506020  ; OopMap{[120]=Oop [72]=Oop [104]=Oop off=2570}
                                                ;*new  ; - sun.nio.cs.UTF_8$Encoder::encode@153 (line 723)
                                                ;   {runtime_call}
  0x000000010651c9ca: jmpq   0x000000010651c4c8
  0x000000010651c9cf: mov    %rdx,%rdx
  0x000000010651c9d2: callq  0x0000000106476620  ; OopMap{[120]=Oop [72]=Oop [104]=Oop off=2583}
                                                ;*new  ; - sun.nio.cs.UTF_8$Encoder::encode@153 (line 723)
                                                ;   {runtime_call}
  0x000000010651c9d7: jmpq   0x000000010651c4d7
  0x000000010651c9dc: callq  0x0000000106476b40  ; OopMap{[104]=Oop [120]=Oop rsi=Oop [72]=Oop rdi=Oop off=2593}
                                                ;*invokevirtual parse
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@175 (line 724)
                                                ;   {runtime_call}
  0x000000010651c9e1: mov    %rdi,(%rsp)
  0x000000010651c9e5: callq  0x0000000106477200  ; OopMap{[104]=Oop rsi=Oop [72]=Oop r9=Oop [120]=Oop off=2602}
                                                ;*bastore
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@208 (line 728)
                                                ;   {runtime_call}
  0x000000010651c9ea: mov    %rdi,(%rsp)
  0x000000010651c9ee: callq  0x0000000106477200  ; OopMap{[104]=Oop rsi=Oop [72]=Oop r9=Oop [120]=Oop off=2611}
                                                ;*bastore
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@229 (line 730)
                                                ;   {runtime_call}
  0x000000010651c9f3: mov    %rdx,(%rsp)
  0x000000010651c9f7: callq  0x0000000106477200  ; OopMap{[104]=Oop rsi=Oop [72]=Oop r9=Oop [120]=Oop off=2620}
                                                ;*bastore
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@250 (line 731)
                                                ;   {runtime_call}
  0x000000010651c9fc: mov    %rbx,(%rsp)
  0x000000010651ca00: callq  0x0000000106477200  ; OopMap{[104]=Oop rsi=Oop [72]=Oop r9=Oop [120]=Oop off=2629}
                                                ;*bastore
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@271 (line 732)
                                                ;   {runtime_call}
  0x000000010651ca05: mov    %rdx,(%rsp)
  0x000000010651ca09: callq  0x0000000106477200  ; OopMap{[104]=Oop rsi=Oop [72]=Oop r9=Oop [120]=Oop off=2638}
                                                ;*bastore
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@289 (line 733)
                                                ;   {runtime_call}
  0x000000010651ca0e: mov    %rdi,(%rsp)
  0x000000010651ca12: callq  0x0000000106477200  ; OopMap{[104]=Oop rsi=Oop [72]=Oop r9=Oop [120]=Oop off=2647}
                                                ;*bastore
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@313 (line 738)
                                                ;   {runtime_call}
  0x000000010651ca17: mov    %rax,(%rsp)
  0x000000010651ca1b: callq  0x0000000106477200  ; OopMap{[104]=Oop rsi=Oop [72]=Oop r9=Oop [120]=Oop off=2656}
                                                ;*bastore
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@334 (line 739)
                                                ;   {runtime_call}
  0x000000010651ca20: mov    %rdi,(%rsp)
  0x000000010651ca24: callq  0x0000000106477200  ; OopMap{[104]=Oop rsi=Oop [72]=Oop r9=Oop [120]=Oop off=2665}
                                                ;*bastore
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@352 (line 740)
                                                ;   {runtime_call}
  0x000000010651ca29: mov    %rax,0x8(%rsp)
  0x000000010651ca2e: movq   $0x161,(%rsp)
  0x000000010651ca36: callq  0x0000000106507020  ; OopMap{[104]=Oop rsi=Oop [72]=Oop r9=Oop [120]=Oop off=2683}
                                                ;*goto
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@353 (line 742)
                                                ;   {runtime_call}
  0x000000010651ca3b: jmpq   0x000000010651c8b8
  0x000000010651ca40: nop
  0x000000010651ca41: nop
  0x000000010651ca42: mov    0x2a8(%r15),%rax
  0x000000010651ca49: movabs $0x0,%r10
  0x000000010651ca53: mov    %r10,0x2a8(%r15)
  0x000000010651ca5a: movabs $0x0,%r10
  0x000000010651ca64: mov    %r10,0x2b0(%r15)
  0x000000010651ca6b: add    $0x90,%rsp
  0x000000010651ca72: pop    %rbp
  0x000000010651ca73: jmpq   0x00000001064776a0  ;   {runtime_call}
  0x000000010651ca78: hlt
  0x000000010651ca79: hlt
  0x000000010651ca7a: hlt
  0x000000010651ca7b: hlt
  0x000000010651ca7c: hlt
  0x000000010651ca7d: hlt
  0x000000010651ca7e: hlt
  0x000000010651ca7f: hlt
[Stub Code]
  0x000000010651ca80: nop                       ;   {no_reloc}
  0x000000010651ca81: nop
  0x000000010651ca82: nop
  0x000000010651ca83: nop
  0x000000010651ca84: nop
  0x000000010651ca85: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010651ca8f: jmpq   0x000000010651ca8f  ;   {runtime_call}
  0x000000010651ca94: nop
  0x000000010651ca95: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010651ca9f: jmpq   0x000000010651ca9f  ;   {runtime_call}
[Exception Handler]
  0x000000010651caa4: callq  0x00000001065049a0  ;   {runtime_call}
  0x000000010651caa9: mov    %rsp,-0x28(%rsp)
  0x000000010651caae: sub    $0x80,%rsp
  0x000000010651cab5: mov    %rax,0x78(%rsp)
  0x000000010651caba: mov    %rcx,0x70(%rsp)
  0x000000010651cabf: mov    %rdx,0x68(%rsp)
  0x000000010651cac4: mov    %rbx,0x60(%rsp)
  0x000000010651cac9: mov    %rbp,0x50(%rsp)
  0x000000010651cace: mov    %rsi,0x48(%rsp)
  0x000000010651cad3: mov    %rdi,0x40(%rsp)
  0x000000010651cad8: mov    %r8,0x38(%rsp)
  0x000000010651cadd: mov    %r9,0x30(%rsp)
  0x000000010651cae2: mov    %r10,0x28(%rsp)
  0x000000010651cae7: mov    %r11,0x20(%rsp)
  0x000000010651caec: mov    %r12,0x18(%rsp)
  0x000000010651caf1: mov    %r13,0x10(%rsp)
  0x000000010651caf6: mov    %r14,0x8(%rsp)
  0x000000010651cafb: mov    %r15,(%rsp)
  0x000000010651caff: movabs $0x105194e90,%rdi  ;   {external_word}
  0x000000010651cb09: movabs $0x10651caa9,%rsi  ;   {internal_word}
  0x000000010651cb13: mov    %rsp,%rdx
  0x000000010651cb16: and    $0xfffffffffffffff0,%rsp
  0x000000010651cb1a: callq  0x0000000104fc0196  ;   {runtime_call}
  0x000000010651cb1f: hlt
[Deopt Handler Code]
  0x000000010651cb20: movabs $0x10651cb20,%r10  ;   {section_word}
  0x000000010651cb2a: push   %r10
  0x000000010651cb2c: jmpq   0x00000001064503c0  ;   {runtime_call}
  0x000000010651cb31: hlt
  0x000000010651cb32: hlt
  0x000000010651cb33: hlt
  0x000000010651cb34: hlt
  0x000000010651cb35: hlt
  0x000000010651cb36: hlt
  0x000000010651cb37: hlt
Decoding compiled method 0x000000010651d510:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000011a467c40} 'toLowerCase' '(I)I' in 'java/lang/CharacterDataLatin1'
  # this:     rsi:rsi   = 'java/lang/CharacterDataLatin1'
  # parm0:    rdx       = int
  #           [sp+0x50]  (sp of caller)
  0x000000010651d680: mov    0x8(%rsi),%r10d
  0x000000010651d684: shl    $0x3,%r10
  0x000000010651d688: cmp    %rax,%r10
  0x000000010651d68b: jne    0x000000010644ee20  ;   {runtime_call}
  0x000000010651d691: data32 data32 nopw 0x0(%rax,%rax,1)
  0x000000010651d69c: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x000000010651d6a0: mov    %eax,-0x14000(%rsp)
  0x000000010651d6a7: push   %rbp
  0x000000010651d6a8: sub    $0x40,%rsp
  0x000000010651d6ac: movabs $0x11a4d7fe8,%rax  ;   {metadata(method data for {method} {0x000000011a467c40} 'toLowerCase' '(I)I' in 'java/lang/CharacterDataLatin1')}
  0x000000010651d6b6: mov    0xdc(%rax),%edi
  0x000000010651d6bc: add    $0x8,%edi
  0x000000010651d6bf: mov    %edi,0xdc(%rax)
  0x000000010651d6c5: movabs $0x11a467c40,%rax  ;   {metadata({method} {0x000000011a467c40} 'toLowerCase' '(I)I' in 'java/lang/CharacterDataLatin1')}
  0x000000010651d6cf: and    $0x1ff8,%edi
  0x000000010651d6d5: cmp    $0x0,%edi
  0x000000010651d6d8: je     0x000000010651d7fa  ;*iload_1
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@0 (line 133)

  0x000000010651d6de: mov    %rsi,%rax
  0x000000010651d6e1: movabs $0x11a4d7fe8,%rdi  ;   {metadata(method data for {method} {0x000000011a467c40} 'toLowerCase' '(I)I' in 'java/lang/CharacterDataLatin1')}
  0x000000010651d6eb: movabs $0x7c0037468,%r10  ;   {metadata('java/lang/CharacterDataLatin1')}
  0x000000010651d6f5: mov    %r10,0x110(%rdi)
  0x000000010651d6fc: addq   $0x1,0x118(%rdi)
  0x000000010651d704: movabs $0x11a4d77f0,%rax  ;   {metadata(method data for {method} {0x000000011a467470} 'getProperties' '(I)I' in 'java/lang/CharacterDataLatin1')}
  0x000000010651d70e: mov    0xdc(%rax),%edi
  0x000000010651d714: add    $0x8,%edi
  0x000000010651d717: mov    %edi,0xdc(%rax)
  0x000000010651d71d: movabs $0x11a467470,%rax  ;   {metadata({method} {0x000000011a467470} 'getProperties' '(I)I' in 'java/lang/CharacterDataLatin1')}
  0x000000010651d727: and    $0x7ffff8,%edi
  0x000000010651d72d: cmp    $0x0,%edi
  0x000000010651d730: je     0x000000010651d811
  0x000000010651d736: mov    %rdx,%rax
  0x000000010651d739: and    $0xffff,%eax
  0x000000010651d73f: movabs $0x7955c8ec0,%rdi  ;   {oop([I)}
  0x000000010651d749: movslq %eax,%rbx
  0x000000010651d74c: cmp    0xc(%rdi),%eax     ; implicit exception: dispatches to 0x000000010651d828
  0x000000010651d74f: jae    0x000000010651d832
  0x000000010651d755: mov    0x10(%rdi,%rbx,4),%eax  ;*iaload
                                                ; - java.lang.CharacterDataLatin1::getProperties@7 (line 72)
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@4 (line 134)

  0x000000010651d759: mov    %rax,%rsi
  0x000000010651d75c: and    $0x20000,%esi
  0x000000010651d762: cmp    $0x0,%esi
  0x000000010651d765: movabs $0x11a4d7fe8,%rsi  ;   {metadata(method data for {method} {0x000000011a467c40} 'toLowerCase' '(I)I' in 'java/lang/CharacterDataLatin1')}
  0x000000010651d76f: movabs $0x138,%rdi
  0x000000010651d779: je     0x000000010651d789
  0x000000010651d77f: movabs $0x148,%rdi
  0x000000010651d789: mov    (%rsi,%rdi,1),%rbx
  0x000000010651d78d: lea    0x1(%rbx),%rbx
  0x000000010651d791: mov    %rbx,(%rsi,%rdi,1)
  0x000000010651d795: je     0x000000010651d7eb  ;*ifeq
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@12 (line 136)

  0x000000010651d79b: mov    %rax,%rsi
  0x000000010651d79e: and    $0x7fc0000,%esi
  0x000000010651d7a4: cmp    $0x7fc0000,%esi
  0x000000010651d7aa: movabs $0x11a4d7fe8,%rsi  ;   {metadata(method data for {method} {0x000000011a467c40} 'toLowerCase' '(I)I' in 'java/lang/CharacterDataLatin1')}
  0x000000010651d7b4: movabs $0x158,%rdi
  0x000000010651d7be: je     0x000000010651d7ce
  0x000000010651d7c4: movabs $0x168,%rdi
  0x000000010651d7ce: mov    (%rsi,%rdi,1),%rbx
  0x000000010651d7d2: lea    0x1(%rbx),%rbx
  0x000000010651d7d6: mov    %rbx,(%rsi,%rdi,1)
  0x000000010651d7da: je     0x000000010651d7eb  ;*if_icmpeq
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@21 (line 136)

  0x000000010651d7e0: shl    $0x5,%eax
  0x000000010651d7e3: sar    $0x17,%eax
  0x000000010651d7e6: add    %edx,%eax
  0x000000010651d7e8: mov    %rax,%rdx          ;*iload_2
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@37 (line 141)

  0x000000010651d7eb: mov    %rdx,%rax
  0x000000010651d7ee: add    $0x40,%rsp
  0x000000010651d7f2: pop    %rbp
  0x000000010651d7f3: test   %eax,-0x97b6f9(%rip)        # 0x0000000105ba2100
                                                ;   {poll_return}
  0x000000010651d7f9: retq
  0x000000010651d7fa: mov    %rax,0x8(%rsp)
  0x000000010651d7ff: movq   $0xffffffffffffffff,(%rsp)
  0x000000010651d807: callq  0x0000000106507020  ; OopMap{rsi=Oop off=396}
                                                ;*synchronization entry
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@-1 (line 133)
                                                ;   {runtime_call}
  0x000000010651d80c: jmpq   0x000000010651d6de
  0x000000010651d811: mov    %rax,0x8(%rsp)
  0x000000010651d816: movq   $0xffffffffffffffff,(%rsp)
  0x000000010651d81e: callq  0x0000000106507020  ; OopMap{rsi=Oop off=419}
                                                ;*synchronization entry
                                                ; - java.lang.CharacterDataLatin1::getProperties@-1 (line 71)
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@4 (line 134)
                                                ;   {runtime_call}
  0x000000010651d823: jmpq   0x000000010651d736
  0x000000010651d828: callq  0x0000000106476b40  ; OopMap{rsi=Oop rdi=Oop off=429}
                                                ;*iaload
                                                ; - java.lang.CharacterDataLatin1::getProperties@7 (line 72)
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@4 (line 134)
                                                ;   {runtime_call}
  0x000000010651d82d: callq  0x0000000106476b40  ; OopMap{rsi=Oop rdi=Oop off=434}
                                                ;*iaload
                                                ; - java.lang.CharacterDataLatin1::getProperties@7 (line 72)
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@4 (line 134)
                                                ;   {runtime_call}
  0x000000010651d832: mov    %rax,(%rsp)
  0x000000010651d836: callq  0x0000000106477200  ; OopMap{rsi=Oop rdi=Oop off=443}
                                                ;*iaload
                                                ; - java.lang.CharacterDataLatin1::getProperties@7 (line 72)
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@4 (line 134)
                                                ;   {runtime_call}
  0x000000010651d83b: nop
  0x000000010651d83c: nop
  0x000000010651d83d: mov    0x2a8(%r15),%rax
  0x000000010651d844: movabs $0x0,%r10
  0x000000010651d84e: mov    %r10,0x2a8(%r15)
  0x000000010651d855: movabs $0x0,%r10
  0x000000010651d85f: mov    %r10,0x2b0(%r15)
  0x000000010651d866: add    $0x40,%rsp
  0x000000010651d86a: pop    %rbp
  0x000000010651d86b: jmpq   0x00000001064776a0  ;   {runtime_call}
  0x000000010651d870: hlt
  0x000000010651d871: hlt
  0x000000010651d872: hlt
  0x000000010651d873: hlt
  0x000000010651d874: hlt
  0x000000010651d875: hlt
  0x000000010651d876: hlt
  0x000000010651d877: hlt
  0x000000010651d878: hlt
  0x000000010651d879: hlt
  0x000000010651d87a: hlt
  0x000000010651d87b: hlt
  0x000000010651d87c: hlt
  0x000000010651d87d: hlt
  0x000000010651d87e: hlt
  0x000000010651d87f: hlt
[Exception Handler]
[Stub Code]
  0x000000010651d880: callq  0x00000001065049a0  ;   {no_reloc}
  0x000000010651d885: mov    %rsp,-0x28(%rsp)
  0x000000010651d88a: sub    $0x80,%rsp
  0x000000010651d891: mov    %rax,0x78(%rsp)
  0x000000010651d896: mov    %rcx,0x70(%rsp)
  0x000000010651d89b: mov    %rdx,0x68(%rsp)
  0x000000010651d8a0: mov    %rbx,0x60(%rsp)
  0x000000010651d8a5: mov    %rbp,0x50(%rsp)
  0x000000010651d8aa: mov    %rsi,0x48(%rsp)
  0x000000010651d8af: mov    %rdi,0x40(%rsp)
  0x000000010651d8b4: mov    %r8,0x38(%rsp)
  0x000000010651d8b9: mov    %r9,0x30(%rsp)
  0x000000010651d8be: mov    %r10,0x28(%rsp)
  0x000000010651d8c3: mov    %r11,0x20(%rsp)
  0x000000010651d8c8: mov    %r12,0x18(%rsp)
  0x000000010651d8cd: mov    %r13,0x10(%rsp)
  0x000000010651d8d2: mov    %r14,0x8(%rsp)
  0x000000010651d8d7: mov    %r15,(%rsp)
  0x000000010651d8db: movabs $0x105194e90,%rdi  ;   {external_word}
  0x000000010651d8e5: movabs $0x10651d885,%rsi  ;   {internal_word}
  0x000000010651d8ef: mov    %rsp,%rdx
  0x000000010651d8f2: and    $0xfffffffffffffff0,%rsp
  0x000000010651d8f6: callq  0x0000000104fc0196  ;   {runtime_call}
  0x000000010651d8fb: hlt
[Deopt Handler Code]
  0x000000010651d8fc: movabs $0x10651d8fc,%r10  ;   {section_word}
  0x000000010651d906: push   %r10
  0x000000010651d908: jmpq   0x00000001064503c0  ;   {runtime_call}
  0x000000010651d90d: hlt
  0x000000010651d90e: hlt
  0x000000010651d90f: hlt
Decoding compiled method 0x000000010651da90:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000011a32b6e0} 'getProtocol' '()Ljava/lang/String;' in 'java/net/URL'
  #           [sp+0x40]  (sp of caller)
  0x000000010651dbe0: mov    0x8(%rsi),%r10d
  0x000000010651dbe4: shl    $0x3,%r10
  0x000000010651dbe8: cmp    %rax,%r10
  0x000000010651dbeb: jne    0x000000010644ee20  ;   {runtime_call}
  0x000000010651dbf1: data32 data32 nopw 0x0(%rax,%rax,1)
  0x000000010651dbfc: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x000000010651dc00: mov    %eax,-0x14000(%rsp)
  0x000000010651dc07: push   %rbp
  0x000000010651dc08: sub    $0x30,%rsp         ;*aload_0
                                                ; - java.net.URL::getProtocol@0 (line 799)

  0x000000010651dc0c: mov    0x14(%rsi),%eax
  0x000000010651dc0f: shl    $0x3,%rax          ;*getfield protocol
                                                ; - java.net.URL::getProtocol@1 (line 799)

  0x000000010651dc13: add    $0x30,%rsp
  0x000000010651dc17: pop    %rbp
  0x000000010651dc18: test   %eax,-0x97bb1e(%rip)        # 0x0000000105ba2100
                                                ;   {poll_return}
  0x000000010651dc1e: retq
  0x000000010651dc1f: nop
  0x000000010651dc20: nop
  0x000000010651dc21: mov    0x2a8(%r15),%rax
  0x000000010651dc28: movabs $0x0,%r10
  0x000000010651dc32: mov    %r10,0x2a8(%r15)
  0x000000010651dc39: movabs $0x0,%r10
  0x000000010651dc43: mov    %r10,0x2b0(%r15)
  0x000000010651dc4a: add    $0x30,%rsp
  0x000000010651dc4e: pop    %rbp
  0x000000010651dc4f: jmpq   0x00000001064776a0  ;   {runtime_call}
  0x000000010651dc54: hlt
  0x000000010651dc55: hlt
  0x000000010651dc56: hlt
  0x000000010651dc57: hlt
  0x000000010651dc58: hlt
  0x000000010651dc59: hlt
  0x000000010651dc5a: hlt
  0x000000010651dc5b: hlt
  0x000000010651dc5c: hlt
  0x000000010651dc5d: hlt
  0x000000010651dc5e: hlt
  0x000000010651dc5f: hlt
[Exception Handler]
[Stub Code]
  0x000000010651dc60: callq  0x00000001065049a0  ;   {no_reloc}
  0x000000010651dc65: mov    %rsp,-0x28(%rsp)
  0x000000010651dc6a: sub    $0x80,%rsp
  0x000000010651dc71: mov    %rax,0x78(%rsp)
  0x000000010651dc76: mov    %rcx,0x70(%rsp)
  0x000000010651dc7b: mov    %rdx,0x68(%rsp)
  0x000000010651dc80: mov    %rbx,0x60(%rsp)
  0x000000010651dc85: mov    %rbp,0x50(%rsp)
  0x000000010651dc8a: mov    %rsi,0x48(%rsp)
  0x000000010651dc8f: mov    %rdi,0x40(%rsp)
  0x000000010651dc94: mov    %r8,0x38(%rsp)
  0x000000010651dc99: mov    %r9,0x30(%rsp)
  0x000000010651dc9e: mov    %r10,0x28(%rsp)
  0x000000010651dca3: mov    %r11,0x20(%rsp)
  0x000000010651dca8: mov    %r12,0x18(%rsp)
  0x000000010651dcad: mov    %r13,0x10(%rsp)
  0x000000010651dcb2: mov    %r14,0x8(%rsp)
  0x000000010651dcb7: mov    %r15,(%rsp)
  0x000000010651dcbb: movabs $0x105194e90,%rdi  ;   {external_word}
  0x000000010651dcc5: movabs $0x10651dc65,%rsi  ;   {internal_word}
  0x000000010651dccf: mov    %rsp,%rdx
  0x000000010651dcd2: and    $0xfffffffffffffff0,%rsp
  0x000000010651dcd6: callq  0x0000000104fc0196  ;   {runtime_call}
  0x000000010651dcdb: hlt
[Deopt Handler Code]
  0x000000010651dcdc: movabs $0x10651dcdc,%r10  ;   {section_word}
  0x000000010651dce6: push   %r10
  0x000000010651dce8: jmpq   0x00000001064503c0  ;   {runtime_call}
  0x000000010651dced: hlt
  0x000000010651dcee: hlt
  0x000000010651dcef: hlt
Decoding compiled method 0x000000010651dd90:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000011a32b518} 'getAuthority' '()Ljava/lang/String;' in 'java/net/URL'
  #           [sp+0x40]  (sp of caller)
  0x000000010651dee0: mov    0x8(%rsi),%r10d
  0x000000010651dee4: shl    $0x3,%r10
  0x000000010651dee8: cmp    %rax,%r10
  0x000000010651deeb: jne    0x000000010644ee20  ;   {runtime_call}
  0x000000010651def1: data32 data32 nopw 0x0(%rax,%rax,1)
  0x000000010651defc: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x000000010651df00: mov    %eax,-0x14000(%rsp)
  0x000000010651df07: push   %rbp
  0x000000010651df08: sub    $0x30,%rsp         ;*aload_0
                                                ; - java.net.URL::getAuthority@0 (line 768)

  0x000000010651df0c: mov    0x24(%rsi),%eax
  0x000000010651df0f: shl    $0x3,%rax          ;*getfield authority
                                                ; - java.net.URL::getAuthority@1 (line 768)

  0x000000010651df13: add    $0x30,%rsp
  0x000000010651df17: pop    %rbp
  0x000000010651df18: test   %eax,-0x97be1e(%rip)        # 0x0000000105ba2100
                                                ;   {poll_return}
  0x000000010651df1e: retq
  0x000000010651df1f: nop
  0x000000010651df20: nop
  0x000000010651df21: mov    0x2a8(%r15),%rax
  0x000000010651df28: movabs $0x0,%r10
  0x000000010651df32: mov    %r10,0x2a8(%r15)
  0x000000010651df39: movabs $0x0,%r10
  0x000000010651df43: mov    %r10,0x2b0(%r15)
  0x000000010651df4a: add    $0x30,%rsp
  0x000000010651df4e: pop    %rbp
  0x000000010651df4f: jmpq   0x00000001064776a0  ;   {runtime_call}
  0x000000010651df54: hlt
  0x000000010651df55: hlt
  0x000000010651df56: hlt
  0x000000010651df57: hlt
  0x000000010651df58: hlt
  0x000000010651df59: hlt
  0x000000010651df5a: hlt
  0x000000010651df5b: hlt
  0x000000010651df5c: hlt
  0x000000010651df5d: hlt
  0x000000010651df5e: hlt
  0x000000010651df5f: hlt
[Exception Handler]
[Stub Code]
  0x000000010651df60: callq  0x00000001065049a0  ;   {no_reloc}
  0x000000010651df65: mov    %rsp,-0x28(%rsp)
  0x000000010651df6a: sub    $0x80,%rsp
  0x000000010651df71: mov    %rax,0x78(%rsp)
  0x000000010651df76: mov    %rcx,0x70(%rsp)
  0x000000010651df7b: mov    %rdx,0x68(%rsp)
  0x000000010651df80: mov    %rbx,0x60(%rsp)
  0x000000010651df85: mov    %rbp,0x50(%rsp)
  0x000000010651df8a: mov    %rsi,0x48(%rsp)
  0x000000010651df8f: mov    %rdi,0x40(%rsp)
  0x000000010651df94: mov    %r8,0x38(%rsp)
  0x000000010651df99: mov    %r9,0x30(%rsp)
  0x000000010651df9e: mov    %r10,0x28(%rsp)
  0x000000010651dfa3: mov    %r11,0x20(%rsp)
  0x000000010651dfa8: mov    %r12,0x18(%rsp)
  0x000000010651dfad: mov    %r13,0x10(%rsp)
  0x000000010651dfb2: mov    %r14,0x8(%rsp)
  0x000000010651dfb7: mov    %r15,(%rsp)
  0x000000010651dfbb: movabs $0x105194e90,%rdi  ;   {external_word}
  0x000000010651dfc5: movabs $0x10651df65,%rsi  ;   {internal_word}
  0x000000010651dfcf: mov    %rsp,%rdx
  0x000000010651dfd2: and    $0xfffffffffffffff0,%rsp
  0x000000010651dfd6: callq  0x0000000104fc0196  ;   {runtime_call}
  0x000000010651dfdb: hlt
[Deopt Handler Code]
  0x000000010651dfdc: movabs $0x10651dfdc,%r10  ;   {section_word}
  0x000000010651dfe6: push   %r10
  0x000000010651dfe8: jmpq   0x00000001064503c0  ;   {runtime_call}
  0x000000010651dfed: hlt
  0x000000010651dfee: hlt
  0x000000010651dfef: hlt
Decoding compiled method 0x000000010651e090:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000011a32b3e8} 'getPath' '()Ljava/lang/String;' in 'java/net/URL'
  #           [sp+0x40]  (sp of caller)
  0x000000010651e1e0: mov    0x8(%rsi),%r10d
  0x000000010651e1e4: shl    $0x3,%r10
  0x000000010651e1e8: cmp    %rax,%r10
  0x000000010651e1eb: jne    0x000000010644ee20  ;   {runtime_call}
  0x000000010651e1f1: data32 data32 nopw 0x0(%rax,%rax,1)
  0x000000010651e1fc: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x000000010651e200: mov    %eax,-0x14000(%rsp)
  0x000000010651e207: push   %rbp
  0x000000010651e208: sub    $0x30,%rsp         ;*aload_0
                                                ; - java.net.URL::getPath@0 (line 747)

  0x000000010651e20c: mov    0x28(%rsi),%eax
  0x000000010651e20f: shl    $0x3,%rax          ;*getfield path
                                                ; - java.net.URL::getPath@1 (line 747)

  0x000000010651e213: add    $0x30,%rsp
  0x000000010651e217: pop    %rbp
  0x000000010651e218: test   %eax,-0x97c11e(%rip)        # 0x0000000105ba2100
                                                ;   {poll_return}
  0x000000010651e21e: retq
  0x000000010651e21f: nop
  0x000000010651e220: nop
  0x000000010651e221: mov    0x2a8(%r15),%rax
  0x000000010651e228: movabs $0x0,%r10
  0x000000010651e232: mov    %r10,0x2a8(%r15)
  0x000000010651e239: movabs $0x0,%r10
  0x000000010651e243: mov    %r10,0x2b0(%r15)
  0x000000010651e24a: add    $0x30,%rsp
  0x000000010651e24e: pop    %rbp
  0x000000010651e24f: jmpq   0x00000001064776a0  ;   {runtime_call}
  0x000000010651e254: hlt
  0x000000010651e255: hlt
  0x000000010651e256: hlt
  0x000000010651e257: hlt
  0x000000010651e258: hlt
  0x000000010651e259: hlt
  0x000000010651e25a: hlt
  0x000000010651e25b: hlt
  0x000000010651e25c: hlt
  0x000000010651e25d: hlt
  0x000000010651e25e: hlt
  0x000000010651e25f: hlt
[Exception Handler]
[Stub Code]
  0x000000010651e260: callq  0x00000001065049a0  ;   {no_reloc}
  0x000000010651e265: mov    %rsp,-0x28(%rsp)
  0x000000010651e26a: sub    $0x80,%rsp
  0x000000010651e271: mov    %rax,0x78(%rsp)
  0x000000010651e276: mov    %rcx,0x70(%rsp)
  0x000000010651e27b: mov    %rdx,0x68(%rsp)
  0x000000010651e280: mov    %rbx,0x60(%rsp)
  0x000000010651e285: mov    %rbp,0x50(%rsp)
  0x000000010651e28a: mov    %rsi,0x48(%rsp)
  0x000000010651e28f: mov    %rdi,0x40(%rsp)
  0x000000010651e294: mov    %r8,0x38(%rsp)
  0x000000010651e299: mov    %r9,0x30(%rsp)
  0x000000010651e29e: mov    %r10,0x28(%rsp)
  0x000000010651e2a3: mov    %r11,0x20(%rsp)
  0x000000010651e2a8: mov    %r12,0x18(%rsp)
  0x000000010651e2ad: mov    %r13,0x10(%rsp)
  0x000000010651e2b2: mov    %r14,0x8(%rsp)
  0x000000010651e2b7: mov    %r15,(%rsp)
  0x000000010651e2bb: movabs $0x105194e90,%rdi  ;   {external_word}
  0x000000010651e2c5: movabs $0x10651e265,%rsi  ;   {internal_word}
  0x000000010651e2cf: mov    %rsp,%rdx
  0x000000010651e2d2: and    $0xfffffffffffffff0,%rsp
  0x000000010651e2d6: callq  0x0000000104fc0196  ;   {runtime_call}
  0x000000010651e2db: hlt
[Deopt Handler Code]
  0x000000010651e2dc: movabs $0x10651e2dc,%r10  ;   {section_word}
  0x000000010651e2e6: push   %r10
  0x000000010651e2e8: jmpq   0x00000001064503c0  ;   {runtime_call}
  0x000000010651e2ed: hlt
  0x000000010651e2ee: hlt
  0x000000010651e2ef: hlt
Decoding compiled method 0x000000010651e390:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000011a363398} 'size' '()I' in 'java/util/Vector'
  #           [sp+0x50]  (sp of caller)
  0x000000010651e4e0: mov    0x8(%rsi),%r10d
  0x000000010651e4e4: shl    $0x3,%r10
  0x000000010651e4e8: cmp    %rax,%r10
  0x000000010651e4eb: jne    0x000000010644ee20  ;   {runtime_call}
  0x000000010651e4f1: data32 data32 nopw 0x0(%rax,%rax,1)
  0x000000010651e4fc: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x000000010651e500: mov    %eax,-0x14000(%rsp)
  0x000000010651e507: push   %rbp
  0x000000010651e508: sub    $0x40,%rsp
  0x000000010651e50c: lea    0x20(%rsp),%rdi
  0x000000010651e511: mov    %rsi,0x8(%rdi)
  0x000000010651e515: mov    (%rsi),%rax
  0x000000010651e518: mov    %rax,%rbx
  0x000000010651e51b: and    $0x7,%rbx
  0x000000010651e51f: cmp    $0x5,%rbx
  0x000000010651e523: jne    0x000000010651e5aa
  0x000000010651e529: mov    0x8(%rsi),%ebx
  0x000000010651e52c: shl    $0x3,%rbx
  0x000000010651e530: mov    0xa8(%rbx),%rbx
  0x000000010651e537: or     %r15,%rbx
  0x000000010651e53a: xor    %rax,%rbx
  0x000000010651e53d: and    $0xffffffffffffff87,%rbx
  0x000000010651e541: je     0x000000010651e5d2
  0x000000010651e547: test   $0x7,%rbx
  0x000000010651e54e: jne    0x000000010651e597
  0x000000010651e550: test   $0x300,%rbx
  0x000000010651e557: jne    0x000000010651e576
  0x000000010651e559: and    $0x37f,%rax
  0x000000010651e560: mov    %rax,%rbx
  0x000000010651e563: or     %r15,%rbx
  0x000000010651e566: lock cmpxchg %rbx,(%rsi)
  0x000000010651e56b: jne    0x000000010651e615
  0x000000010651e571: jmpq   0x000000010651e5d2
  0x000000010651e576: mov    0x8(%rsi),%ebx
  0x000000010651e579: shl    $0x3,%rbx
  0x000000010651e57d: mov    0xa8(%rbx),%rbx
  0x000000010651e584: or     %r15,%rbx
  0x000000010651e587: lock cmpxchg %rbx,(%rsi)
  0x000000010651e58c: jne    0x000000010651e615
  0x000000010651e592: jmpq   0x000000010651e5d2
  0x000000010651e597: mov    0x8(%rsi),%ebx
  0x000000010651e59a: shl    $0x3,%rbx
  0x000000010651e59e: mov    0xa8(%rbx),%rbx
  0x000000010651e5a5: lock cmpxchg %rbx,(%rsi)
  0x000000010651e5aa: mov    (%rsi),%rax
  0x000000010651e5ad: or     $0x1,%rax
  0x000000010651e5b1: mov    %rax,(%rdi)
  0x000000010651e5b4: lock cmpxchg %rdi,(%rsi)
  0x000000010651e5b9: je     0x000000010651e5d2
  0x000000010651e5bf: sub    %rsp,%rax
  0x000000010651e5c2: and    $0xfffffffffffff007,%rax
  0x000000010651e5c9: mov    %rax,(%rdi)
  0x000000010651e5cc: jne    0x000000010651e615  ;*aload_0
                                                ; - java.util.Vector::size@0 (line 315)

  0x000000010651e5d2: mov    0x10(%rsi),%esi    ;*getfield elementCount
                                                ; - java.util.Vector::size@1 (line 315)

  0x000000010651e5d5: lea    0x20(%rsp),%rax
  0x000000010651e5da: mov    0x8(%rax),%rbx
  0x000000010651e5de: mov    (%rbx),%rdi
  0x000000010651e5e1: and    $0x7,%rdi
  0x000000010651e5e5: cmp    $0x5,%rdi
  0x000000010651e5e9: je     0x000000010651e606
  0x000000010651e5ef: mov    (%rax),%rdi
  0x000000010651e5f2: test   %rdi,%rdi
  0x000000010651e5f5: je     0x000000010651e606
  0x000000010651e5fb: lock cmpxchg %rdi,(%rbx)
  0x000000010651e600: jne    0x000000010651e625  ;*ireturn
                                                ; - java.util.Vector::size@4 (line 315)

  0x000000010651e606: mov    %rsi,%rax
  0x000000010651e609: add    $0x40,%rsp
  0x000000010651e60d: pop    %rbp
  0x000000010651e60e: test   %eax,-0x97c514(%rip)        # 0x0000000105ba2100
                                                ;   {poll_return}
  0x000000010651e614: retq
  0x000000010651e615: mov    %rsi,0x8(%rsp)
  0x000000010651e61a: mov    %rdi,(%rsp)
  0x000000010651e61e: callq  0x00000001065054a0  ; OopMap{rsi=Oop [40]=Oop off=323}
                                                ;*synchronization entry
                                                ; - java.util.Vector::size@-1 (line 315)
                                                ;   {runtime_call}
  0x000000010651e623: jmp    0x000000010651e5d2
  0x000000010651e625: lea    0x20(%rsp),%rax
  0x000000010651e62a: mov    %rax,(%rsp)
  0x000000010651e62e: callq  0x0000000106505860  ;   {runtime_call}
  0x000000010651e633: jmp    0x000000010651e606
  0x000000010651e635: nop
  0x000000010651e636: nop
  0x000000010651e637: mov    0x2a8(%r15),%rax
  0x000000010651e63e: movabs $0x0,%r10
  0x000000010651e648: mov    %r10,0x2a8(%r15)
  0x000000010651e64f: movabs $0x0,%r10
  0x000000010651e659: mov    %r10,0x2b0(%r15)
  0x000000010651e660: mov    %rax,%rbx
  0x000000010651e663: lea    0x20(%rsp),%rax
  0x000000010651e668: mov    0x8(%rax),%rsi
  0x000000010651e66c: mov    (%rsi),%rdi
  0x000000010651e66f: and    $0x7,%rdi
  0x000000010651e673: cmp    $0x5,%rdi
  0x000000010651e677: je     0x000000010651e694
  0x000000010651e67d: mov    (%rax),%rdi
  0x000000010651e680: test   %rdi,%rdi
  0x000000010651e683: je     0x000000010651e694
  0x000000010651e689: lock cmpxchg %rdi,(%rsi)
  0x000000010651e68e: jne    0x000000010651e6a1
  0x000000010651e694: mov    %rbx,%rax
  0x000000010651e697: add    $0x40,%rsp
  0x000000010651e69b: pop    %rbp
  0x000000010651e69c: jmpq   0x00000001064776a0  ;   {runtime_call}
  0x000000010651e6a1: lea    0x20(%rsp),%rax
  0x000000010651e6a6: mov    %rax,(%rsp)
  0x000000010651e6aa: callq  0x0000000106505860  ;   {runtime_call}
  0x000000010651e6af: jmp    0x000000010651e694
  0x000000010651e6b1: hlt
  0x000000010651e6b2: hlt
  0x000000010651e6b3: hlt
  0x000000010651e6b4: hlt
  0x000000010651e6b5: hlt
  0x000000010651e6b6: hlt
  0x000000010651e6b7: hlt
  0x000000010651e6b8: hlt
  0x000000010651e6b9: hlt
  0x000000010651e6ba: hlt
  0x000000010651e6bb: hlt
  0x000000010651e6bc: hlt
  0x000000010651e6bd: hlt
  0x000000010651e6be: hlt
  0x000000010651e6bf: hlt
[Exception Handler]
[Stub Code]
  0x000000010651e6c0: callq  0x00000001065049a0  ;   {no_reloc}
  0x000000010651e6c5: mov    %rsp,-0x28(%rsp)
  0x000000010651e6ca: sub    $0x80,%rsp
  0x000000010651e6d1: mov    %rax,0x78(%rsp)
  0x000000010651e6d6: mov    %rcx,0x70(%rsp)
  0x000000010651e6db: mov    %rdx,0x68(%rsp)
  0x000000010651e6e0: mov    %rbx,0x60(%rsp)
  0x000000010651e6e5: mov    %rbp,0x50(%rsp)
  0x000000010651e6ea: mov    %rsi,0x48(%rsp)
  0x000000010651e6ef: mov    %rdi,0x40(%rsp)
  0x000000010651e6f4: mov    %r8,0x38(%rsp)
  0x000000010651e6f9: mov    %r9,0x30(%rsp)
  0x000000010651e6fe: mov    %r10,0x28(%rsp)
  0x000000010651e703: mov    %r11,0x20(%rsp)
  0x000000010651e708: mov    %r12,0x18(%rsp)
  0x000000010651e70d: mov    %r13,0x10(%rsp)
  0x000000010651e712: mov    %r14,0x8(%rsp)
  0x000000010651e717: mov    %r15,(%rsp)
  0x000000010651e71b: movabs $0x105194e90,%rdi  ;   {external_word}
  0x000000010651e725: movabs $0x10651e6c5,%rsi  ;   {internal_word}
  0x000000010651e72f: mov    %rsp,%rdx
  0x000000010651e732: and    $0xfffffffffffffff0,%rsp
  0x000000010651e736: callq  0x0000000104fc0196  ;   {runtime_call}
  0x000000010651e73b: hlt
[Deopt Handler Code]
  0x000000010651e73c: movabs $0x10651e73c,%r10  ;   {section_word}
  0x000000010651e746: push   %r10
  0x000000010651e748: jmpq   0x00000001064503c0  ;   {runtime_call}
  0x000000010651e74d: hlt
  0x000000010651e74e: hlt
  0x000000010651e74f: hlt
Decoding compiled method 0x000000010651e810:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000011a408520} 'normalize' '(Ljava/lang/String;)Ljava/lang/String;' in 'java/io/UnixFileSystem'
  # this:     rsi:rsi   = 'java/io/UnixFileSystem'
  # parm0:    rdx:rdx   = 'java/lang/String'
  #           [sp+0x90]  (sp of caller)
  0x000000010651e9e0: mov    0x8(%rsi),%r10d
  0x000000010651e9e4: shl    $0x3,%r10
  0x000000010651e9e8: cmp    %rax,%r10
  0x000000010651e9eb: jne    0x000000010644ee20  ;   {runtime_call}
  0x000000010651e9f1: data32 data32 nopw 0x0(%rax,%rax,1)
  0x000000010651e9fc: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x000000010651ea00: mov    %eax,-0x14000(%rsp)
  0x000000010651ea07: push   %rbp
  0x000000010651ea08: sub    $0x80,%rsp
  0x000000010651ea0f: mov    %rsi,0x58(%rsp)
  0x000000010651ea14: mov    %rdx,0x50(%rsp)
  0x000000010651ea19: movabs $0x11a4d81a8,%rcx  ;   {metadata(method data for {method} {0x000000011a408520} 'normalize' '(Ljava/lang/String;)Ljava/lang/String;' in 'java/io/UnixFileSystem')}
  0x000000010651ea23: mov    0xdc(%rcx),%r8d
  0x000000010651ea2a: add    $0x8,%r8d
  0x000000010651ea2e: mov    %r8d,0xdc(%rcx)
  0x000000010651ea35: movabs $0x11a408520,%rcx  ;   {metadata({method} {0x000000011a408520} 'normalize' '(Ljava/lang/String;)Ljava/lang/String;' in 'java/io/UnixFileSystem')}
  0x000000010651ea3f: and    $0x1ff8,%r8d
  0x000000010651ea46: cmp    $0x0,%r8d
  0x000000010651ea4a: je     0x000000010651eed1  ;*aload_1
                                                ; - java.io.UnixFileSystem::normalize@0 (line 84)

  0x000000010651ea50: cmp    (%rdx),%rax        ;*invokevirtual length
                                                ; - java.io.UnixFileSystem::normalize@1 (line 84)
                                                ; implicit exception: dispatches to 0x000000010651eee8
  0x000000010651ea53: mov    %rdx,%rcx
  0x000000010651ea56: movabs $0x11a4d81a8,%r8   ;   {metadata(method data for {method} {0x000000011a408520} 'normalize' '(Ljava/lang/String;)Ljava/lang/String;' in 'java/io/UnixFileSystem')}
  0x000000010651ea60: mov    0x8(%rcx),%ecx
  0x000000010651ea63: shl    $0x3,%rcx
  0x000000010651ea67: cmp    0x110(%r8),%rcx
  0x000000010651ea6e: jne    0x000000010651ea7d
  0x000000010651ea70: addq   $0x1,0x118(%r8)
  0x000000010651ea78: jmpq   0x000000010651eae3
  0x000000010651ea7d: cmp    0x120(%r8),%rcx
  0x000000010651ea84: jne    0x000000010651ea93
  0x000000010651ea86: addq   $0x1,0x128(%r8)
  0x000000010651ea8e: jmpq   0x000000010651eae3
  0x000000010651ea93: cmpq   $0x0,0x110(%r8)
  0x000000010651ea9e: jne    0x000000010651eab7
  0x000000010651eaa0: mov    %rcx,0x110(%r8)
  0x000000010651eaa7: movq   $0x1,0x118(%r8)
  0x000000010651eab2: jmpq   0x000000010651eae3
  0x000000010651eab7: cmpq   $0x0,0x120(%r8)
  0x000000010651eac2: jne    0x000000010651eadb
  0x000000010651eac4: mov    %rcx,0x120(%r8)
  0x000000010651eacb: movq   $0x1,0x128(%r8)
  0x000000010651ead6: jmpq   0x000000010651eae3
  0x000000010651eadb: addq   $0x1,0x108(%r8)
  0x000000010651eae3: movabs $0x11a4760c0,%rcx  ;   {metadata(method data for {method} {0x000000011a2a0cf8} 'length' '()I' in 'java/lang/String')}
  0x000000010651eaed: mov    0xdc(%rcx),%r8d
  0x000000010651eaf4: add    $0x8,%r8d
  0x000000010651eaf8: mov    %r8d,0xdc(%rcx)
  0x000000010651eaff: movabs $0x11a2a0cf8,%rcx  ;   {metadata({method} {0x000000011a2a0cf8} 'length' '()I' in 'java/lang/String')}
  0x000000010651eb09: and    $0x7ffff8,%r8d
  0x000000010651eb10: cmp    $0x0,%r8d
  0x000000010651eb14: je     0x000000010651eeed
  0x000000010651eb1a: mov    0xc(%rdx),%ecx
  0x000000010651eb1d: shl    $0x3,%rcx          ;*getfield value
                                                ; - java.lang.String::length@1 (line 623)
                                                ; - java.io.UnixFileSystem::normalize@1 (line 84)

  0x000000010651eb21: mov    0xc(%rcx),%edi     ;*arraylength
                                                ; - java.lang.String::length@4 (line 623)
                                                ; - java.io.UnixFileSystem::normalize@1 (line 84)
                                                ; implicit exception: dispatches to 0x000000010651ef04
  0x000000010651eb24: mov    %edi,0x64(%rsp)
  0x000000010651eb28: mov    $0x0,%ebx
  0x000000010651eb2d: mov    $0x0,%eax          ;*iload
                                                ; - java.io.UnixFileSystem::normalize@10 (line 86)

  0x000000010651eb32: nopw   0x0(%rax,%rax,1)
  0x000000010651eb38: cmp    %edi,%ebx
  0x000000010651eb3a: movabs $0x11a4d81a8,%rcx  ;   {metadata(method data for {method} {0x000000011a408520} 'normalize' '(Ljava/lang/String;)Ljava/lang/String;' in 'java/io/UnixFileSystem')}
  0x000000010651eb44: movabs $0x138,%r8
  0x000000010651eb4e: jge    0x000000010651eb5e
  0x000000010651eb54: movabs $0x148,%r8
  0x000000010651eb5e: mov    (%rcx,%r8,1),%r9
  0x000000010651eb62: lea    0x1(%r9),%r9
  0x000000010651eb66: mov    %r9,(%rcx,%r8,1)
  0x000000010651eb6a: jge    0x000000010651ed93  ;*if_icmpge
                                                ; - java.io.UnixFileSystem::normalize@13 (line 86)

  0x000000010651eb70: mov    %rdx,%rcx
  0x000000010651eb73: movabs $0x11a4d81a8,%r8   ;   {metadata(method data for {method} {0x000000011a408520} 'normalize' '(Ljava/lang/String;)Ljava/lang/String;' in 'java/io/UnixFileSystem')}
  0x000000010651eb7d: mov    0x8(%rcx),%ecx
  0x000000010651eb80: shl    $0x3,%rcx
  0x000000010651eb84: cmp    0x160(%r8),%rcx
  0x000000010651eb8b: jne    0x000000010651eb9a
  0x000000010651eb8d: addq   $0x1,0x168(%r8)
  0x000000010651eb95: jmpq   0x000000010651ec00
  0x000000010651eb9a: cmp    0x170(%r8),%rcx
  0x000000010651eba1: jne    0x000000010651ebb0
  0x000000010651eba3: addq   $0x1,0x178(%r8)
  0x000000010651ebab: jmpq   0x000000010651ec00
  0x000000010651ebb0: cmpq   $0x0,0x160(%r8)
  0x000000010651ebbb: jne    0x000000010651ebd4
  0x000000010651ebbd: mov    %rcx,0x160(%r8)
  0x000000010651ebc4: movq   $0x1,0x168(%r8)
  0x000000010651ebcf: jmpq   0x000000010651ec00
  0x000000010651ebd4: cmpq   $0x0,0x170(%r8)
  0x000000010651ebdf: jne    0x000000010651ebf8
  0x000000010651ebe1: mov    %rcx,0x170(%r8)
  0x000000010651ebe8: movq   $0x1,0x178(%r8)
  0x000000010651ebf3: jmpq   0x000000010651ec00
  0x000000010651ebf8: addq   $0x1,0x158(%r8)
  0x000000010651ec00: movabs $0x11a426b08,%rcx  ;   {metadata(method data for {method} {0x000000011a2a0e48} 'charAt' '(I)C' in 'java/lang/String')}
  0x000000010651ec0a: mov    0xdc(%rcx),%r8d
  0x000000010651ec11: add    $0x8,%r8d
  0x000000010651ec15: mov    %r8d,0xdc(%rcx)
  0x000000010651ec1c: movabs $0x11a2a0e48,%rcx  ;   {metadata({method} {0x000000011a2a0e48} 'charAt' '(I)C' in 'java/lang/String')}
  0x000000010651ec26: and    $0x7ffff8,%r8d
  0x000000010651ec2d: cmp    $0x0,%r8d
  0x000000010651ec31: je     0x000000010651ef09
  0x000000010651ec37: cmp    $0x0,%ebx
  0x000000010651ec3a: movabs $0x11a426b08,%rcx  ;   {metadata(method data for {method} {0x000000011a2a0e48} 'charAt' '(I)C' in 'java/lang/String')}
  0x000000010651ec44: movabs $0x108,%r8
  0x000000010651ec4e: jl     0x000000010651ec5e
  0x000000010651ec54: movabs $0x118,%r8
  0x000000010651ec5e: mov    (%rcx,%r8,1),%r9
  0x000000010651ec62: lea    0x1(%r9),%r9
  0x000000010651ec66: mov    %r9,(%rcx,%r8,1)
  0x000000010651ec6a: jl     0x000000010651ee7b  ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ; - java.io.UnixFileSystem::normalize@19 (line 87)

  0x000000010651ec70: mov    0xc(%rdx),%ecx
  0x000000010651ec73: shl    $0x3,%rcx          ;*getfield value
                                                ; - java.lang.String::charAt@6 (line 657)
                                                ; - java.io.UnixFileSystem::normalize@19 (line 87)

  0x000000010651ec77: mov    0xc(%rcx),%r8d     ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ; - java.io.UnixFileSystem::normalize@19 (line 87)
                                                ; implicit exception: dispatches to 0x000000010651ef20
  0x000000010651ec7b: cmp    %r8d,%ebx
  0x000000010651ec7e: movabs $0x11a426b08,%r8   ;   {metadata(method data for {method} {0x000000011a2a0e48} 'charAt' '(I)C' in 'java/lang/String')}
  0x000000010651ec88: movabs $0x128,%r9
  0x000000010651ec92: jl     0x000000010651eca2
  0x000000010651ec98: movabs $0x138,%r9
  0x000000010651eca2: mov    (%r8,%r9,1),%r11
  0x000000010651eca6: lea    0x1(%r11),%r11
  0x000000010651ecaa: mov    %r11,(%r8,%r9,1)
  0x000000010651ecae: jge    0x000000010651ee7b  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - java.io.UnixFileSystem::normalize@19 (line 87)

  0x000000010651ecb4: movslq %ebx,%r8
  0x000000010651ecb7: cmp    0xc(%rcx),%ebx
  0x000000010651ecba: jae    0x000000010651ef25
  0x000000010651ecc0: movzwl 0x10(%rcx,%r8,2),%ecx  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.UnixFileSystem::normalize@19 (line 87)

  0x000000010651ecc6: and    $0xffff,%ecx
  0x000000010651eccc: cmp    $0x2f,%eax
  0x000000010651eccf: movabs $0x11a4d81a8,%r8   ;   {metadata(method data for {method} {0x000000011a408520} 'normalize' '(Ljava/lang/String;)Ljava/lang/String;' in 'java/io/UnixFileSystem')}
  0x000000010651ecd9: movabs $0x188,%r9
  0x000000010651ece3: jne    0x000000010651ecf3
  0x000000010651ece9: movabs $0x198,%r9
  0x000000010651ecf3: mov    (%r8,%r9,1),%r11
  0x000000010651ecf7: lea    0x1(%r11),%r11
  0x000000010651ecfb: mov    %r11,(%r8,%r9,1)
  0x000000010651ecff: jne    0x000000010651ed3e  ;*if_icmpne
                                                ; - java.io.UnixFileSystem::normalize@27 (line 88)

  0x000000010651ed05: cmp    $0x2f,%ecx
  0x000000010651ed08: movabs $0x11a4d81a8,%r8   ;   {metadata(method data for {method} {0x000000011a408520} 'normalize' '(Ljava/lang/String;)Ljava/lang/String;' in 'java/io/UnixFileSystem')}
  0x000000010651ed12: movabs $0x1a8,%r9
  0x000000010651ed1c: jne    0x000000010651ed2c
  0x000000010651ed22: movabs $0x1b8,%r9
  0x000000010651ed2c: mov    (%r8,%r9,1),%r11
  0x000000010651ed30: lea    0x1(%r11),%r11
  0x000000010651ed34: mov    %r11,(%r8,%r9,1)
  0x000000010651ed38: je     0x000000010651ee27  ;*if_icmpne
                                                ; - java.io.UnixFileSystem::normalize@34 (line 88)

  0x000000010651ed3e: inc    %ebx
  0x000000010651ed40: movabs $0x11a4d81a8,%r8   ;   {metadata(method data for {method} {0x000000011a408520} 'normalize' '(Ljava/lang/String;)Ljava/lang/String;' in 'java/io/UnixFileSystem')}
  0x000000010651ed4a: mov    0xe0(%r8),%eax
  0x000000010651ed51: add    $0x8,%eax
  0x000000010651ed54: mov    %eax,0xe0(%r8)
  0x000000010651ed5b: movabs $0x11a408520,%r8   ;   {metadata({method} {0x000000011a408520} 'normalize' '(Ljava/lang/String;)Ljava/lang/String;' in 'java/io/UnixFileSystem')}
  0x000000010651ed65: and    $0xfff8,%eax
  0x000000010651ed6b: cmp    $0x0,%eax
  0x000000010651ed6e: je     0x000000010651ef2e  ; OopMap{rsi=Oop [88]=Oop rdx=Oop [80]=Oop off=916}
                                                ;*goto
                                                ; - java.io.UnixFileSystem::normalize@54 (line 86)

  0x000000010651ed74: test   %eax,-0x97cc7a(%rip)        # 0x0000000105ba2100
                                                ;   {poll}
  0x000000010651ed7a: movabs $0x11a4d81a8,%r8   ;   {metadata(method data for {method} {0x000000011a408520} 'normalize' '(Ljava/lang/String;)Ljava/lang/String;' in 'java/io/UnixFileSystem')}
  0x000000010651ed84: incl   0x1d8(%r8)
  0x000000010651ed8b: mov    %rcx,%rax
  0x000000010651ed8e: jmpq   0x000000010651eb38  ;*goto
                                                ; - java.io.UnixFileSystem::normalize@54 (line 86)

  0x000000010651ed93: cmp    $0x2f,%eax
  0x000000010651ed96: movabs $0x11a4d81a8,%rcx  ;   {metadata(method data for {method} {0x000000011a408520} 'normalize' '(Ljava/lang/String;)Ljava/lang/String;' in 'java/io/UnixFileSystem')}
  0x000000010651eda0: movabs $0x1f0,%r8
  0x000000010651edaa: jne    0x000000010651edba
  0x000000010651edb0: movabs $0x200,%r8
  0x000000010651edba: mov    (%rcx,%r8,1),%r9
  0x000000010651edbe: lea    0x1(%r9),%r9
  0x000000010651edc2: mov    %r9,(%rcx,%r8,1)
  0x000000010651edc6: jne    0x000000010651ee13  ;*if_icmpne
                                                ; - java.io.UnixFileSystem::normalize@60 (line 92)

  0x000000010651edcc: mov    %ebx,0x60(%rsp)
  0x000000010651edd0: mov    %eax,0x68(%rsp)
  0x000000010651edd4: mov    %rsi,%rcx
  0x000000010651edd7: movabs $0x11a4d81a8,%r8   ;   {metadata(method data for {method} {0x000000011a408520} 'normalize' '(Ljava/lang/String;)Ljava/lang/String;' in 'java/io/UnixFileSystem')}
  0x000000010651ede1: addq   $0x1,0x210(%r8)
  0x000000010651ede9: mov    %rdi,%r8
  0x000000010651edec: dec    %r8d
  0x000000010651edef: mov    %rdx,%r9
  0x000000010651edf2: mov    %r9,%rdx
  0x000000010651edf5: mov    %rdi,%rcx
  0x000000010651edf8: mov    %rsi,%r11
  0x000000010651edfb: mov    %r11,%rsi          ;*invokespecial normalize
                                                ; - java.io.UnixFileSystem::normalize@69 (line 92)

  0x000000010651edfe: nop
  0x000000010651edff: callq  0x000000010644f020  ; OopMap{[88]=Oop [80]=Oop off=1060}
                                                ;*invokespecial normalize
                                                ; - java.io.UnixFileSystem::normalize@69 (line 92)
                                                ;   {optimized virtual_call}
  0x000000010651ee04: add    $0x80,%rsp
  0x000000010651ee0b: pop    %rbp
  0x000000010651ee0c: test   %eax,-0x97cd12(%rip)        # 0x0000000105ba2100
                                                ;   {poll_return}
  0x000000010651ee12: retq                      ;*areturn
                                                ; - java.io.UnixFileSystem::normalize@72 (line 92)

  0x000000010651ee13: mov    0x50(%rsp),%rax
  0x000000010651ee18: add    $0x80,%rsp
  0x000000010651ee1f: pop    %rbp
  0x000000010651ee20: test   %eax,-0x97cd26(%rip)        # 0x0000000105ba2100
                                                ;   {poll_return}
  0x000000010651ee26: retq                      ;*areturn
                                                ; - java.io.UnixFileSystem::normalize@74 (line 93)

  0x000000010651ee27: mov    %ecx,0x6c(%rsp)
  0x000000010651ee2b: mov    %ebx,0x60(%rsp)
  0x000000010651ee2f: mov    %eax,0x68(%rsp)
  0x000000010651ee33: mov    0x58(%rsp),%rsi
  0x000000010651ee38: movabs $0x11a4d81a8,%rdx  ;   {metadata(method data for {method} {0x000000011a408520} 'normalize' '(Ljava/lang/String;)Ljava/lang/String;' in 'java/io/UnixFileSystem')}
  0x000000010651ee42: addq   $0x1,0x1c8(%rdx)
  0x000000010651ee4a: mov    0x60(%rsp),%ebx
  0x000000010651ee4e: dec    %ebx
  0x000000010651ee50: mov    0x50(%rsp),%rdx
  0x000000010651ee55: mov    0x64(%rsp),%ecx
  0x000000010651ee59: mov    %rbx,%r8
  0x000000010651ee5c: mov    0x58(%rsp),%rsi    ;*invokespecial normalize
                                                ; - java.io.UnixFileSystem::normalize@44 (line 89)

  0x000000010651ee61: nop
  0x000000010651ee62: nop
  0x000000010651ee63: nop
  0x000000010651ee64: nop
  0x000000010651ee65: nop
  0x000000010651ee66: nop
  0x000000010651ee67: callq  0x000000010644f020  ; OopMap{[88]=Oop [80]=Oop off=1164}
                                                ;*invokespecial normalize
                                                ; - java.io.UnixFileSystem::normalize@44 (line 89)
                                                ;   {optimized virtual_call}
  0x000000010651ee6c: add    $0x80,%rsp
  0x000000010651ee73: pop    %rbp
  0x000000010651ee74: test   %eax,-0x97cd7a(%rip)        # 0x0000000105ba2100
                                                ;   {poll_return}
  0x000000010651ee7a: retq                      ;*areturn
                                                ; - java.io.UnixFileSystem::normalize@47 (line 89)

  0x000000010651ee7b: mov    %eax,0x68(%rsp)
  0x000000010651ee7f: nop
  0x000000010651ee80: jmpq   0x000000010651ef54  ;   {no_reloc}
  0x000000010651ee85: add    %al,(%rax)
  0x000000010651ee87: add    %al,(%rax)
  0x000000010651ee89: add    %ch,%cl
  0x000000010651ee8b: iret
  0x000000010651ee8c: add    %al,(%rax)
  0x000000010651ee8e: add    %cl,-0x75(%rax)    ;*new  ; - java.lang.String::charAt@13 (line 658)
                                                ; - java.io.UnixFileSystem::normalize@19 (line 87)

  0x000000010651ee91: rorb   -0x47(%rcx)        ;   {metadata(method data for {method} {0x000000011a2a0e48} 'charAt' '(I)C' in 'java/lang/String')}
  0x000000010651ee94: or     %ch,0x42(%rbx)
  0x000000010651ee97: sbb    (%rcx),%al
  0x000000010651ee99: add    %al,(%rax)
  0x000000010651ee9b: add    %cl,-0x7d(%rcx)
  0x000000010651ee9e: orl    $0x48010000,0x1(%rax)
  0x000000010651eea5: mov    %ebx,%edx
  0x000000010651eea7: mov    %rax,%rsi          ;*invokespecial <init>
                                                ; - java.lang.String::charAt@18 (line 658)
                                                ; - java.io.UnixFileSystem::normalize@19 (line 87)

  0x000000010651eeaa: mov    %ebx,0x60(%rsp)
  0x000000010651eeae: mov    %rax,0x70(%rsp)
  0x000000010651eeb3: nop
  0x000000010651eeb4: nop
  0x000000010651eeb5: nop
  0x000000010651eeb6: nop
  0x000000010651eeb7: callq  0x000000010644f020  ; OopMap{[80]=Oop [88]=Oop [112]=Oop off=1244}
                                                ;*invokespecial <init>
                                                ; - java.lang.String::charAt@18 (line 658)
                                                ; - java.io.UnixFileSystem::normalize@19 (line 87)
                                                ;   {optimized virtual_call}
  0x000000010651eebc: mov    0x70(%rsp),%rax    ; OopMap{[80]=Oop [88]=Oop rax=Oop off=1249}
                                                ;*athrow
                                                ; - java.lang.String::charAt@21 (line 658)
                                                ; - java.io.UnixFileSystem::normalize@19 (line 87)

  0x000000010651eec1: movabs $0x10651eec1,%rdx  ;   {section_word}
  0x000000010651eecb: callq  0x0000000106474fa0  ;   {runtime_call}
  0x000000010651eed0: nop
  0x000000010651eed1: mov    %rcx,0x8(%rsp)
  0x000000010651eed6: movq   $0xffffffffffffffff,(%rsp)
  0x000000010651eede: callq  0x0000000106507020  ; OopMap{rsi=Oop [88]=Oop rdx=Oop [80]=Oop off=1283}
                                                ;*synchronization entry
                                                ; - java.io.UnixFileSystem::normalize@-1 (line 84)
                                                ;   {runtime_call}
  0x000000010651eee3: jmpq   0x000000010651ea50
  0x000000010651eee8: callq  0x0000000106476b40  ; OopMap{rsi=Oop [88]=Oop rdx=Oop [80]=Oop off=1293}
                                                ;*invokevirtual length
                                                ; - java.io.UnixFileSystem::normalize@1 (line 84)
                                                ;   {runtime_call}
  0x000000010651eeed: mov    %rcx,0x8(%rsp)
  0x000000010651eef2: movq   $0xffffffffffffffff,(%rsp)
  0x000000010651eefa: callq  0x0000000106507020  ; OopMap{rsi=Oop [88]=Oop rdx=Oop [80]=Oop off=1311}
                                                ;*synchronization entry
                                                ; - java.lang.String::length@-1 (line 623)
                                                ; - java.io.UnixFileSystem::normalize@1 (line 84)
                                                ;   {runtime_call}
  0x000000010651eeff: jmpq   0x000000010651eb1a
  0x000000010651ef04: callq  0x0000000106476b40  ; OopMap{rsi=Oop [88]=Oop rdx=Oop [80]=Oop off=1321}
                                                ;*arraylength
                                                ; - java.lang.String::length@4 (line 623)
                                                ; - java.io.UnixFileSystem::normalize@1 (line 84)
                                                ;   {runtime_call}
  0x000000010651ef09: mov    %rcx,0x8(%rsp)
  0x000000010651ef0e: movq   $0xffffffffffffffff,(%rsp)
  0x000000010651ef16: callq  0x0000000106507020  ; OopMap{rsi=Oop [88]=Oop rdx=Oop [80]=Oop off=1339}
                                                ;*synchronization entry
                                                ; - java.lang.String::charAt@-1 (line 657)
                                                ; - java.io.UnixFileSystem::normalize@19 (line 87)
                                                ;   {runtime_call}
  0x000000010651ef1b: jmpq   0x000000010651ec37
  0x000000010651ef20: callq  0x0000000106476b40  ; OopMap{rsi=Oop [88]=Oop rdx=Oop [80]=Oop rcx=Oop off=1349}
                                                ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ; - java.io.UnixFileSystem::normalize@19 (line 87)
                                                ;   {runtime_call}
  0x000000010651ef25: mov    %rbx,(%rsp)
  0x000000010651ef29: callq  0x0000000106477200  ; OopMap{rsi=Oop [88]=Oop rdx=Oop [80]=Oop rcx=Oop off=1358}
                                                ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.UnixFileSystem::normalize@19 (line 87)
                                                ;   {runtime_call}
  0x000000010651ef2e: mov    %r8,0x8(%rsp)
  0x000000010651ef33: movq   $0x36,(%rsp)
  0x000000010651ef3b: callq  0x0000000106507020  ; OopMap{rsi=Oop [88]=Oop rdx=Oop [80]=Oop off=1376}
                                                ;*goto
                                                ; - java.io.UnixFileSystem::normalize@54 (line 86)
                                                ;   {runtime_call}
  0x000000010651ef40: jmpq   0x000000010651ed74
  0x000000010651ef45: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x000000010651ef4f: mov    $0xa050f00,%eax
  0x000000010651ef54: callq  0x0000000106506020  ; OopMap{[88]=Oop [80]=Oop off=1401}
                                                ;*new  ; - java.lang.String::charAt@13 (line 658)
                                                ; - java.io.UnixFileSystem::normalize@19 (line 87)
                                                ;   {runtime_call}
  0x000000010651ef59: jmpq   0x000000010651ee80
  0x000000010651ef5e: mov    %rdx,%rdx
  0x000000010651ef61: callq  0x0000000106476620  ; OopMap{[88]=Oop [80]=Oop off=1414}
                                                ;*new  ; - java.lang.String::charAt@13 (line 658)
                                                ; - java.io.UnixFileSystem::normalize@19 (line 87)
                                                ;   {runtime_call}
  0x000000010651ef66: jmpq   0x000000010651ee8f
  0x000000010651ef6b: nop
  0x000000010651ef6c: nop
  0x000000010651ef6d: mov    0x2a8(%r15),%rax
  0x000000010651ef74: movabs $0x0,%r10
  0x000000010651ef7e: mov    %r10,0x2a8(%r15)
  0x000000010651ef85: movabs $0x0,%r10
  0x000000010651ef8f: mov    %r10,0x2b0(%r15)
  0x000000010651ef96: add    $0x80,%rsp
  0x000000010651ef9d: pop    %rbp
  0x000000010651ef9e: jmpq   0x00000001064776a0  ;   {runtime_call}
  0x000000010651efa3: hlt
  0x000000010651efa4: hlt
  0x000000010651efa5: hlt
  0x000000010651efa6: hlt
  0x000000010651efa7: hlt
  0x000000010651efa8: hlt
  0x000000010651efa9: hlt
  0x000000010651efaa: hlt
  0x000000010651efab: hlt
  0x000000010651efac: hlt
  0x000000010651efad: hlt
  0x000000010651efae: hlt
  0x000000010651efaf: hlt
  0x000000010651efb0: hlt
  0x000000010651efb1: hlt
  0x000000010651efb2: hlt
  0x000000010651efb3: hlt
  0x000000010651efb4: hlt
  0x000000010651efb5: hlt
  0x000000010651efb6: hlt
  0x000000010651efb7: hlt
  0x000000010651efb8: hlt
  0x000000010651efb9: hlt
  0x000000010651efba: hlt
  0x000000010651efbb: hlt
  0x000000010651efbc: hlt
  0x000000010651efbd: hlt
  0x000000010651efbe: hlt
  0x000000010651efbf: hlt
[Stub Code]
  0x000000010651efc0: nop                       ;   {no_reloc}
  0x000000010651efc1: nop
  0x000000010651efc2: nop
  0x000000010651efc3: nop
  0x000000010651efc4: nop
  0x000000010651efc5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010651efcf: jmpq   0x000000010651efcf  ;   {runtime_call}
  0x000000010651efd4: nop
  0x000000010651efd5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010651efdf: jmpq   0x000000010651efdf  ;   {runtime_call}
  0x000000010651efe4: nop
  0x000000010651efe5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010651efef: jmpq   0x000000010651efef  ;   {runtime_call}
[Exception Handler]
  0x000000010651eff4: callq  0x00000001065049a0  ;   {runtime_call}
  0x000000010651eff9: mov    %rsp,-0x28(%rsp)
  0x000000010651effe: sub    $0x80,%rsp
  0x000000010651f005: mov    %rax,0x78(%rsp)
  0x000000010651f00a: mov    %rcx,0x70(%rsp)
  0x000000010651f00f: mov    %rdx,0x68(%rsp)
  0x000000010651f014: mov    %rbx,0x60(%rsp)
  0x000000010651f019: mov    %rbp,0x50(%rsp)
  0x000000010651f01e: mov    %rsi,0x48(%rsp)
  0x000000010651f023: mov    %rdi,0x40(%rsp)
  0x000000010651f028: mov    %r8,0x38(%rsp)
  0x000000010651f02d: mov    %r9,0x30(%rsp)
  0x000000010651f032: mov    %r10,0x28(%rsp)
  0x000000010651f037: mov    %r11,0x20(%rsp)
  0x000000010651f03c: mov    %r12,0x18(%rsp)
  0x000000010651f041: mov    %r13,0x10(%rsp)
  0x000000010651f046: mov    %r14,0x8(%rsp)
  0x000000010651f04b: mov    %r15,(%rsp)
  0x000000010651f04f: movabs $0x105194e90,%rdi  ;   {external_word}
  0x000000010651f059: movabs $0x10651eff9,%rsi  ;   {internal_word}
  0x000000010651f063: mov    %rsp,%rdx
  0x000000010651f066: and    $0xfffffffffffffff0,%rsp
  0x000000010651f06a: callq  0x0000000104fc0196  ;   {runtime_call}
  0x000000010651f06f: hlt
[Deopt Handler Code]
  0x000000010651f070: movabs $0x10651f070,%r10  ;   {section_word}
  0x000000010651f07a: push   %r10
  0x000000010651f07c: jmpq   0x00000001064503c0  ;   {runtime_call}
  0x000000010651f081: hlt
  0x000000010651f082: hlt
  0x000000010651f083: hlt
  0x000000010651f084: hlt
  0x000000010651f085: hlt
  0x000000010651f086: hlt
  0x000000010651f087: hlt
Decoding compiled method 0x000000010651f510:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000011a32b810} 'getFile' '()Ljava/lang/String;' in 'java/net/URL'
  #           [sp+0x40]  (sp of caller)
  0x000000010651f660: mov    0x8(%rsi),%r10d
  0x000000010651f664: shl    $0x3,%r10
  0x000000010651f668: cmp    %rax,%r10
  0x000000010651f66b: jne    0x000000010644ee20  ;   {runtime_call}
  0x000000010651f671: data32 data32 nopw 0x0(%rax,%rax,1)[Loaded sun.misc.URLClassPath$FileLoader from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]

  0x000000010651f67c: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x000000010651f680: mov    %eax,-0x14000(%rsp)
  0x000000010651f687: push   %rbp
  0x000000010651f688: sub    $0x30,%rsp         ;*aload_0
                                                ; - java.net.URL::getFile@0 (line 826)

  0x000000010651f68c: mov    0x1c(%rsi),%eax
  0x000000010651f68f: shl    $0x3,%rax          ;*getfield file
                                                ; - java.net.URL::getFile@1 (line 826)

  0x000000010651f693: add    $0x30,%rsp
  0x000000010651f697: pop    %rbp
  0x000000010651f698: test   %eax,-0x97d59e(%rip)        # 0x0000000105ba2100
                                                ;   {poll_return}
  0x000000010651f69e: retq
  0x000000010651f69f: nop
  0x000000010651f6a0: nop
  0x000000010651f6a1: mov    0x2a8(%r15),%rax
  0x000000010651f6a8: movabs $0x0,%r10
  0x000000010651f6b2: mov    %r10,0x2a8(%r15)
  0x000000010651f6b9: movabs $0x0,%r10
  0x000000010651f6c3: mov    %r10,0x2b0(%r15)
  0x000000010651f6ca: add    $0x30,%rsp
  0x000000010651f6ce: pop    %rbp
  0x000000010651f6cf: jmpq   0x00000001064776a0  ;   {runtime_call}
  0x000000010651f6d4: hlt
  0x000000010651f6d5: hlt
  0x000000010651f6d6: hlt
  0x000000010651f6d7: hlt
  0x000000010651f6d8: hlt
  0x000000010651f6d9: hlt
  0x000000010651f6da: hlt
  0x000000010651f6db: hlt
  0x000000010651f6dc: hlt
  0x000000010651f6dd: hlt
  0x000000010651f6de: hlt
  0x000000010651f6df: hlt
[Exception Handler]
[Stub Code]
  0x000000010651f6e0: callq  0x00000001065049a0  ;   {no_reloc}
  0x000000010651f6e5: mov    %rsp,-0x28(%rsp)
  0x000000010651f6ea: sub    $0x80,%rsp
  0x000000010651f6f1: mov    %rax,0x78(%rsp)
  0x000000010651f6f6: mov    %rcx,0x70(%rsp)
  0x000000010651f6fb: mov    %rdx,0x68(%rsp)
  0x000000010651f700: mov    %rbx,0x60(%rsp)
  0x000000010651f705: mov    %rbp,0x50(%rsp)
  0x000000010651f70a: mov    %rsi,0x48(%rsp)
  0x000000010651f70f: mov    %rdi,0x40(%rsp)
  0x000000010651f714: mov    %r8,0x38(%rsp)
  0x000000010651f719: mov    %r9,0x30(%rsp)
  0x000000010651f71e: mov    %r10,0x28(%rsp)
  0x000000010651f723: mov    %r11,0x20(%rsp)
  0x000000010651f728: mov    %r12,0x18(%rsp)
  0x000000010651f72d: mov    %r13,0x10(%rsp)
  0x000000010651f732: mov    %r14,0x8(%rsp)
  0x000000010651f737: mov    %r15,(%rsp)
  0x000000010651f73b: movabs $0x105194e90,%rdi  ;   {external_word}
  0x000000010651f745: movabs $0x10651f6e5,%rsi  ;   {internal_word}
  0x000000010651f74f: mov    %rsp,%rdx
  0x000000010651f752: and    $0xfffffffffffffff0,%rsp
  0x000000010651f756: callq  0x0000000104fc0196  ;   {runtime_call}
  0x000000010651f75b: hlt
[Deopt Handler Code]
  0x000000010651f75c: movabs $0x10651f75c,%r10  ;   {section_word}
  0x000000010651f766: push   %r10
  0x000000010651f768: jmpq   0x00000001064503c0  ;   {runtime_call}
  0x000000010651f76d: hlt
  0x000000010651f76e: hlt
  0x000000010651f76f: hlt
Decoding compiled method 0x000000010651f810:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000011a412548} 'requestedCharsetName' '()Ljava/lang/String;' in 'java/lang/StringCoding$StringEncoder'
  #           [sp+0x40]  (sp of caller)
  0x000000010651f960: mov    0x8(%rsi),%r10d
  0x000000010651f964: shl    $0x3,%r10
  0x000000010651f968: cmp    %rax,%r10
  0x000000010651f96b: jne    0x000000010644ee20  ;   {runtime_call}
  0x000000010651f971: data32 data32 nopw 0x0(%rax,%rax,1)
  0x000000010651f97c: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x000000010651f980: mov    %eax,-0x14000(%rsp)
  0x000000010651f987: push   %rbp
  0x000000010651f988: sub    $0x30,%rsp         ;*aload_0
                                                ; - java.lang.StringCoding$StringEncoder::requestedCharsetName@0 (line 295)

  0x000000010651f98c: mov    0x18(%rsi),%eax
  0x000000010651f98f: shl    $0x3,%rax          ;*getfield requestedCharsetName
                                                ; - java.lang.StringCoding$StringEncoder::requestedCharsetName@1 (line 295)

  0x000000010651f993: add    $0x30,%rsp
  0x000000010651f997: pop    %rbp
  0x000000010651f998: test   %eax,-0x97d89e(%rip)        # 0x0000000105ba2100
                                                ;   {poll_return}
  0x000000010651f99e: retq
  0x000000010651f99f: nop
  0x000000010651f9a0: nop
  0x000000010651f9a1: mov    0x2a8(%r15),%rax
  0x000000010651f9a8: movabs $0x0,%r10
  0x000000010651f9b2: mov    %r10,0x2a8(%r15)
  0x000000010651f9b9: movabs $0x0,%r10
  0x000000010651f9c3: mov    %r10,0x2b0(%r15)
  0x000000010651f9ca: add    $0x30,%rsp
  0x000000010651f9ce: pop    %rbp
  0x000000010651f9cf: jmpq   0x00000001064776a0  ;   {runtime_call}
  0x000000010651f9d4: hlt
  0x000000010651f9d5: hlt
  0x000000010651f9d6: hlt
  0x000000010651f9d7: hlt
  0x000000010651f9d8: hlt
  0x000000010651f9d9: hlt
  0x000000010651f9da: hlt
  0x000000010651f9db: hlt
  0x000000010651f9dc: hlt
  0x000000010651f9dd: hlt
  0x000000010651f9de: hlt
  0x000000010651f9df: hlt
[Exception Handler]
[Stub Code]
  0x000000010651f9e0: callq  0x00000001065049a0  ;   {no_reloc}
  0x000000010651f9e5: mov    %rsp,-0x28(%rsp)
  0x000000010651f9ea: sub    $0x80,%rsp
  0x000000010651f9f1: mov    %rax,0x78(%rsp)
  0x000000010651f9f6: mov    %rcx,0x70(%rsp)
  0x000000010651f9fb: mov    %rdx,0x68(%rsp)
  0x000000010651fa00: mov    %rbx,0x60(%rsp)
  0x000000010651fa05: mov    %rbp,0x50(%rsp)
  0x000000010651fa0a: mov    %rsi,0x48(%rsp)
  0x000000010651fa0f: mov    %rdi,0x40(%rsp)
  0x000000010651fa14: mov    %r8,0x38(%rsp)
  0x000000010651fa19: mov    %r9,0x30(%rsp)
  0x000000010651fa1e: mov    %r10,0x28(%rsp)
  0x000000010651fa23: mov    %r11,0x20(%rsp)
  0x000000010651fa28: mov    %r12,0x18(%rsp)
  0x000000010651fa2d: mov    %r13,0x10(%rsp)
  0x000000010651fa32: mov    %r14,0x8(%rsp)
  0x000000010651fa37: mov    %r15,(%rsp)
  0x000000010651fa3b: movabs $0x105194e90,%rdi  ;   {external_word}
  0x000000010651fa45: movabs $0x10651f9e5,%rsi  ;   {internal_word}
  0x000000010651fa4f: mov    %rsp,%rdx
  0x000000010651fa52: and    $0xfffffffffffffff0,%rsp
  0x000000010651fa56: callq  0x0000000104fc0196  ;   {runtime_call}
  0x000000010651fa5b: hlt
[Deopt Handler Code]
  0x000000010651fa5c: movabs $0x10651fa5c,%r10  ;   {section_word}
  0x000000010651fa66: push   %r10
  0x000000010651fa68: jmpq   0x00000001064503c0  ;   {runtime_call}
  0x000000010651fa6d: hlt
  0x000000010651fa6e: hlt
  0x000000010651fa6f: hlt
Decoding compiled method 0x000000010651fb10:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000011a36fcd8} 'size' '()I' in 'java/util/ArrayList'
  #           [sp+0x40]  (sp of caller)
  0x000000010651fc60: mov    0x8(%rsi),%r10d
  0x000000010651fc64: shl    $0x3,%r10
  0x000000010651fc68: cmp    %rax,%r10
  0x000000010651fc6b: jne    0x000000010644ee20  ;   {runtime_call}
  0x000000010651fc71: data32 data32 nopw 0x0(%rax,%rax,1)
  0x000000010651fc7c: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x000000010651fc80: mov    %eax,-0x14000(%rsp)
  0x000000010651fc87: push   %rbp
  0x000000010651fc88: sub    $0x30,%rsp         ;*aload_0
                                                ; - java.util.ArrayList::size@0 (line 278)

  0x000000010651fc8c: mov    0x10(%rsi),%eax    ;*getfield size
                                                ; - java.util.ArrayList::size@1 (line 278)

  0x000000010651fc8f: add    $0x30,%rsp
  0x000000010651fc93: pop    %rbp
  0x000000010651fc94: test   %eax,-0x97db9a(%rip)        # 0x0000000105ba2100
                                                ;   {poll_return}
  0x000000010651fc9a: retq
  0x000000010651fc9b: nop
  0x000000010651fc9c: nop
  0x000000010651fc9d: mov    0x2a8(%r15),%rax
  0x000000010651fca4: movabs $0x0,%r10
  0x000000010651fcae: mov    %r10,0x2a8(%r15)
  0x000000010651fcb5: movabs $0x0,%r10
  0x000000010651fcbf: mov    %r10,0x2b0(%r15)
  0x000000010651fcc6: add    $0x30,%rsp
  0x000000010651fcca: pop    %rbp
  0x000000010651fccb: jmpq   0x00000001064776a0  ;   {runtime_call}
  0x000000010651fcd0: hlt
  0x000000010651fcd1: hlt
  0x000000010651fcd2: hlt
  0x000000010651fcd3: hlt
  0x000000010651fcd4: hlt
  0x000000010651fcd5: hlt
  0x000000010651fcd6: hlt
  0x000000010651fcd7: hlt
  0x000000010651fcd8: hlt
  0x000000010651fcd9: hlt
  0x000000010651fcda: hlt
  0x000000010651fcdb: hlt
  0x000000010651fcdc: hlt
  0x000000010651fcdd: hlt
  0x000000010651fcde: hlt
  0x000000010651fcdf: hlt
[Exception Handler]
[Stub Code]
  0x000000010651fce0: callq  0x00000001065049a0  ;   {no_reloc}
  0x000000010651fce5: mov    %rsp,-0x28(%rsp)
  0x000000010651fcea: sub    $0x80,%rsp
  0x000000010651fcf1: mov    %rax,0x78(%rsp)
  0x000000010651fcf6: mov    %rcx,0x70(%rsp)
  0x000000010651fcfb: mov    %rdx,0x68(%rsp)
  0x000000010651fd00: mov    %rbx,0x60(%rsp)
  0x000000010651fd05: mov    %rbp,0x50(%rsp)
  0x000000010651fd0a: mov    %rsi,0x48(%rsp)
  0x000000010651fd0f: mov    %rdi,0x40(%rsp)
  0x000000010651fd14: mov    %r8,0x38(%rsp)
  0x000000010651fd19: mov    %r9,0x30(%rsp)
  0x000000010651fd1e: mov    %r10,0x28(%rsp)
  0x000000010651fd23: mov    %r11,0x20(%rsp)
  0x000000010651fd28: mov    %r12,0x18(%rsp)
  0x000000010651fd2d: mov    %r13,0x10(%rsp)
  0x000000010651fd32: mov    %r14,0x8(%rsp)
  0x000000010651fd37: mov    %r15,(%rsp)
  0x000000010651fd3b: movabs $0x105194e90,%rdi  ;   {external_word}
  0x000000010651fd45: movabs $0x10651fce5,%rsi  ;   {internal_word}
  0x000000010651fd4f: mov    %rsp,%rdx
  0x000000010651fd52: and    $0xfffffffffffffff0,%rsp
  0x000000010651fd56: callq  0x0000000104fc0196  ;   {runtime_call}
  0x000000010651fd5b: hlt
[Deopt Handler Code]
  0x000000010651fd5c: movabs $0x10651fd5c,%r10  ;   {section_word}
  0x000000010651fd66: push   %r10
  0x000000010651fd68: jmpq   0x00000001064503c0  ;   {runtime_call}
  0x000000010651fd6d: hlt
  0x000000010651fd6e: hlt
  0x000000010651fd6f: hlt
