Decoding compiled method 0x00000001020ff7d0:
Code:
[Disassembling for mach='i386:x86-64']
[Entry Point]
[Constants]
  # {method} {0x0000000115e71098} 'hashCode' '()I' in 'java/lang/String'
  #           [sp+0x40]  (sp of caller)
  0x00000001020ff940: mov    0x8(%rsi),%r10d
  0x00000001020ff944: shl    $0x3,%r10
  0x00000001020ff948: cmp    %rax,%r10
  0x00000001020ff94b: jne    0x0000000102045e20  ;   {runtime_call}
  0x00000001020ff951: data32 data32 nopw 0x0(%rax,%rax,1)
  0x00000001020ff95c: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x00000001020ff960: mov    %eax,-0x14000(%rsp)
  0x00000001020ff967: push   %rbp
  0x00000001020ff968: sub    $0x30,%rsp
  0x00000001020ff96c: movabs $0x11603ae08,%rax  ;   {metadata(method data for {method} {0x0000000115e71098} 'hashCode' '()I' in 'java/lang/String')}
  0x00000001020ff976: mov    0xdc(%rax),%edi
  0x00000001020ff97c: add    $0x8,%edi
  0x00000001020ff97f: mov    %edi,0xdc(%rax)
  0x00000001020ff985: movabs $0x115e71098,%rax  ;   {metadata({method} {0x0000000115e71098} 'hashCode' '()I' in 'java/lang/String')}
  0x00000001020ff98f: and    $0x1ff8,%edi
  0x00000001020ff995: cmp    $0x0,%edi
  0x00000001020ff998: je     0x00000001020ffad1  ;*aload_0
                                                ; - java.lang.String::hashCode@0 (line 1466)

  0x00000001020ff99e: mov    0x10(%rsi),%eax    ;*getfield hash
                                                ; - java.lang.String::hashCode@1 (line 1466)

  0x00000001020ff9a1: cmp    $0x0,%eax
  0x00000001020ff9a4: movabs $0x11603ae08,%rdi  ;   {metadata(method data for {method} {0x0000000115e71098} 'hashCode' '()I' in 'java/lang/String')}
  0x00000001020ff9ae: movabs $0x108,%rbx
  0x00000001020ff9b8: jne    0x00000001020ff9c8
  0x00000001020ff9be: movabs $0x118,%rbx
  0x00000001020ff9c8: mov    (%rdi,%rbx,1),%rdx
  0x00000001020ff9cc: lea    0x1(%rdx),%rdx
  0x00000001020ff9d0: mov    %rdx,(%rdi,%rbx,1)
  0x00000001020ff9d4: jne    0x00000001020ffac5  ;*ifne
                                                ; - java.lang.String::hashCode@6 (line 1467)

  0x00000001020ff9da: mov    0xc(%rsi),%edi
  0x00000001020ff9dd: shl    $0x3,%rdi          ;*getfield value
                                                ; - java.lang.String::hashCode@10 (line 1467)

  0x00000001020ff9e1: mov    0xc(%rdi),%ebx     ;*arraylength
                                                ; - java.lang.String::hashCode@13 (line 1467)
                                                ; implicit exception: dispatches to 0x00000001020ffae8
  0x00000001020ff9e4: cmp    $0x0,%ebx
  0x00000001020ff9e7: movabs $0x11603ae08,%rdx  ;   {metadata(method data for {method} {0x0000000115e71098} 'hashCode' '()I' in 'java/lang/String')}
  0x00000001020ff9f1: movabs $0x128,%rcx
  0x00000001020ff9fb: jle    0x00000001020ffa0b
  0x00000001020ffa01: movabs $0x138,%rcx
  0x00000001020ffa0b: mov    (%rdx,%rcx,1),%r8
  0x00000001020ffa0f: lea    0x1(%r8),%r8
  0x00000001020ffa13: mov    %r8,(%rdx,%rcx,1)
  0x00000001020ffa17: jle    0x00000001020ffac5  ;*ifle
                                                ; - java.lang.String::hashCode@14 (line 1467)

  0x00000001020ffa1d: mov    $0x0,%edx
  0x00000001020ffa22: jmpq   0x00000001020ffa8a  ;*iload_3
                                                ; - java.lang.String::hashCode@24 (line 1470)

  0x00000001020ffa27: nop
  0x00000001020ffa28: movslq %edx,%rcx
  0x00000001020ffa2b: movzwl 0x10(%rdi,%rcx,2),%ecx  ;*caload
                                                ; - java.lang.String::hashCode@39 (line 1471)

  0x00000001020ffa30: mov    %rax,%r8
  0x00000001020ffa33: shl    $0x5,%eax
  0x00000001020ffa36: sub    %r8d,%eax
  0x00000001020ffa39: add    %ecx,%eax
  0x00000001020ffa3b: inc    %edx
  0x00000001020ffa3d: movabs $0x11603ae08,%rcx  ;   {metadata(method data for {method} {0x0000000115e71098} 'hashCode' '()I' in 'java/lang/String')}
  0x00000001020ffa47: mov    0xe0(%rcx),%r8d
  0x00000001020ffa4e: add    $0x8,%r8d
  0x00000001020ffa52: mov    %r8d,0xe0(%rcx)
  0x00000001020ffa59: movabs $0x115e71098,%rcx  ;   {metadata({method} {0x0000000115e71098} 'hashCode' '()I' in 'java/lang/String')}
  0x00000001020ffa63: and    $0xfff8,%r8d
  0x00000001020ffa6a: cmp    $0x0,%r8d
  0x00000001020ffa6e: je     0x00000001020ffaed  ; OopMap{rdi=Oop rsi=Oop off=308}
                                                ;*goto
                                                ; - java.lang.String::hashCode@45 (line 1470)

  0x00000001020ffa74: test   %eax,-0x9d397a(%rip)        # 0x000000010172c100
                                                ;   {poll}
  0x00000001020ffa7a: movabs $0x11603ae08,%rcx  ;   {metadata(method data for {method} {0x0000000115e71098} 'hashCode' '()I' in 'java/lang/String')}
  0x00000001020ffa84: incl   0x168(%rcx)        ;*goto
                                                ; - java.lang.String::hashCode@45 (line 1470)

  0x00000001020ffa8a: cmp    %ebx,%edx
  0x00000001020ffa8c: movabs $0x11603ae08,%rcx  ;   {metadata(method data for {method} {0x0000000115e71098} 'hashCode' '()I' in 'java/lang/String')}
  0x00000001020ffa96: movabs $0x148,%r8
  0x00000001020ffaa0: jge    0x00000001020ffab0
  0x00000001020ffaa6: movabs $0x158,%r8
  0x00000001020ffab0: mov    (%rcx,%r8,1),%r9
  0x00000001020ffab4: lea    0x1(%r9),%r9
  0x00000001020ffab8: mov    %r9,(%rcx,%r8,1)
  0x00000001020ffabc: jl     0x00000001020ffa28  ;*if_icmpge
                                                ; - java.lang.String::hashCode@30 (line 1470)

  0x00000001020ffac2: mov    %eax,0x10(%rsi)    ;*putfield hash
                                                ; - java.lang.String::hashCode@50 (line 1473)

  0x00000001020ffac5: add    $0x30,%rsp
  0x00000001020ffac9: pop    %rbp
  0x00000001020ffaca: test   %eax,-0x9d39d0(%rip)        # 0x000000010172c100
                                                ;   {poll_return}
  0x00000001020ffad0: retq
  0x00000001020ffad1: mov    %rax,0x8(%rsp)
  0x00000001020ffad6: movq   $0xffffffffffffffff,(%rsp)
  0x00000001020ffade: callq  0x00000001020fe020  ; OopMap{rsi=Oop off=419}
                                                ;*synchronization entry
                                                ; - java.lang.String::hashCode@-1 (line 1466)
                                                ;   {runtime_call}
  0x00000001020ffae3: jmpq   0x00000001020ff99e
  0x00000001020ffae8: callq  0x000000010206db40  ; OopMap{rsi=Oop rdi=Oop off=429}
                                                ;*arraylength
                                                ; - java.lang.String::hashCode@13 (line 1467)
                                                ;   {runtime_call}
  0x00000001020ffaed: mov    %rcx,0x8(%rsp)
  0x00000001020ffaf2: movq   $0x2d,(%rsp)
  0x00000001020ffafa: callq  0x00000001020fe020  ; OopMap{rdi=Oop rsi=Oop off=447}
                                                ;*goto
                                                ; - java.lang.String::hashCode@45 (line 1470)
                                                ;   {runtime_call}
  0x00000001020ffaff: jmpq   0x00000001020ffa74
  0x00000001020ffb04: nop
  0x00000001020ffb05: nop
  0x00000001020ffb06: mov    0x2a8(%r15),%rax
  0x00000001020ffb0d: movabs $0x0,%r10
  0x00000001020ffb17: mov    %r10,0x2a8(%r15)
  0x00000001020ffb1e: movabs $0x0,%r10
  0x00000001020ffb28: mov    %r10,0x2b0(%r15)
  0x00000001020ffb2f: add    $0x30,%rsp
  0x00000001020ffb33: pop    %rbp
  0x00000001020ffb34: jmpq   0x000000010206e6a0  ;   {runtime_call}
  0x00000001020ffb39: hlt
  0x00000001020ffb3a: hlt
  0x00000001020ffb3b: hlt
  0x00000001020ffb3c: hlt
  0x00000001020ffb3d: hlt
  0x00000001020ffb3e: hlt
  0x00000001020ffb3f: hlt
[Exception Handler]
[Stub Code]
  0x00000001020ffb40: callq  0x00000001020fb9a0  ;   {no_reloc}
  0x00000001020ffb45: mov    %rsp,-0x28(%rsp)
  0x00000001020ffb4a: sub    $0x80,%rsp
  0x00000001020ffb51: mov    %rax,0x78(%rsp)
  0x00000001020ffb56: mov    %rcx,0x70(%rsp)
  0x00000001020ffb5b: mov    %rdx,0x68(%rsp)
  0x00000001020ffb60: mov    %rbx,0x60(%rsp)
  0x00000001020ffb65: mov    %rbp,0x50(%rsp)
  0x00000001020ffb6a: mov    %rsi,0x48(%rsp)
  0x00000001020ffb6f: mov    %rdi,0x40(%rsp)
  0x00000001020ffb74: mov    %r8,0x38(%rsp)
  0x00000001020ffb79: mov    %r9,0x30(%rsp)
  0x00000001020ffb7e: mov    %r10,0x28(%rsp)
  0x00000001020ffb83: mov    %r11,0x20(%rsp)
  0x00000001020ffb88: mov    %r12,0x18(%rsp)
  0x00000001020ffb8d: mov    %r13,0x10(%rsp)
  0x00000001020ffb92: mov    %r14,0x8(%rsp)
  0x00000001020ffb97: mov    %r15,(%rsp)
  0x00000001020ffb9b: movabs $0x100d1ee90,%rdi  ;   {external_word}
  0x00000001020ffba5: movabs $0x1020ffb45,%rsi  ;   {internal_word}
  0x00000001020ffbaf: mov    %rsp,%rdx
  0x00000001020ffbb2: and    $0xfffffffffffffff0,%rsp
  0x00000001020ffbb6: callq  0x0000000100b4a196  ;   {runtime_call}
  0x00000001020ffbbb: hlt
[Deopt Handler Code]
  0x00000001020ffbbc: movabs $0x1020ffbbc,%r10  ;   {section_word}
  0x00000001020ffbc6: push   %r10
  0x00000001020ffbc8: jmpq   0x00000001020473c0  ;   {runtime_call}
  0x00000001020ffbcd: hlt
  0x00000001020ffbce: hlt
  0x00000001020ffbcf: hlt
[Loaded sun.misc.PostVMInitHook from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.usagetracker.UsageTrackerClient from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.concurrent.atomic.AtomicBoolean from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.usagetracker.UsageTrackerClient$1 from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
Decoding compiled method 0x0000000102107b10:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000115e6fcf8} 'length' '()I' in 'java/lang/String'
  #           [sp+0x40]  (sp of caller)
  0x0000000102107c80: mov    0x8(%rsi),%r10d
  0x0000000102107c84: shl    $0x3,%r10
  0x0000000102107c88: cmp    %rax,%r10
  0x0000000102107c8b: jne    0x0000000102045e20  ;   {runtime_call}
  0x0000000102107c91: data32 data32 nopw 0x0(%rax,%rax,1)
  0x0000000102107c9c: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x0000000102107ca0: mov    %eax,-0x14000(%rsp)
  0x0000000102107ca7: push   %rbp
  0x0000000102107ca8: sub    $0x30,%rsp
  0x0000000102107cac: movabs $0x1160450c0,%rax  ;   {metadata(method data for {method} {0x0000000115e6fcf8} 'length' '()I' in 'java/lang/String')}
  0x0000000102107cb6: mov    0xdc(%rax),%edi
  0x0000000102107cbc: add    $0x8,%edi
  0x0000000102107cbf: mov    %edi,0xdc(%rax)
  0x0000000102107cc5: movabs $0x115e6fcf8,%rax  ;   {metadata({method} {0x0000000115e6fcf8} 'length' '()I' in 'java/lang/String')}
  0x0000000102107ccf: and    $0x1ff8,%edi
  0x0000000102107cd5: cmp    $0x0,%edi
  0x0000000102107cd8: je     0x0000000102107cf4  ;*aload_0
                                                ; - java.lang.String::length@0 (line 623)

  0x0000000102107cde: mov    0xc(%rsi),%eax
  0x0000000102107ce1: shl    $0x3,%rax          ;*getfield value
                                                ; - java.lang.String::length@1 (line 623)

  0x0000000102107ce5: mov    0xc(%rax),%eax     ;*arraylength
                                                ; - java.lang.String::length@4 (line 623)
                                                ; implicit exception: dispatches to 0x0000000102107d08
  0x0000000102107ce8: add    $0x30,%rsp
  0x0000000102107cec: pop    %rbp
  0x0000000102107ced: test   %eax,-0x9dbbf3(%rip)        # 0x000000010172c100
                                                ;   {poll_return}
  0x0000000102107cf3: retq
  0x0000000102107cf4: mov    %rax,0x8(%rsp)
  0x0000000102107cf9: movq   $0xffffffffffffffff,(%rsp)
  0x0000000102107d01: callq  0x00000001020fe020  ; OopMap{rsi=Oop off=134}
                                                ;*synchronization entry
                                                ; - java.lang.String::length@-1 (line 623)
                                                ;   {runtime_call}
  0x0000000102107d06: jmp    0x0000000102107cde
  0x0000000102107d08: callq  0x000000010206db40  ; OopMap{rsi=Oop off=141}
                                                ;*arraylength
                                                ; - java.lang.String::length@4 (line 623)
                                                ;   {runtime_call}
  0x0000000102107d0d: nop
  0x0000000102107d0e: nop
  0x0000000102107d0f: mov    0x2a8(%r15),%rax
  0x0000000102107d16: movabs $0x0,%r10
  0x0000000102107d20: mov    %r10,0x2a8(%r15)
  0x0000000102107d27: movabs $0x0,%r10
  0x0000000102107d31: mov    %r10,0x2b0(%r15)
  0x0000000102107d38: add    $0x30,%rsp
  0x0000000102107d3c: pop    %rbp
  0x0000000102107d3d: jmpq   0x000000010206e6a0  ;   {runtime_call}
  0x0000000102107d42: hlt
  0x0000000102107d43: hlt
  0x0000000102107d44: hlt
  0x0000000102107d45: hlt
  0x0000000102107d46: hlt
  0x0000000102107d47: hlt
  0x0000000102107d48: hlt
  0x0000000102107d49: hlt
  0x0000000102107d4a: hlt
  0x0000000102107d4b: hlt
  0x0000000102107d4c: hlt
  0x0000000102107d4d: hlt
  0x0000000102107d4e: hlt
  0x0000000102107d4f: hlt
  0x0000000102107d50: hlt
  0x0000000102107d51: hlt
  0x0000000102107d52: hlt
  0x0000000102107d53: hlt
  0x0000000102107d54: hlt
  0x0000000102107d55: hlt
  0x0000000102107d56: hlt
  0x0000000102107d57: hlt
  0x0000000102107d58: hlt
  0x0000000102107d59: hlt
  0x0000000102107d5a: hlt
  0x0000000102107d5b: hlt
  0x0000000102107d5c: hlt
  0x0000000102107d5d: hlt
  0x0000000102107d5e: hlt
  0x0000000102107d5f: hlt
[Exception Handler]
[Stub Code]
  0x0000000102107d60: callq  0x00000001020fb9a0  ;   {no_reloc}
  0x0000000102107d65: mov    %rsp,-0x28(%rsp)
  0x0000000102107d6a: sub    $0x80,%rsp
  0x0000000102107d71: mov    %rax,0x78(%rsp)
  0x0000000102107d76: mov    %rcx,0x70(%rsp)
  0x0000000102107d7b: mov    %rdx,0x68(%rsp)
  0x0000000102107d80: mov    %rbx,0x60(%rsp)
  0x0000000102107d85: mov    %rbp,0x50(%rsp)
  0x0000000102107d8a: mov    %rsi,0x48(%rsp)
  0x0000000102107d8f: mov    %rdi,0x40(%rsp)
  0x0000000102107d94: mov    %r8,0x38(%rsp)
  0x0000000102107d99: mov    %r9,0x30(%rsp)
  0x0000000102107d9e: mov    %r10,0x28(%rsp)
  0x0000000102107da3: mov    %r11,0x20(%rsp)
  0x0000000102107da8: mov    %r12,0x18(%rsp)
  0x0000000102107dad: mov    %r13,0x10(%rsp)
  0x0000000102107db2: mov    %r14,0x8(%rsp)
  0x0000000102107db7: mov    %r15,(%rsp)
  0x0000000102107dbb: movabs $0x100d1ee90,%rdi  ;   {external_word}
  0x0000000102107dc5: movabs $0x102107d65,%rsi  ;   {internal_word}
  0x0000000102107dcf: mov    %rsp,%rdx
  0x0000000102107dd2: and    $0xfffffffffffffff0,%rsp
  0x0000000102107dd6: callq  0x0000000100b4a196  ;   {runtime_call}
  0x0000000102107ddb: hlt
[Deopt Handler Code]
  0x0000000102107ddc: movabs $0x102107ddc,%r10  ;   {section_word}
  0x0000000102107de6: push   %r10
  0x0000000102107de8: jmpq   0x00000001020473c0  ;   {runtime_call}
  0x0000000102107ded: hlt
  0x0000000102107dee: hlt
  0x0000000102107def: hlt
[Loaded sun.usagetracker.UsageTrackerClient$4 from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
Decoding compiled method 0x0000000102107ed0:
Code:
[Entry Point]
  # {method} {0x0000000115e85f00} 'arraycopy' '(Ljava/lang/Object;ILjava/lang/Object;II)V' in 'java/lang/System'
  # parm0:    rsi:rsi   = 'java/lang/Object'
  # parm1:    rdx       = int
  # parm2:    rcx:rcx   = 'java/lang/Object'
  # parm3:    r8        = int
  # parm4:    r9        = int
  #           [sp+0x60]  (sp of caller)
  0x0000000102108040: mov    0x8(%rsi),%r10d
  0x0000000102108044: shl    $0x3,%r10
  0x0000000102108048: cmp    %r10,%rax
  0x000000010210804b: je     0x0000000102108058
  0x0000000102108051: jmpq   0x0000000102045e20  ;   {runtime_call}
  0x0000000102108056: xchg   %ax,%ax
[Verified Entry Point]
  0x0000000102108058: mov    %eax,-0x14000(%rsp)
  0x000000010210805f: push   %rbp
  0x0000000102108060: mov    %rsp,%rbp
  0x0000000102108063: sub    $0x50,%rsp
  0x0000000102108067: mov    %r9,(%rsp)
  0x000000010210806b: mov    %r8,%r9
  0x000000010210806e: mov    %rcx,0x18(%rsp)
  0x0000000102108073: cmp    $0x0,%rcx
  0x0000000102108077: lea    0x18(%rsp),%r8
  0x000000010210807c: cmove  0x18(%rsp),%r8
  0x0000000102108082: mov    %rdx,%rcx
  0x0000000102108085: mov    %rsi,0x8(%rsp)
  0x000000010210808a: cmp    $0x0,%rsi
  0x000000010210808e: lea    0x8(%rsp),%rdx
  0x0000000102108093: cmove  0x8(%rsp),%rdx
  0x0000000102108099: movabs $0x795580c78,%r14  ;   {oop(a 'java/lang/Class' = 'java/lang/System')}
  0x00000001021080a3: mov    %r14,0x38(%rsp)
  0x00000001021080a8: lea    0x38(%rsp),%r14
  0x00000001021080ad: mov    %r14,%rsi          ; OopMap{[24]=Oop [8]=Oop [56]=Oop off=112}
  0x00000001021080b0: movabs $0x1021080b0,%r10  ;   {section_word}
  0x00000001021080ba: mov    %r10,0x1e0(%r15)
  0x00000001021080c1: mov    %rsp,0x1d8(%r15)
  0x00000001021080c8: cmpb   $0x0,-0x10d9ca5(%rip)        # 0x000000010102e42a
                                                ;   {external_word}
  0x00000001021080cf: je     0x0000000102108113
  0x00000001021080d5: push   %rsi
  0x00000001021080d6: push   %rdx
  0x00000001021080d7: push   %rcx
  0x00000001021080d8: push   %r8
  0x00000001021080da: push   %r9
  0x00000001021080dc: movabs $0x115e85f00,%rsi  ;   {metadata({method} {0x0000000115e85f00} 'arraycopy' '(Ljava/lang/Object;ILjava/lang/Object;II)V' in 'java/lang/System')}
  0x00000001021080e6: mov    %r15,%rdi
  0x00000001021080e9: test   $0xf,%esp
  0x00000001021080ef: je     0x0000000102108107
  0x00000001021080f5: sub    $0x8,%rsp
  0x00000001021080f9: callq  0x0000000100c2e488  ;   {runtime_call}
  0x00000001021080fe: add    $0x8,%rsp
  0x0000000102108102: jmpq   0x000000010210810c
  0x0000000102108107: callq  0x0000000100c2e488  ;   {runtime_call}
  0x000000010210810c: pop    %r9
  0x000000010210810e: pop    %r8
  0x0000000102108110: pop    %rcx
  0x0000000102108111: pop    %rdx
  0x0000000102108112: pop    %rsi
  0x0000000102108113: lea    0x1f8(%r15),%rdi
  0x000000010210811a: movl   $0x4,0x270(%r15)
  0x0000000102108125: callq  0x0000000100a8a5f0  ;   {runtime_call}
  0x000000010210812a: vzeroupper
  0x000000010210812d: movl   $0x5,0x270(%r15)
  0x0000000102108138: lock addl $0x0,(%rsp)
  0x000000010210813d: cmpl   $0x0,-0x10cf377(%rip)        # 0x0000000101038dd0
                                                ;   {external_word}
  0x0000000102108147: jne    0x000000010210815b
  0x000000010210814d: cmpl   $0x0,0x30(%r15)
  0x0000000102108155: je     0x0000000102108174
  0x000000010210815b: mov    %r15,%rdi
  0x000000010210815e: mov    %rsp,%r12
  0x0000000102108161: sub    $0x0,%rsp
  0x0000000102108165: and    $0xfffffffffffffff0,%rsp
  0x0000000102108169: callq  0x0000000100cb0b30  ;   {runtime_call}
  0x000000010210816e: mov    %r12,%rsp
  0x0000000102108171: xor    %r12,%r12
  0x0000000102108174: movl   $0x8,0x270(%r15)
  0x000000010210817f: cmpl   $0x1,0x29c(%r15)
  0x000000010210818a: je     0x0000000102108212
  0x0000000102108190: cmpb   $0x0,-0x10d9d6d(%rip)        # 0x000000010102e42a
                                                ;   {external_word}
  0x0000000102108197: je     0x00000001021081cd
  0x000000010210819d: movabs $0x115e85f00,%rsi  ;   {metadata({method} {0x0000000115e85f00} 'arraycopy' '(Ljava/lang/Object;ILjava/lang/Object;II)V' in 'java/lang/System')}
  0x00000001021081a7: mov    %r15,%rdi
  0x00000001021081aa: test   $0xf,%esp
  0x00000001021081b0: je     0x00000001021081c8
  0x00000001021081b6: sub    $0x8,%rsp
  0x00000001021081ba: callq  0x0000000100c2e3fa  ;   {runtime_call}
  0x00000001021081bf: add    $0x8,%rsp
  0x00000001021081c3: jmpq   0x00000001021081cd
  0x00000001021081c8: callq  0x0000000100c2e3fa  ;   {runtime_call}
  0x00000001021081cd: movabs $0x0,%r10
  0x00000001021081d7: mov    %r10,0x1d8(%r15)
  0x00000001021081de: movabs $0x0,%r10
  0x00000001021081e8: mov    %r10,0x1e0(%r15)
  0x00000001021081ef: mov    0x38(%r15),%rcx
  0x00000001021081f3: movl   $0x0,0x100(%rcx)
  0x00000001021081fd: leaveq
  0x00000001021081fe: cmpq   $0x0,0x8(%r15)
  0x0000000102108206: jne    0x000000010210820d
  0x000000010210820c: retq
  0x000000010210820d: jmpq   Stub::forward exception  ;   {runtime_call}
  0x0000000102108212: mov    %rsp,%r12
  0x0000000102108215: sub    $0x0,%rsp
  0x0000000102108219: and    $0xfffffffffffffff0,%rsp
  0x000000010210821d: callq  0x0000000100c2c260  ;   {runtime_call}
  0x0000000102108222: mov    %r12,%rsp
  0x0000000102108225: xor    %r12,%r12
  0x0000000102108228: jmpq   0x0000000102108190
  0x000000010210822d: hlt
  0x000000010210822e: hlt
  0x000000010210822f: hlt
[Loaded sun.usagetracker.UsageTrackerClient$3 from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
Decoding compiled method 0x0000000102108250:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000115e6fe48} 'charAt' '(I)C' in 'java/lang/String'
  # this:     rsi:rsi   = 'java/lang/String'
  # parm0:    rdx       = int
  #           [sp+0x50]  (sp of caller)
  0x00000001021083e0: mov    0x8(%rsi),%r10d
  0x00000001021083e4: shl    $0x3,%r10
  0x00000001021083e8: cmp    %rax,%r10
  0x00000001021083eb: jne    0x0000000102045e20  ;   {runtime_call}
  0x00000001021083f1: data32 data32 nopw 0x0(%rax,%rax,1)
  0x00000001021083fc: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x0000000102108400: mov    %eax,-0x14000(%rsp)
  0x0000000102108407: push   %rbp
  0x0000000102108408: sub    $0x40,%rsp
  0x000000010210840c: [Loaded java.io.FileOutputStream$1 from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
movabs $0x115ff5b08,%rax                        ;   {metadata(method data for {method} {0x0000000115e6fe48} 'charAt' '(I)C' in 'java/lang/String')}
  0x0000000102108416: mov    0xdc(%rax),%edi
  0x000000010210841c: add    $0x8,%edi
  0x000000010210841f: mov    %edi,0xdc(%rax)
  0x0000000102108425: movabs $0x115e6fe48,%rax  ;   {metadata({method} {0x0000000115e6fe48} 'charAt' '(I)C' in 'java/lang/String')}
  0x000000010210842f: and    $0x1ff8,%edi
  0x0000000102108435: cmp    $0x0,%edi
  0x0000000102108438: je     0x0000000102108531  ;*iload_1
                                                ; - java.lang.String::charAt@0 (line 657)

  0x000000010210843e: cmp    $0x0,%edx
  0x0000000102108441: movabs $0x115ff5b08,%rax  ;   {metadata(method data for {method} {0x0000000115e6fe48} 'charAt' '(I)C' in 'java/lang/String')}
  0x000000010210844b: movabs $0x108,%rdi
  0x0000000102108455: jl     0x0000000102108465
  0x000000010210845b: movabs $0x118,%rdi
  0x0000000102108465: mov    (%rax,%rdi,1),%rbx
  0x0000000102108469: lea    0x1(%rbx),%rbx
  0x000000010210846d: mov    %rbx,(%rax,%rdi,1)
  0x0000000102108471: jl     0x00000001021084d3  ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)

  0x0000000102108477: mov    0xc(%rsi),%eax
  0x000000010210847a: shl    $0x3,%rax          ;*getfield value
                                                ; - java.lang.String::charAt@6 (line 657)

  0x000000010210847e: mov    0xc(%rax),%edi     ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ; implicit exception: dispatches to 0x0000000102108548
  0x0000000102108481: cmp    %edi,%edx
  0x0000000102108483: movabs $0x115ff5b08,%rdi  ;   {metadata(method data for {method} {0x0000000115e6fe48} 'charAt' '(I)C' in 'java/lang/String')}
  0x000000010210848d: movabs $0x128,%rbx
  0x0000000102108497: jl     0x00000001021084a7
  0x000000010210849d: movabs $0x138,%rbx
  0x00000001021084a7: mov    (%rdi,%rbx,1),%rcx
  0x00000001021084ab: lea    0x1(%rcx),%rcx
  0x00000001021084af: mov    %rcx,(%rdi,%rbx,1)
  0x00000001021084b3: jge    0x00000001021084d3  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)

  0x00000001021084b9: movslq %edx,%rdx
  0x00000001021084bc: movzwl 0x10(%rax,%rdx,2),%eax  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)

  0x00000001021084c1: and    $0xffff,%eax
  0x00000001021084c7: add    $0x40,%rsp
  0x00000001021084cb: pop    %rbp
  0x00000001021084cc: test   %eax,-0x9dc3d2(%rip)        # 0x000000010172c100
                                                ;   {poll_return}
  0x00000001021084d2: retq                      ;*ireturn
                                                ; - java.lang.String::charAt@28 (line 660)

  0x00000001021084d3: mov    %rsi,0x28(%rsp)
  0x00000001021084d8: mov    %rdx,%rdi
  0x00000001021084db: nopl   0x0(%rax,%rax,1)
  0x00000001021084e0: jmpq   0x000000010210855c  ;   {no_reloc}
  0x00000001021084e5: add    %al,(%rax)
  0x00000001021084e7: add    %al,(%rax)
  0x00000001021084e9: add    %ch,%cl
  0x00000001021084eb: ja     0x00000001021084ed
  0x00000001021084ed: add    %al,(%rax)         ;*new  ; - java.lang.String::charAt@13 (line 658)

  0x00000001021084ef: mov    %rax,%rdx
  0x00000001021084f2: movabs $0x115ff5b08,%rbx  ;   {metadata(method data for {method} {0x0000000115e6fe48} 'charAt' '(I)C' in 'java/lang/String')}
  0x00000001021084fc: addq   $0x1,0x148(%rbx)
  0x0000000102108504: mov    %rdi,%rdx
  0x0000000102108507: mov    %rax,%rsi          ;*invokespecial <init>
                                                ; - java.lang.String::charAt@18 (line 658)

  0x000000010210850a: mov    %edi,0x30(%rsp)
  0x000000010210850e: mov    %rax,0x20(%rsp)
  0x0000000102108513: nop
  0x0000000102108514: nop
  0x0000000102108515: nop
  0x0000000102108516: nop
  0x0000000102108517: callq  0x0000000102046020  ; OopMap{[40]=Oop [32]=Oop off=316}
                                                ;*invokespecial <init>
                                                ; - java.lang.String::charAt@18 (line 658)
                                                ;   {optimized virtual_call}
  0x000000010210851c: mov    0x20(%rsp),%rax    ; OopMap{[40]=Oop rax=Oop off=321}
                                                ;*athrow
                                                ; - java.lang.String::charAt@21 (line 658)

  0x0000000102108521: movabs $0x102108521,%rdx  ;   {section_word}
  0x000000010210852b: callq  0x000000010206bfa0  ;   {runtime_call}
  0x0000000102108530: nop
  0x0000000102108531: mov    %rax,0x8(%rsp)
  0x0000000102108536: movq   $0xffffffffffffffff,(%rsp)
  0x000000010210853e: callq  0x00000001020fe020  ; OopMap{rsi=Oop off=355}
                                                ;*synchronization entry
                                                ; - java.lang.String::charAt@-1 (line 657)
                                                ;   {runtime_call}
  0x0000000102108543: jmpq   0x000000010210843e
  0x0000000102108548: callq  0x000000010206db40  ; OopMap{rsi=Oop rax=Oop off=365}
                                                ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ;   {runtime_call}
  0x000000010210854d: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x0000000102108557: mov    $0xa050f00,%eax
  0x000000010210855c: callq  0x00000001020fd020  ; OopMap{[40]=Oop off=385}
                                                ;*new  ; - java.lang.String::charAt@13 (line 658)
                                                ;   {runtime_call}
  0x0000000102108561: jmpq   0x00000001021084e0
  0x0000000102108566: mov    %rdx,%rdx
  0x0000000102108569: callq  0x000000010206d620  ; OopMap{[40]=Oop off=398}
                                                ;*new  ; - java.lang.String::charAt@13 (line 658)
                                                ;   {runtime_call}
  0x000000010210856e: jmpq   0x00000001021084ef
  0x0000000102108573: nop
  0x0000000102108574: nop
  0x0000000102108575: mov    0x2a8(%r15),%rax
  0x000000010210857c: movabs $0x0,%r10
  0x0000000102108586: mov    %r10,0x2a8(%r15)
  0x000000010210858d: movabs $0x0,%r10
  0x0000000102108597: mov    %r10,0x2b0(%r15)
  0x000000010210859e: add    $0x40,%rsp
  0x00000001021085a2: pop    %rbp
  0x00000001021085a3: jmpq   0x000000010206e6a0  ;   {runtime_call}
  0x00000001021085a8: hlt
  0x00000001021085a9: hlt
  0x00000001021085aa: hlt
  0x00000001021085ab: hlt
  0x00000001021085ac: hlt
  0x00000001021085ad: hlt
  0x00000001021085ae: hlt
  0x00000001021085af: hlt
  0x00000001021085b0: hlt
  0x00000001021085b1: hlt
  0x00000001021085b2: hlt
  0x00000001021085b3: hlt
  0x00000001021085b4: hlt
  0x00000001021085b5: hlt
  0x00000001021085b6: hlt
  0x00000001021085b7: hlt
  0x00000001021085b8: hlt
  0x00000001021085b9: hlt
  0x00000001021085ba: hlt
  0x00000001021085bb: hlt
  0x00000001021085bc: hlt
  0x00000001021085bd: hlt
  0x00000001021085be: hlt
  0x00000001021085bf: hlt
[Stub Code]
  0x00000001021085c0: nop                       ;   {no_reloc}
  0x00000001021085c1: nop
  0x00000001021085c2: nop
  0x00000001021085c3: nop
  0x00000001021085c4: nop
  0x00000001021085c5: movabs $0x0,%rbx          ;   {static_stub}
  0x00000001021085cf: jmpq   0x00000001021085cf  ;   {runtime_call}
[Exception Handler]
  0x00000001021085d4: callq  0x00000001020fb9a0  ;   {runtime_call}
  0x00000001021085d9: mov    %rsp,-0x28(%rsp)
  0x00000001021085de: sub    $0x80,%rsp
  0x00000001021085e5: mov    %rax,0x78(%rsp)
  0x00000001021085ea: mov    %rcx,0x70(%rsp)
  0x00000001021085ef: mov    %rdx,0x68(%rsp)
  0x00000001021085f4: mov    %rbx,0x60(%rsp)
  0x00000001021085f9: mov    %rbp,0x50(%rsp)
  0x00000001021085fe: mov    %rsi,0x48(%rsp)
  0x0000000102108603: mov    %rdi,0x40(%rsp)
  0x0000000102108608: mov    %r8,0x38(%rsp)
  0x000000010210860d: mov    %r9,0x30(%rsp)
  0x0000000102108612: mov    %r10,0x28(%rsp)
  0x0000000102108617: mov    %r11,0x20(%rsp)
  0x000000010210861c: mov    %r12,0x18(%rsp)
  0x0000000102108621: mov    %r13,0x10(%rsp)
  0x0000000102108626: mov    %r14,0x8(%rsp)
  0x000000010210862b: mov    %r15,(%rsp)
  0x000000010210862f: movabs $0x100d1ee90,%rdi  ;   {external_word}
  0x0000000102108639: movabs $0x1021085d9,%rsi  ;   {internal_word}
  0x0000000102108643: mov    %rsp,%rdx
  0x0000000102108646: and    $0xfffffffffffffff0,%rsp
  0x000000010210864a: callq  0x0000000100b4a196  ;   {runtime_call}
  0x000000010210864f: hlt
[Deopt Handler Code]
  0x0000000102108650: movabs $0x102108650,%r10  ;   {section_word}
  0x000000010210865a: push   %r10
  0x000000010210865c: jmpq   0x00000001020473c0  ;   {runtime_call}
  0x0000000102108661: hlt
  0x0000000102108662: hlt
  0x0000000102108663: hlt
  0x0000000102108664: hlt
  0x0000000102108665: hlt
  0x0000000102108666: hlt
  0x0000000102108667: hlt
[Loaded sun.launcher.LauncherHelper from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
Decoding compiled method 0x0000000102108850:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000115e6f238} '<init>' '([CII)V' in 'java/lang/String'
  # this:     rsi:rsi   = 'java/lang/String'
  # parm0:    rdx:rdx   = '[C'
  # parm1:    rcx       = int
  # parm2:    r8        = int
  #           [sp+0x80]  (sp of caller)
  0x0000000102108a40: mov    0x8(%rsi),%r10d
  0x0000000102108a44: shl    $0x3,%r10
  0x0000000102108a48: cmp    %rax,%r10
  0x0000000102108a4b: jne    0x0000000102045e20  ;   {runtime_call}
  0x0000000102108a51: data32 data32 nopw 0x0(%rax,%rax,1)
  0x0000000102108a5c: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x0000000102108a60: mov    %eax,-0x14000(%rsp)
  0x0000000102108a67: push   %rbp
  0x0000000102108a68: sub    $0x70,%rsp
  0x0000000102108a6c: mov    %rsi,0x38(%rsp)
  0x0000000102108a71: mov    %rdx,0x48(%rsp)
  0x0000000102108a76: mov    %ecx,0x44(%rsp)
  0x0000000102108a7a: mov    %r8d,0x40(%rsp)
  0x0000000102108a7f: movabs $0x116061748,%rdi  ;   {metadata(method data for {method} {0x0000000115e6f238} '<init>' '([CII)V' in 'java/lang/String')}
  0x0000000102108a89: mov    0xdc(%rdi),%ebx
  0x0000000102108a8f: add    $0x8,%ebx
  0x0000000102108a92: mov    %ebx,0xdc(%rdi)
  0x0000000102108a98: movabs $0x115e6f238,%rdi  ;   {metadata({method} {0x0000000115e6f238} '<init>' '([CII)V' in 'java/lang/String')}
  0x0000000102108aa2: and    $0x1ff8,%ebx
  0x0000000102108aa8: cmp    $0x0,%ebx
  0x0000000102108aab: je     0x0000000102108db1  ;*aload_0
                                                ; - java.lang.String::<init>@0 (line 190)

  0x0000000102108ab1: mov    %rsi,%rdi
  0x0000000102108ab4: movabs $0x116061748,%rbx  ;   {metadata(method data for {method} {0x0000000115e6f238} '<init>' '([CII)V' in 'java/lang/String')}
  0x0000000102108abe: addq   $0x1,0x108(%rbx)
  0x0000000102108ac6: movabs $0x115fe7460,%rdi  ;   {metadata(method data for {method} {0x0000000115e6c480} '<init>' '()V' in 'java/lang/Object')}
  0x0000000102108ad0: mov    0xdc(%rdi),%ebx
  0x0000000102108ad6: add    $0x8,%ebx
  0x0000000102108ad9: mov    %ebx,0xdc(%rdi)
  0x0000000102108adf: movabs $0x115e6c480,%rdi  ;   {metadata({method} {0x0000000115e6c480} '<init>' '()V' in 'java/lang/Object')}
  0x0000000102108ae9: and    $0x7ffff8,%ebx
  0x0000000102108aef: cmp    $0x0,%ebx
  0x0000000102108af2: je     0x0000000102108dc8
  0x0000000102108af8: cmp    $0x0,%ecx
  0x0000000102108afb: movabs $0x116061748,%rdi  ;   {metadata(method data for {method} {0x0000000115e6f238} '<init>' '([CII)V' in 'java/lang/String')}
  0x0000000102108b05: movabs $0x118,%rbx
  0x0000000102108b0f: jge    0x0000000102108b1f
  0x0000000102108b15: movabs $0x128,%rbx
  0x0000000102108b1f: mov    (%rdi,%rbx,1),%rax
  0x0000000102108b23: lea    0x1(%rax),%rax
  0x0000000102108b27: mov    %rax,(%rdi,%rbx,1)
  0x0000000102108b2b: jl     0x0000000102108d61  ;*ifge
                                                ; - java.lang.String::<init>@5 (line 191)

  0x0000000102108b31: cmp    $0x0,%r8d
  0x0000000102108b35: movabs $0x116061748,%rdi  ;   {metadata(method data for {method} {0x0000000115e6f238} '<init>' '([CII)V' in 'java/lang/String')}
  0x0000000102108b3f: movabs $0x148,%rbx
  0x0000000102108b49: jg     0x0000000102108b59
  0x0000000102108b4f: movabs $0x158,%rbx
  0x0000000102108b59: mov    (%rdi,%rbx,1),%rax
  0x0000000102108b5d: lea    0x1(%rax),%rax
  0x0000000102108b61: mov    %rax,(%rdi,%rbx,1)
  0x0000000102108b65: jg     0x0000000102108be0  ;*ifgt
                                                ; - java.lang.String::<init>@18 (line 194)

  0x0000000102108b6b: cmp    $0x0,%r8d
  0x0000000102108b6f: movabs $0x116061748,%rdi  ;   {metadata(method data for {method} {0x0000000115e6f238} '<init>' '([CII)V' in 'java/lang/String')}
  0x0000000102108b79: movabs $0x168,%rbx
  0x0000000102108b83: jge    0x0000000102108b93
  0x0000000102108b89: movabs $0x178,%rbx
  0x0000000102108b93: mov    (%rdi,%rbx,1),%rax
  0x0000000102108b97: lea    0x1(%rax),%rax
  0x0000000102108b9b: mov    %rax,(%rdi,%rbx,1)
  0x0000000102108b9f: jl     0x0000000102108d09  ;*ifge
                                                ; - java.lang.String::<init>@22 (line 195)

  0x0000000102108ba5: mov    0xc(%rdx),%edi     ;*arraylength
                                                ; - java.lang.String::<init>@36 (line 198)
                                                ; implicit exception: dispatches to 0x0000000102108ddf
  0x0000000102108ba8: cmp    %edi,%ecx
  0x0000000102108baa: movabs $0x116061748,%rdi  ;   {metadata(method data for {method} {0x0000000115e6f238} '<init>' '([CII)V' in 'java/lang/String')}
  0x0000000102108bb4: movabs $0x198,%rbx
  0x0000000102108bbe: jg     0x0000000102108bce
  0x0000000102108bc4: movabs $0x1a8,%rbx
  0x0000000102108bce: mov    (%rdi,%rbx,1),%rax
  0x0000000102108bd2: lea    0x1(%rax),%rax
  0x0000000102108bd6: mov    %rax,(%rdi,%rbx,1)
  0x0000000102108bda: jle    0x0000000102108c72  ;*if_icmpgt
                                                ; - java.lang.String::<init>@37 (line 198)

  0x0000000102108be0: mov    0xc(%rdx),%edi     ;*arraylength
                                                ; - java.lang.String::<init>@52 (line 204)
                                                ; implicit exception: dispatches to 0x0000000102108de4
  0x0000000102108be3: sub    %r8d,%edi
  0x0000000102108be6: cmp    %edi,%ecx
  0x0000000102108be8: movabs $0x116061748,%rdi  ;   {metadata(method data for {method} {0x0000000115e6f238} '<init>' '([CII)V' in 'java/lang/String')}
  0x0000000102108bf2: movabs $0x1b8,%rbx
  0x0000000102108bfc: jle    0x0000000102108c0c
  0x0000000102108c02: movabs $0x1c8,%rbx
  0x0000000102108c0c: mov    (%rdi,%rbx,1),%rax
  0x0000000102108c10: lea    0x1(%rax),%rax
  0x0000000102108c14: mov    %rax,(%rdi,%rbx,1)
  0x0000000102108c18: jg     0x0000000102108cac  ;*if_icmple
                                                ; - java.lang.String::<init>@55 (line 204)

  0x0000000102108c1e: movabs $0x116061748,%rdi  ;   {metadata(method data for {method} {0x0000000115e6f238} '<init>' '([CII)V' in 'java/lang/String')}
  0x0000000102108c28: addq   $0x1,0x1e8(%rdi)
  0x0000000102108c30: mov    %r8,%rdi
  0x0000000102108c33: add    %ecx,%edi
  0x0000000102108c35: mov    %rdx,%rsi
  0x0000000102108c38: mov    %rcx,%rdx
  0x0000000102108c3b: mov    %rdi,%rcx          ;*invokestatic copyOfRange
                                                ; - java.lang.String::<init>@75 (line 207)

  0x0000000102108c3e: nop
  0x0000000102108c3f: callq  0x0000000102046420  ; OopMap{[56]=Oop [72]=Oop off=516}
                                                ;*invokestatic copyOfRange
                                                ; - java.lang.String::<init>@75 (line 207)
                                                ;   {static_call}
  0x0000000102108c44: mov    0x38(%rsp),%rsi
  0x0000000102108c49: mov    %rax,%r10
  0x0000000102108c4c: shr    $0x3,%r10
  0x0000000102108c50: mov    %r10d,0xc(%rsi)
  0x0000000102108c54: shr    $0x9,%rsi
  0x0000000102108c58: movabs $0x10d9c0000,%rdx
  0x0000000102108c62: movb   $0x0,(%rsi,%rdx,1)  ;*putfield value
                                                ; - java.lang.String::<init>@78 (line 207)

  0x0000000102108c66: add    $0x70,%rsp
  0x0000000102108c6a: pop    %rbp
  0x0000000102108c6b: test   %eax,-0x9dcb71(%rip)        # 0x000000010172c100
                                                ;   {poll_return}
  0x0000000102108c71: retq                      ;*return
                                                ; - java.lang.String::<init>@81 (line 208)

  0x0000000102108c72: movabs $0x79558a678,%rdx  ;   {oop("")}
  0x0000000102108c7c: mov    0xc(%rdx),%edx     ; implicit exception: dispatches to 0x0000000102108de9
  0x0000000102108c7f: shl    $0x3,%rdx          ;*getfield value
                                                ; - java.lang.String::<init>@43 (line 199)

  0x0000000102108c83: mov    %rdx,%r10
  0x0000000102108c86: shr    $0x3,%r10
  0x0000000102108c8a: mov    %r10d,0xc(%rsi)
  0x0000000102108c8e: shr    $0x9,%rsi
  0x0000000102108c92: movabs $0x10d9c0000,%rdx
  0x0000000102108c9c: movb   $0x0,(%rsi,%rdx,1)  ;*putfield value
                                                ; - java.lang.String::<init>@46 (line 199)

  0x0000000102108ca0: add    $0x70,%rsp
  0x0000000102108ca4: pop    %rbp
  0x0000000102108ca5: test   %eax,-0x9dcbab(%rip)        # 0x000000010172c100
                                                ;   {poll_return}
  0x0000000102108cab: retq                      ;*return
                                                ; - java.lang.String::<init>@49 (line 200)

  0x0000000102108cac: nopl   0x0(%rax)
  0x0000000102108cb0: jmpq   0x0000000102108dfd  ;   {no_reloc}
  0x0000000102108cb5: add    %al,(%rax)
  0x0000000102108cb7: add    %al,(%rax)
  0x0000000102108cb9: add    %ch,%cl
  0x0000000102108cbb: add    %rax,(%rax)
  0x0000000102108cbe: add    %cl,-0x75(%rax)    ;*new  ; - java.lang.String::<init>@58 (line 205)

  0x0000000102108cc1: rorb   -0x41(%rax)        ;   {metadata(method data for {method} {0x0000000115e6f238} '<init>' '([CII)V' in 'java/lang/String')}
  0x0000000102108cc4: rex.W (bad)
  0x0000000102108cc6: (bad)
  0x0000000102108cc7: (bad)
  0x0000000102108cc8: add    %eax,(%rax)
  0x0000000102108cca: add    %al,(%rax)
  0x0000000102108ccc: addq   $0x1,0x1d8(%rdi)
  0x0000000102108cd4: mov    0x40(%rsp),%r8d
  0x0000000102108cd9: add    0x44(%rsp),%r8d
  0x0000000102108cde: mov    %r8,%rdx
  0x0000000102108ce1: mov    %rax,%rsi          ;*invokespecial <init>
                                                ; - java.lang.String::<init>@65 (line 205)

  0x0000000102108ce4: mov    %rax,0x50(%rsp)
  0x0000000102108ce9: nop
  0x0000000102108cea: nop
  0x0000000102108ceb: nop
  0x0000000102108cec: nop
  0x0000000102108ced: nop
  0x0000000102108cee: nop
  0x0000000102108cef: callq  0x0000000102046020  ; OopMap{[72]=Oop [56]=Oop [80]=Oop off=692}
                                                ;*invokespecial <init>
                                                ; - java.lang.String::<init>@65 (line 205)
                                                ;   {optimized virtual_call}
  0x0000000102108cf4: mov    0x50(%rsp),%rax    ; OopMap{[72]=Oop [56]=Oop rax=Oop off=697}
                                                ;*athrow
                                                ; - java.lang.String::<init>@68 (line 205)

  0x0000000102108cf9: movabs $0x102108cf9,%rdx  ;   {section_word}
  0x0000000102108d03: callq  0x000000010206bfa0  ;   {runtime_call}
  0x0000000102108d08: nop                       ;*athrow
                                                ; - java.lang.String::<init>@68 (line 205)

  0x0000000102108d09: nopl   0x0(%rax)
  0x0000000102108d10: jmpq   0x0000000102108e23  ;   {no_reloc}
  0x0000000102108d15: add    %al,(%rax)
  0x0000000102108d17: add    %al,(%rax)
  0x0000000102108d19: add    %ch,%cl
  0x0000000102108d1b: (bad)
  0x0000000102108d1c: add    %eax,(%rax)
  0x0000000102108d1e: add    %cl,-0x75(%rax)    ;*new  ; - java.lang.String::<init>@25 (line 196)

  0x0000000102108d21: rorb   -0x42(%rax)        ;   {metadata(method data for {method} {0x0000000115e6f238} '<init>' '([CII)V' in 'java/lang/String')}
  0x0000000102108d24: rex.W (bad)
  0x0000000102108d26: (bad)
  0x0000000102108d27: (bad)
  0x0000000102108d28: add    %eax,(%rax)
  0x0000000102108d2a: add    %al,(%rax)
  0x0000000102108d2c: addq   $0x1,0x188(%rsi)
  0x0000000102108d34: mov    0x40(%rsp),%edx
  0x0000000102108d38: mov    %rax,%rsi          ;*invokespecial <init>
                                                ; - java.lang.String::<init>@30 (line 196)

  0x0000000102108d3b: mov    %rax,0x58(%rsp)
  0x0000000102108d40: nop
  0x0000000102108d41: nop
  0x0000000102108d42: nop
  0x0000000102108d43: nop
  0x0000000102108d44: nop
  0x0000000102108d45: nop
  0x0000000102108d46: nop
  0x0000000102108d47: callq  0x0000000102046020  ; OopMap{[56]=Oop [72]=Oop [88]=Oop off=780}
                                                ;*invokespecial <init>
                                                ; - java.lang.String::<init>@30 (line 196)
                                                ;   {optimized virtual_call}
  0x0000000102108d4c: mov    0x58(%rsp),%rax    ; OopMap{[56]=Oop [72]=Oop rax=Oop off=785}
                                                ;*athrow
                                                ; - java.lang.String::<init>@33 (line 196)

  0x0000000102108d51: movabs $0x102108d51,%rdx  ;   {section_word}
  0x0000000102108d5b: callq  0x000000010206bfa0  ;   {runtime_call}
  0x0000000102108d60: nop                       ;*athrow
                                                ; - java.lang.String::<init>@33 (line 196)

  0x0000000102108d61: nopl   0x0(%rax)
  0x0000000102108d68: jmpq   0x0000000102108e49  ;   {no_reloc}
  0x0000000102108d6d: add    %al,(%rax)
  0x0000000102108d6f: add    %al,(%rax)
  0x0000000102108d71: add    %ch,%cl
  0x0000000102108d73: faddl  (%rax)
  0x0000000102108d75: add    %al,(%rax)         ;*new  ; - java.lang.String::<init>@8 (line 192)

  0x0000000102108d77: mov    %rax,%rdx
  0x0000000102108d7a: movabs $0x116061748,%rbx  ;   {metadata(method data for {method} {0x0000000115e6f238} '<init>' '([CII)V' in 'java/lang/String')}
  0x0000000102108d84: addq   $0x1,0x138(%rbx)
  0x0000000102108d8c: mov    %rcx,%rdx
  0x0000000102108d8f: mov    %rax,%rsi          ;*invokespecial <init>
                                                ; - java.lang.String::<init>@13 (line 192)

  0x0000000102108d92: mov    %rax,0x60(%rsp)
  0x0000000102108d97: callq  0x0000000102046020  ; OopMap{[56]=Oop [96]=Oop [72]=Oop off=860}
                                                ;*invokespecial <init>
                                                ; - java.lang.String::<init>@13 (line 192)
                                                ;   {optimized virtual_call}
  0x0000000102108d9c: mov    0x60(%rsp),%rax    ; OopMap{[56]=Oop [72]=Oop rax=Oop off=865}
                                                ;*athrow
                                                ; - java.lang.String::<init>@16 (line 192)

  0x0000000102108da1: movabs $0x102108da1,%rdx  ;   {section_word}
  0x0000000102108dab: callq  0x000000010206bfa0  ;   {runtime_call}
  0x0000000102108db0: nop
  0x0000000102108db1: mov    %rdi,0x8(%rsp)
  0x0000000102108db6: movq   $0xffffffffffffffff,(%rsp)
  0x0000000102108dbe: callq  0x00000001020fe020  ; OopMap{rsi=Oop [56]=Oop rdx=Oop [72]=Oop off=899}
                                                ;*synchronization entry
                                                ; - java.lang.String::<init>@-1 (line 190)
                                                ;   {runtime_call}
  0x0000000102108dc3: jmpq   0x0000000102108ab1
  0x0000000102108dc8: mov    %rdi,0x8(%rsp)
  0x0000000102108dcd: movq   $0xffffffffffffffff,(%rsp)
  0x0000000102108dd5: callq  0x00000001020fe020  ; OopMap{rsi=Oop [56]=Oop rdx=Oop [72]=Oop off=922}
                                                ;*synchronization entry
                                                ; - java.lang.Object::<init>@-1 (line 37)
                                                ; - java.lang.String::<init>@1 (line 190)
                                                ;   {runtime_call}
  0x0000000102108dda: jmpq   0x0000000102108af8
  0x0000000102108ddf: callq  0x000000010206db40  ; OopMap{rsi=Oop [56]=Oop rdx=Oop [72]=Oop off=932}
                                                ;*arraylength
                                                ; - java.lang.String::<init>@36 (line 198)
                                                ;   {runtime_call}
  0x0000000102108de4: callq  0x000000010206db40  ; OopMap{rsi=Oop [56]=Oop rdx=Oop [72]=Oop off=937}
                                                ;*arraylength
                                                ; - java.lang.String::<init>@52 (line 204)
                                                ;   {runtime_call}
  0x0000000102108de9: callq  0x000000010206db40  ; OopMap{[72]=Oop rsi=Oop [56]=Oop off=942}
                                                ;*getfield value
                                                ; - java.lang.String::<init>@43 (line 199)
                                                ;   {runtime_call}
  0x0000000102108dee: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x0000000102108df8: mov    $0xa050f00,%eax
  0x0000000102108dfd: callq  0x00000001020fd020  ; OopMap{[56]=Oop [72]=Oop off=962}
                                                ;*new  ; - java.lang.String::<init>@58 (line 205)
                                                ;   {runtime_call}
  0x0000000102108e02: jmpq   0x0000000102108cb0
  0x0000000102108e07: mov    %rdx,%rdx
  0x0000000102108e0a: callq  0x000000010206d620  ; OopMap{[56]=Oop [72]=Oop off=975}
                                                ;*new  ; - java.lang.String::<init>@58 (line 205)
                                                ;   {runtime_call}
  0x0000000102108e0f: jmpq   0x0000000102108cbf
  0x0000000102108e14: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x0000000102108e1e: mov    $0xa050f00,%eax
  0x0000000102108e23: callq  0x00000001020fd020  ; OopMap{[56]=Oop [72]=Oop off=1000}
                                                ;*new  ; - java.lang.String::<init>@25 (line 196)
                                                ;   {runtime_call}
  0x0000000102108e28: jmpq   0x0000000102108d10
  0x0000000102108e2d: mov    %rdx,%rdx
  0x0000000102108e30: callq  0x000000010206d620  ; OopMap{[56]=Oop [72]=Oop off=1013}
                                                ;*new  ; - java.lang.String::<init>@25 (line 196)
                                                ;   {runtime_call}
  0x0000000102108e35: jmpq   0x0000000102108d1f
  0x0000000102108e3a: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x0000000102108e44: mov    $0xa050f00,%eax
  0x0000000102108e49: callq  0x00000001020fd020  ; OopMap{[56]=Oop [72]=Oop off=1038}
                                                ;*new  ; - java.lang.String::<init>@8 (line 192)
                                                ;   {runtime_call}
  0x0000000102108e4e: jmpq   0x0000000102108d68
  0x0000000102108e53: mov    %rdx,%rdx
  0x0000000102108e56: callq  0x000000010206d620  ; OopMap{[56]=Oop [72]=Oop off=1051}
                                                ;*new  ; - java.lang.String::<init>@8 (line 192)
                                                ;   {runtime_call}
  0x0000000102108e5b: jmpq   0x0000000102108d77
  0x0000000102108e60: nop
  0x0000000102108e61: nop
  0x0000000102108e62: mov    0x2a8(%r15),%rax
  0x0000000102108e69: movabs $0x0,%r10
  0x0000000102108e73: mov    %r10,0x2a8(%r15)
  0x0000000102108e7a: movabs $0x0,%r10
  0x0000000102108e84: mov    %r10,0x2b0(%r15)
  0x0000000102108e8b: add    $0x70,%rsp
  0x0000000102108e8f: pop    %rbp
  0x0000000102108e90: jmpq   0x000000010206e6a0  ;   {runtime_call}
  0x0000000102108e95: hlt
  0x0000000102108e96: hlt
  0x0000000102108e97: hlt
  0x0000000102108e98: hlt
  0x0000000102108e99: hlt
  0x0000000102108e9a: hlt
  0x0000000102108e9b: hlt
  0x0000000102108e9c: hlt
  0x0000000102108e9d: hlt
  0x0000000102108e9e: hlt
  0x0000000102108e9f: hlt
[Stub Code]
  0x0000000102108ea0: nop                       ;   {no_reloc}
  0x0000000102108ea1: nop
  0x0000000102108ea2: nop
  0x0000000102108ea3: nop
  0x0000000102108ea4: nop
  0x0000000102108ea5: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000102108eaf: jmpq   0x0000000102108eaf  ;   {runtime_call}
  0x0000000102108eb4: nop
  0x0000000102108eb5: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000102108ebf: jmpq   0x0000000102108ebf  ;   {runtime_call}
  0x0000000102108ec4: nop
  0x0000000102108ec5: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000102108ecf: jmpq   0x0000000102108ecf  ;   {runtime_call}
  0x0000000102108ed4: nop
  0x0000000102108ed5: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000102108edf: jmpq   0x0000000102108edf  ;   {runtime_call}
[Exception Handler]
  0x0000000102108ee4: callq  0x00000001020fb9a0  ;   {runtime_call}
  0x0000000102108ee9: mov    %rsp,-0x28(%rsp)
  0x0000000102108eee: sub    $0x80,%rsp
  0x0000000102108ef5: mov    %rax,0x78(%rsp)
  0x0000000102108efa: mov    %rcx,0x70(%rsp)
  0x0000000102108eff: mov    %rdx,0x68(%rsp)
  0x0000000102108f04: mov    %rbx,0x60(%rsp)
  0x0000000102108f09: mov    %rbp,0x50(%rsp)
  0x0000000102108f0e: mov    %rsi,0x48(%rsp)
  0x0000000102108f13: mov    %rdi,0x40(%rsp)
  0x0000000102108f18: mov    %r8,0x38(%rsp)
  0x0000000102108f1d: mov    %r9,0x30(%rsp)
  0x0000000102108f22: mov    %r10,0x28(%rsp)
  0x0000000102108f27: mov    %r11,0x20(%rsp)
  0x0000000102108f2c: mov    %r12,0x18(%rsp)
  0x0000000102108f31: mov    %r13,0x10(%rsp)
  0x0000000102108f36: mov    %r14,0x8(%rsp)
  0x0000000102108f3b: mov    %r15,(%rsp)
  0x0000000102108f3f: movabs $0x100d1ee90,%rdi  ;   {external_word}
  0x0000000102108f49: movabs $0x102108ee9,%rsi  ;   {internal_word}
  0x0000000102108f53: mov    %rsp,%rdx
  0x0000000102108f56: and    $0xfffffffffffffff0,%rsp
  0x0000000102108f5a: callq  0x0000000100b4a196  ;   {runtime_call}
  0x0000000102108f5f: hlt
[Deopt Handler Code]
  0x0000000102108f60: movabs $0x102108f60,%r10  ;   {section_word}
  0x0000000102108f6a: push   %r10
  0x0000000102108f6c: jmpq   0x00000001020473c0  ;   {runtime_call}
  0x0000000102108f71: hlt
  0x0000000102108f72: hlt
  0x0000000102108f73: hlt
  0x0000000102108f74: hlt
  0x0000000102108f75: hlt
  0x0000000102108f76: hlt
  0x0000000102108f77: hlt
Decoding compiled method 0x00000001021097d0:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x0000000115f8a4f8} 'copyOfRange' '([CII)[C' in 'java/util/Arrays'
  # parm0:    rsi:rsi   = '[C'
  # parm1:    rdx       = int
  # parm2:    rcx       = int
  #           [sp+0xc0]  (sp of caller)
  0x0000000102109a00: mov    %eax,-0x14000(%rsp)
  0x0000000102109a07: push   %rbp
  0x0000000102109a08: sub    $0xb0,%rsp
  0x0000000102109a0f: mov    %rsi,0x88(%rsp)
  0x0000000102109a17: mov    %edx,0x78(%rsp)
  0x0000000102109a1b: mov    %ecx,0x7c(%rsp)
  0x0000000102109a1f: movabs $0x116061a18,%rbx  ;   {metadata(method data for {method} {0x0000000115f8a4f8} 'copyOfRange' '([CII)[C' in 'java/util/Arrays')}
  0x0000000102109a29: mov    0xdc(%rbx),%edi
  0x0000000102109a2f: add    $0x8,%edi
  0x0000000102109a32: mov    %edi,0xdc(%rbx)
  0x0000000102109a38: movabs $0x115f8a4f8,%rbx  ;   {metadata({method} {0x0000000115f8a4f8} 'copyOfRange' '([CII)[C' in 'java/util/Arrays')}
  0x0000000102109a42: and    $0x1ff8,%edi
  0x0000000102109a48: cmp    $0x0,%edi
  0x0000000102109a4b: je     0x000000010210a2d4  ;*iload_2
                                                ; - java.util.Arrays::copyOfRange@0 (line 3661)

  0x0000000102109a51: mov    %rcx,%r11
  0x0000000102109a54: sub    %edx,%r11d
  0x0000000102109a57: mov    %r11d,0x80(%rsp)
  0x0000000102109a5f: cmp    $0x0,%r11d
  0x0000000102109a63: movabs $0x116061a18,%rbx  ;   {metadata(method data for {method} {0x0000000115f8a4f8} 'copyOfRange' '([CII)[C' in 'java/util/Arrays')}
  0x0000000102109a6d: movabs $0x108,%rdi
  0x0000000102109a77: jge    0x0000000102109a87
  0x0000000102109a7d: movabs $0x118,%rdi
  0x0000000102109a87: mov    (%rbx,%rdi,1),%rax
  0x0000000102109a8b: lea    0x1(%rax),%rax
  0x0000000102109a8f: mov    %rax,(%rbx,%rdi,1)
  0x0000000102109a93: jl     0x0000000102109c5c  ;*ifge
                                                ; - java.util.Arrays::copyOfRange@5 (line 3662)

  0x0000000102109a99: mov    %r11,%rbx
  0x0000000102109a9c: mov    %rdx,%r13
  0x0000000102109a9f: movabs $0x7c0000208,%rdx  ;   {metadata({type array char})}
  0x0000000102109aa9: mov    %rsi,%r14
  0x0000000102109aac: movslq %ebx,%rbx
  0x0000000102109aaf: mov    %rbx,%rdi
  0x0000000102109ab2: cmp    $0xffffff,%rbx
  0x0000000102109ab9: ja     0x000000010210a2eb
  0x0000000102109abf: movabs $0x17,%rsi
  0x0000000102109ac9: lea    (%rsi,%rbx,2),%rsi
  0x0000000102109acd: and    $0xfffffffffffffff8,%rsi
  0x0000000102109ad1: mov    0x60(%r15),%rax
  0x0000000102109ad5: lea    (%rax,%rsi,1),%rsi
  0x0000000102109ad9: cmp    0x70(%r15),%rsi
  0x0000000102109add: ja     0x000000010210a2eb
  0x0000000102109ae3: mov    %rsi,0x60(%r15)
  0x0000000102109ae7: sub    %rax,%rsi
  0x0000000102109aea: movq   $0x1,(%rax)
  0x0000000102109af1: mov    %rdx,%rcx
  0x0000000102109af4: shr    $0x3,%rcx
  0x0000000102109af8: mov    %ecx,0x8(%rax)
  0x0000000102109afb: mov    %ebx,0xc(%rax)
  0x0000000102109afe: sub    $0x10,%rsi
  0x0000000102109b02: je     0x0000000102109b19
  0x0000000102109b08: xor    %rbx,%rbx
[Loaded java.net.URLClassLoader$1 from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
  0x0000000102109b0b: shr    $0x3,%rsi
  0x0000000102109b0f: mov    %rbx,0x8(%rax,%rsi,8)
  0x0000000102109b14: dec    %rsi
  0x0000000102109b17: jne    0x0000000102109b0f  ;*newarray
                                                ; - java.util.Arrays::copyOfRange@40 (line 3664)

  0x0000000102109b19: mov    0xc(%r14),%esi     ;*arraylength
                                                ; - java.util.Arrays::copyOfRange@50 (line 3665)
                                                ; implicit exception: dispatches to 0x000000010210a2f5
  0x0000000102109b1d: sub    %r13d,%esi
  0x0000000102109b20: movabs $0x116061a18,%rdx  ;   {metadata(method data for {method} {0x0000000115f8a4f8} 'copyOfRange' '([CII)[C' in 'java/util/Arrays')}
  0x0000000102109b2a: addq   $0x1,0x208(%rdx)
  0x0000000102109b32: movabs $0x11603afa0,%rdx  ;   {metadata(method data for {method} {0x0000000115f64fd8} 'min' '(II)I' in 'java/lang/Math')}
  0x0000000102109b3c: mov    0xdc(%rdx),%ecx
  0x0000000102109b42: add    $0x8,%ecx
  0x0000000102109b45: mov    %ecx,0xdc(%rdx)
  0x0000000102109b4b: movabs $0x115f64fd8,%rdx  ;   {metadata({method} {0x0000000115f64fd8} 'min' '(II)I' in 'java/lang/Math')}
  0x0000000102109b55: and    $0x7ffff8,%ecx
  0x0000000102109b5b: cmp    $0x0,%ecx
  0x0000000102109b5e: je     0x000000010210a2fa
  0x0000000102109b64: cmp    %r11d,%esi
  0x0000000102109b67: movabs $0x11603afa0,%rdx  ;   {metadata(method data for {method} {0x0000000115f64fd8} 'min' '(II)I' in 'java/lang/Math')}
  0x0000000102109b71: movabs $0x108,%rcx
  0x0000000102109b7b: jg     0x0000000102109b8b
  0x0000000102109b81: movabs $0x118,%rcx
  0x0000000102109b8b: mov    (%rdx,%rcx,1),%r8
  0x0000000102109b8f: lea    0x1(%r8),%r8
  0x0000000102109b93: mov    %r8,(%rdx,%rcx,1)
  0x0000000102109b97: jg     0x0000000102109bb5  ;*if_icmpgt
                                                ; - java.lang.Math::min@2 (line 1336)
                                                ; - java.util.Arrays::copyOfRange@54 (line 3666)

  0x0000000102109b9d: movabs $0x11603afa0,%rdx  ;   {metadata(method data for {method} {0x0000000115f64fd8} 'min' '(II)I' in 'java/lang/Math')}
  0x0000000102109ba7: incl   0x128(%rdx)
  0x0000000102109bad: mov    %rsi,%rdi
  0x0000000102109bb0: jmpq   0x0000000102109bb8  ;*goto
                                                ; - java.lang.Math::min@6 (line 1336)
                                                ; - java.util.Arrays::copyOfRange@54 (line 3666)

  0x0000000102109bb5: mov    %r11,%rdi          ;*ireturn
                                                ; - java.lang.Math::min@10 (line 1336)
                                                ; - java.util.Arrays::copyOfRange@54 (line 3666)

  0x0000000102109bb8: movabs $0x116061a18,%rsi  ;   {metadata(method data for {method} {0x0000000115f8a4f8} 'copyOfRange' '([CII)[C' in 'java/util/Arrays')}
  0x0000000102109bc2: addq   $0x1,0x218(%rsi)
  0x0000000102109bca: mov    %r14,%rsi
  0x0000000102109bcd: mov    %r13,%rdx
  0x0000000102109bd0: mov    %rax,%rcx
  0x0000000102109bd3: mov    $0x0,%r8d
  0x0000000102109bd9: mov    %rdi,%r9
  0x0000000102109bdc: mov    %rax,0x70(%rsp)
  0x0000000102109be1: test   %edx,%edx
  0x0000000102109be3: jl     0x000000010210a311
  0x0000000102109be9: lea    (%rdx,%r9,1),%rdi
  0x0000000102109bed: cmp    0xc(%rsi),%edi
  0x0000000102109bf0: ja     0x000000010210a311
  0x0000000102109bf6: lea    (%r8,%r9,1),%rdi
  0x0000000102109bfa: cmp    0xc(%rcx),%edi
  0x0000000102109bfd: ja     0x000000010210a311
  0x0000000102109c03: test   %r9d,%r9d
  0x0000000102109c06: jl     0x000000010210a311
  0x0000000102109c0c: je     0x0000000102109c48
  0x0000000102109c12: movslq %edx,%rdx
  0x0000000102109c15: movslq %r8d,%r8
  0x0000000102109c18: lea    0x10(%rsi,%rdx,2),%rdi
  0x0000000102109c1d: lea    0x10(%rcx,%r8,2),%rsi
  0x0000000102109c22: mov    %r9,%rdx
  0x0000000102109c25: test   $0xf,%esp
  0x0000000102109c2b: je     0x0000000102109c43
  0x0000000102109c31: sub    $0x8,%rsp
  0x0000000102109c35: callq  Stub::jshort_disjoint_arraycopy
                                                ;   {runtime_call}
  0x0000000102109c3a: add    $0x8,%rsp
  0x0000000102109c3e: jmpq   0x0000000102109c48
  0x0000000102109c43: callq  Stub::jshort_disjoint_arraycopy
                                                ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOfRange@57 (line 3665)
                                                ;   {runtime_call}
  0x0000000102109c48: mov    0x70(%rsp),%rax
  0x0000000102109c4d: add    $0xb0,%rsp
  0x0000000102109c54: pop    %rbp
  0x0000000102109c55: test   %eax,-0x9ddb5b(%rip)        # 0x000000010172c100
                                                ;   {poll_return}
  0x0000000102109c5b: retq                      ;*areturn
                                                ; - java.util.Arrays::copyOfRange@62 (line 3667)

  0x0000000102109c5c: mov    %rdx,%r8
  0x0000000102109c5f: nop
  0x0000000102109c60: jmpq   0x000000010210a330  ;   {no_reloc}
  0x0000000102109c65: add    %al,(%rax)
  0x0000000102109c67: add    %al,(%rax)
  0x0000000102109c69: add    %cl,-0x75(%rcx)
  0x0000000102109c6c: rex.RXB (bad)
  0x0000000102109c6e: lea    0x20(%rax),%rdi
  0x0000000102109c72: cmp    0x70(%r15),%rdi
  0x0000000102109c76: ja     0x000000010210a33a
  0x0000000102109c7c: mov    %rdi,0x60(%r15)
  0x0000000102109c80: mov    0xa8(%rdx),%rcx
  0x0000000102109c87: mov    %rcx,(%rax)
  0x0000000102109c8a: mov    %rdx,%rcx
  0x0000000102109c8d: shr    $0x3,%rcx
  0x0000000102109c91: mov    %ecx,0x8(%rax)
  0x0000000102109c94: xor    %rcx,%rcx
  0x0000000102109c97: mov    %ecx,0xc(%rax)
  0x0000000102109c9a: xor    %rcx,%rcx
  0x0000000102109c9d: mov    %rcx,0x10(%rax)
  0x0000000102109ca1: mov    %rcx,0x18(%rax)    ;*new  ; - java.util.Arrays::copyOfRange@8 (line 3663)

  0x0000000102109ca5: data32 xchg %ax,%ax
  0x0000000102109ca8: jmpq   0x000000010210a356  ;   {no_reloc}
  0x0000000102109cad: add    %al,(%rax)
  0x0000000102109caf: add    %al,(%rax)
  0x0000000102109cb1: add    %cl,-0x77(%rax)
  0x0000000102109cb4: test   %ah,(%rax,%rbx,4)
  0x0000000102109cb7: add    %al,(%rax)
  0x0000000102109cb9: add    %cl,-0x75(%rcx)
  0x0000000102109cbc: rex.RXB (bad)
  0x0000000102109cbe: lea    0x18(%rax),%rdi
  0x0000000102109cc2: cmp    0x70(%r15),%rdi
  0x0000000102109cc6: ja     0x000000010210a360
  0x0000000102109ccc: mov    %rdi,0x60(%r15)
  0x0000000102109cd0: mov    0xa8(%rdx),%rcx
  0x0000000102109cd7: mov    %rcx,(%rax)
  0x0000000102109cda: mov    %rdx,%rcx
  0x0000000102109cdd: shr    $0x3,%rcx
  0x0000000102109ce1: mov    %ecx,0x8(%rax)
  0x0000000102109ce4: xor    %rcx,%rcx
  0x0000000102109ce7: mov    %ecx,0xc(%rax)
  0x0000000102109cea: xor    %rcx,%rcx
  0x0000000102109ced: mov    %rcx,0x10(%rax)    ;*new  ; - java.util.Arrays::copyOfRange@12 (line 3663)

  0x0000000102109cf1: mov    %rax,0x90(%rsp)
  0x0000000102109cf9: mov    %rax,%rbx
  0x0000000102109cfc: movabs $0x116061a18,%rdx  ;   {metadata(method data for {method} {0x0000000115f8a4f8} 'copyOfRange' '([CII)[C' in 'java/util/Arrays')}
  0x0000000102109d06: addq   $0x1,0x128(%rdx)
  0x0000000102109d0e: movabs $0x116065540,%rbx  ;   {metadata(method data for {method} {0x0000000115ee5ea8} '<init>' '()V' in 'java/lang/StringBuilder')}
  0x0000000102109d18: mov    0xdc(%rbx),%edx
  0x0000000102109d1e: add    $0x8,%edx
  0x0000000102109d21: mov    %edx,0xdc(%rbx)
  0x0000000102109d27: movabs $0x115ee5ea8,%rbx  ;   {metadata({method} {0x0000000115ee5ea8} '<init>' '()V' in 'java/lang/StringBuilder')}
  0x0000000102109d31: and    $0x7ffff8,%edx
  0x0000000102109d37: cmp    $0x0,%edx
  0x0000000102109d3a: je     0x000000010210a36d
  0x0000000102109d40: mov    %rax,%rbx
  0x0000000102109d43: movabs $0x116065540,%rdx  ;   {metadata(method data for {method} {0x0000000115ee5ea8} '<init>' '()V' in 'java/lang/StringBuilder')}
  0x0000000102109d4d: addq   $0x1,0x108(%rdx)
  0x0000000102109d55: movabs $0x116065670,%rbx  ;   {metadata(method data for {method} {0x0000000115ee1f60} '<init>' '(I)V' in 'java/lang/AbstractStringBuilder')}
  0x0000000102109d5f: mov    0xdc(%rbx),%edx
  0x0000000102109d65: add    $0x8,%edx
  0x0000000102109d68: mov    %edx,0xdc(%rbx)
  0x0000000102109d6e: movabs $0x115ee1f60,%rbx  ;   {metadata({method} {0x0000000115ee1f60} '<init>' '(I)V' in 'java/lang/AbstractStringBuilder')}
  0x0000000102109d78: and    $0x7ffff8,%edx
  0x0000000102109d7e: cmp    $0x0,%edx
  0x0000000102109d81: je     0x000000010210a384
  0x0000000102109d87: mov    %rax,%rbx
  0x0000000102109d8a: movabs $0x116065670,%rdx  ;   {metadata(method data for {method} {0x0000000115ee1f60} '<init>' '(I)V' in 'java/lang/AbstractStringBuilder')}
  0x0000000102109d94: addq   $0x1,0x108(%rdx)
  0x0000000102109d9c: movabs $0x115fe7460,%rbx  ;   {metadata(method data for {method} {0x0000000115e6c480} '<init>' '()V' in 'java/lang/Object')}
  0x0000000102109da6: mov    0xdc(%rbx),%edx
  0x0000000102109dac: add    $0x8,%edx
  0x0000000102109daf: mov    %edx,0xdc(%rbx)
  0x0000000102109db5: movabs $0x115e6c480,%rbx  ;   {metadata({method} {0x0000000115e6c480} '<init>' '()V' in 'java/lang/Object')}
  0x0000000102109dbf: and    $0x7ffff8,%edx
  0x0000000102109dc5: cmp    $0x0,%edx
  0x0000000102109dc8: je     0x000000010210a39b
  0x0000000102109dce: mov    $0x10,%ebx
  0x0000000102109dd3: movabs $0x7c0000208,%rdx  ;   {metadata({type array char})}
  0x0000000102109ddd: mov    %rax,%r9
  0x0000000102109de0: movslq %ebx,%rbx
  0x0000000102109de3: mov    %rbx,%rdi
  0x0000000102109de6: cmp    $0xffffff,%rbx
  0x0000000102109ded: ja     0x000000010210a3b2
  0x0000000102109df3: movabs $0x17,%rsi
  0x0000000102109dfd: lea    (%rsi,%rbx,2),%rsi
  0x0000000102109e01: and    $0xfffffffffffffff8,%rsi
  0x0000000102109e05: mov    0x60(%r15),%rax
  0x0000000102109e09: lea    (%rax,%rsi,1),%rsi
  0x0000000102109e0d: cmp    0x70(%r15),%rsi
  0x0000000102109e11: ja     0x000000010210a3b2
  0x0000000102109e17: mov    %rsi,0x60(%r15)
  0x0000000102109e1b: sub    %rax,%rsi
  0x0000000102109e1e: movq   $0x1,(%rax)
  0x0000000102109e25: mov    %rdx,%rcx
  0x0000000102109e28: shr    $0x3,%rcx
  0x0000000102109e2c: mov    %ecx,0x8(%rax)
  0x0000000102109e2f: mov    %ebx,0xc(%rax)
  0x0000000102109e32: sub    $0x10,%rsi
  0x0000000102109e36: je     0x0000000102109e4d
  0x0000000102109e3c: xor    %rbx,%rbx
  0x0000000102109e3f: shr    $0x3,%rsi
  0x0000000102109e43: mov    %rbx,0x8(%rax,%rsi,8)
  0x0000000102109e48: dec    %rsi
  0x0000000102109e4b: jne    0x0000000102109e43  ;*newarray
                                                ; - java.lang.AbstractStringBuilder::<init>@6 (line 68)
                                                ; - java.lang.StringBuilder::<init>@3 (line 89)
                                                ; - java.util.Arrays::copyOfRange@16 (line 3663)

  0x0000000102109e4d: mov    %rax,%r10
  0x0000000102109e50: shr    $0x3,%r10
  0x0000000102109e54: mov    %r10d,0x10(%r9)
  0x0000000102109e58: mov    %r9,%rax
  0x0000000102109e5b: shr    $0x9,%rax
  0x0000000102109e5f: movabs $0x10d9c0000,%rdx
  0x0000000102109e69: movb   $0x0,(%rax,%rdx,1)  ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::<init>@8 (line 68)
                                                ; - java.lang.StringBuilder::<init>@3 (line 89)
                                                ; - java.util.Arrays::copyOfRange@16 (line 3663)

  0x0000000102109e6d: mov    %r9,%rax
  0x0000000102109e70: movabs $0x116061a18,%rdx  ;   {metadata(method data for {method} {0x0000000115f8a4f8} 'copyOfRange' '([CII)[C' in 'java/util/Arrays')}
  0x0000000102109e7a: mov    0x8(%rax),%eax
  0x0000000102109e7d: shl    $0x3,%rax
  0x0000000102109e81: cmp    0x140(%rdx),%rax
  0x0000000102109e88: jne    0x0000000102109e97
  0x0000000102109e8a: addq   $0x1,0x148(%rdx)
  0x0000000102109e92: jmpq   0x0000000102109efd
  0x0000000102109e97: cmp    0x150(%rdx),%rax
  0x0000000102109e9e: jne    0x0000000102109ead
  0x0000000102109ea0: addq   $0x1,0x158(%rdx)
  0x0000000102109ea8: jmpq   0x0000000102109efd
  0x0000000102109ead: cmpq   $0x0,0x140(%rdx)
  0x0000000102109eb8: jne    0x0000000102109ed1
  0x0000000102109eba: mov    %rax,0x140(%rdx)
  0x0000000102109ec1: movq   $0x1,0x148(%rdx)
  0x0000000102109ecc: jmpq   0x0000000102109efd
  0x0000000102109ed1: cmpq   $0x0,0x150(%rdx)
  0x0000000102109edc: jne    0x0000000102109ef5
  0x0000000102109ede: mov    %rax,0x150(%rdx)
  0x0000000102109ee5: movq   $0x1,0x158(%rdx)
  0x0000000102109ef0: jmpq   0x0000000102109efd
  0x0000000102109ef5: addq   $0x1,0x138(%rdx)
  0x0000000102109efd: movabs $0x1160657a8,%rdx  ;   {metadata(method data for {method} {0x0000000115ee6680} 'append' '(I)Ljava/lang/StringBuilder;' in 'java/lang/StringBuilder')}
  0x0000000102109f07: mov    0xdc(%rdx),%esi
  0x0000000102109f0d: add    $0x8,%esi
  0x0000000102109f10: mov    %esi,0xdc(%rdx)
  0x0000000102109f16: movabs $0x115ee6680,%rdx  ;   {metadata({method} {0x0000000115ee6680} 'append' '(I)Ljava/lang/StringBuilder;' in 'java/lang/StringBuilder')}
  0x0000000102109f20: and    $0x7ffff8,%esi
  0x0000000102109f26: cmp    $0x0,%esi
  0x0000000102109f29: je     0x000000010210a3bc
  0x0000000102109f2f: mov    %r9,%rax
  0x0000000102109f32: movabs $0x1160657a8,%rdx  ;   {metadata(method data for {method} {0x0000000115ee6680} 'append' '(I)Ljava/lang/StringBuilder;' in 'java/lang/StringBuilder')}
  0x0000000102109f3c: addq   $0x1,0x108(%rdx)
  0x0000000102109f44: mov    %r8,%rdx
  0x0000000102109f47: mov    %r9,%rsi           ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 208)
                                                ; - java.util.Arrays::copyOfRange@20 (line 3663)

  0x0000000102109f4a: nop
  0x0000000102109f4b: nop
  0x0000000102109f4c: nop
  0x0000000102109f4d: nop
  0x0000000102109f4e: nop
  0x0000000102109f4f: callq  0x0000000102046020  ; OopMap{[144]=Oop [152]=Oop [136]=Oop off=1364}
                                                ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 208)
                                                ; - java.util.Arrays::copyOfRange@20 (line 3663)
                                                ;   {optimized virtual_call}
  0x0000000102109f54: mov    0x90(%rsp),%rax
  0x0000000102109f5c: movabs $0x116061a18,%rdx  ;   {metadata(method data for {method} {0x0000000115f8a4f8} 'copyOfRange' '([CII)[C' in 'java/util/Arrays')}
  0x0000000102109f66: mov    0x8(%rax),%eax
  0x0000000102109f69: shl    $0x3,%rax
  0x0000000102109f6d: cmp    0x170(%rdx),%rax
  0x0000000102109f74: jne    0x0000000102109f83
  0x0000000102109f76: addq   $0x1,0x178(%rdx)
  0x0000000102109f7e: jmpq   0x0000000102109fe9
  0x0000000102109f83: cmp    0x180(%rdx),%rax
  0x0000000102109f8a: jne    0x0000000102109f99
  0x0000000102109f8c: addq   $0x1,0x188(%rdx)
  0x0000000102109f94: jmpq   0x0000000102109fe9
  0x0000000102109f99: cmpq   $0x0,0x170(%rdx)
  0x0000000102109fa4: jne    0x0000000102109fbd
  0x0000000102109fa6: mov    %rax,0x170(%rdx)
  0x0000000102109fad: movq   $0x1,0x178(%rdx)
  0x0000000102109fb8: jmpq   0x0000000102109fe9
  0x0000000102109fbd: cmpq   $0x0,0x180(%rdx)
  0x0000000102109fc8: jne    0x0000000102109fe1
  0x0000000102109fca: mov    %rax,0x180(%rdx)
  0x0000000102109fd1: movq   $0x1,0x188(%rdx)
  0x0000000102109fdc: jmpq   0x0000000102109fe9
  0x0000000102109fe1: addq   $0x1,0x168(%rdx)
  0x0000000102109fe9: movabs $0x116065af8,%rdx  ;   {metadata(method data for {method} {0x0000000115ee61c0} 'append' '(Ljava/lang/String;)Ljava/lang/StringBuilder;' in 'java/lang/StringBuilder')}
  0x0000000102109ff3: mov    0xdc(%rdx),%esi
  0x0000000102109ff9: add    $0x8,%esi
  0x0000000102109ffc: mov    %esi,0xdc(%rdx)
  0x000000010210a002: movabs $0x115ee61c0,%rdx  ;   {metadata({method} {0x0000000115ee61c0} 'append' '(Ljava/lang/String;)Ljava/lang/StringBuilder;' in 'java/lang/StringBuilder')}
  0x000000010210a00c: and    $0x7ffff8,%esi
  0x000000010210a012: cmp    $0x0,%esi
  0x000000010210a015: je     0x000000010210a3d3
  0x000000010210a01b: mov    0x90(%rsp),%rax
  0x000000010210a023: movabs $0x116065af8,%rdx  ;   {metadata(method data for {method} {0x0000000115ee61c0} 'append' '(Ljava/lang/String;)Ljava/lang/StringBuilder;' in 'java/lang/StringBuilder')}
  0x000000010210a02d: addq   $0x1,0x108(%rdx)
  0x000000010210a035: movabs $0x7956ccce8,%rdx  ;   {oop(" > ")}
  0x000000010210a03f: mov    0x90(%rsp),%rsi    ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - java.util.Arrays::copyOfRange@25 (line 3663)

  0x000000010210a047: callq  0x0000000102046020  ; OopMap{[144]=Oop [152]=Oop [136]=Oop off=1612}
                                                ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - java.util.Arrays::copyOfRange@25 (line 3663)
                                                ;   {optimized virtual_call}
  0x000000010210a04c: mov    0x90(%rsp),%rax
  0x000000010210a054: movabs $0x116061a18,%rdx  ;   {metadata(method data for {method} {0x0000000115f8a4f8} 'copyOfRange' '([CII)[C' in 'java/util/Arrays')}
  0x000000010210a05e: mov    0x8(%rax),%eax
  0x000000010210a061: shl    $0x3,%rax
  0x000000010210a065: cmp    0x1a0(%rdx),%rax
  0x000000010210a06c: jne    0x000000010210a07b
  0x000000010210a06e: addq   $0x1,0x1a8(%rdx)
  0x000000010210a076: jmpq   0x000000010210a0e1
  0x000000010210a07b: cmp    0x1b0(%rdx),%rax
  0x000000010210a082: jne    0x000000010210a091
  0x000000010210a084: addq   $0x1,0x1b8(%rdx)
  0x000000010210a08c: jmpq   0x000000010210a0e1
  0x000000010210a091: cmpq   $0x0,0x1a0(%rdx)
  0x000000010210a09c: jne    0x000000010210a0b5
  0x000000010210a09e: mov    %rax,0x1a0(%rdx)
  0x000000010210a0a5: movq   $0x1,0x1a8(%rdx)
  0x000000010210a0b0: jmpq   0x000000010210a0e1
  0x000000010210a0b5: cmpq   $0x0,0x1b0(%rdx)
  0x000000010210a0c0: jne    0x000000010210a0d9
  0x000000010210a0c2: mov    %rax,0x1b0(%rdx)
  0x000000010210a0c9: movq   $0x1,0x1b8(%rdx)
  0x000000010210a0d4: jmpq   0x000000010210a0e1
  0x000000010210a0d9: addq   $0x1,0x198(%rdx)
  0x000000010210a0e1: movabs $0x1160657a8,%rdx  ;   {metadata(method data for {method} {0x0000000115ee6680} 'append' '(I)Ljava/lang/StringBuilder;' in 'java/lang/StringBuilder')}
  0x000000010210a0eb: mov    0xdc(%rdx),%esi
  0x000000010210a0f1: add    $0x8,%esi
  0x000000010210a0f4: mov    %esi,0xdc(%rdx)
  0x000000010210a0fa: movabs $0x115ee6680,%rdx  ;   {metadata({method} {0x0000000115ee6680} 'append' '(I)Ljava/lang/StringBuilder;' in 'java/lang/StringBuilder')}
  0x000000010210a104: and    $0x7ffff8,%esi
  0x000000010210a10a: cmp    $0x0,%esi
  0x000000010210a10d: je     0x000000010210a3ea
  0x000000010210a113: mov    0x90(%rsp),%rax
  0x000000010210a11b: movabs $0x1160657a8,%rdx  ;   {metadata(method data for {method} {0x0000000115ee6680} 'append' '(I)Ljava/lang/StringBuilder;' in 'java/lang/StringBuilder')}
  0x000000010210a125: addq   $0x1,0x108(%rdx)
  0x000000010210a12d: mov    0x7c(%rsp),%edx
  0x000000010210a131: mov    0x90(%rsp),%rsi    ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 208)
                                                ; - java.util.Arrays::copyOfRange@29 (line 3663)

  0x000000010210a139: nop
  0x000000010210a13a: nop
  0x000000010210a13b: nop
  0x000000010210a13c: nop
  0x000000010210a13d: nop
  0x000000010210a13e: nop
  0x000000010210a13f: callq  0x0000000102046020  ; OopMap{[144]=Oop [152]=Oop [136]=Oop off=1860}
                                                ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 208)
                                                ; - java.util.Arrays::copyOfRange@29 (line 3663)
                                                ;   {optimized virtual_call}
  0x000000010210a144: mov    0x90(%rsp),%rax
  0x000000010210a14c: movabs $0x116061a18,%rdx  ;   {metadata(method data for {method} {0x0000000115f8a4f8} 'copyOfRange' '([CII)[C' in 'java/util/Arrays')}
  0x000000010210a156: mov    0x8(%rax),%eax
  0x000000010210a159: shl    $0x3,%rax
  0x000000010210a15d: cmp    0x1d0(%rdx),%rax
  0x000000010210a164: jne    0x000000010210a173
  0x000000010210a166: addq   $0x1,0x1d8(%rdx)
  0x000000010210a16e: jmpq   0x000000010210a1d9
  0x000000010210a173: cmp    0x1e0(%rdx),%rax
  0x000000010210a17a: jne    0x000000010210a189
  0x000000010210a17c: addq   $0x1,0x1e8(%rdx)
  0x000000010210a184: jmpq   0x000000010210a1d9
  0x000000010210a189: cmpq   $0x0,0x1d0(%rdx)
  0x000000010210a194: jne    0x000000010210a1ad
  0x000000010210a196: mov    %rax,0x1d0(%rdx)
  0x000000010210a19d: movq   $0x1,0x1d8(%rdx)
  0x000000010210a1a8: jmpq   0x000000010210a1d9
  0x000000010210a1ad: cmpq   $0x0,0x1e0(%rdx)
  0x000000010210a1b8: jne    0x000000010210a1d1
  0x000000010210a1ba: mov    %rax,0x1e0(%rdx)
  0x000000010210a1c1: movq   $0x1,0x1e8(%rdx)
  0x000000010210a1cc: jmpq   0x000000010210a1d9
  0x000000010210a1d1: addq   $0x1,0x1c8(%rdx)
  0x000000010210a1d9: movabs $0x116065e20,%rdx  ;   {metadata(method data for {method} {0x0000000115ee7570} 'toString' '()Ljava/lang/String;' in 'java/lang/StringBuilder')}
  0x000000010210a1e3: mov    0xdc(%rdx),%esi
  0x000000010210a1e9: add    $0x8,%esi
  0x000000010210a1ec: mov    %esi,0xdc(%rdx)
  0x000000010210a1f2: movabs $0x115ee7570,%rdx  ;   {metadata({method} {0x0000000115ee7570} 'toString' '()Ljava/lang/String;' in 'java/lang/StringBuilder')}
  0x000000010210a1fc: and    $0x7ffff8,%esi
  0x000000010210a202: cmp    $0x0,%esi
  0x000000010210a205: je     0x000000010210a401
  0x000000010210a20b: movabs $0x7c00016d0,%rdx  ;   {metadata('java/lang/String')}
  0x000000010210a215: mov    0x60(%r15),%rax
  0x000000010210a219: lea    0x18(%rax),%rdi
  0x000000010210a21d: cmp    0x70(%r15),%rdi
  0x000000010210a221: ja     0x000000010210a418
  0x000000010210a227: mov    %rdi,0x60(%r15)
  0x000000010210a22b: mov    0xa8(%rdx),%rcx
  0x000000010210a232: mov    %rcx,(%rax)
  0x000000010210a235: mov    %rdx,%rcx
  0x000000010210a238: shr    $0x3,%rcx
  0x000000010210a23c: mov    %ecx,0x8(%rax)
  0x000000010210a23f: xor    %rcx,%rcx
  0x000000010210a242: mov    %ecx,0xc(%rax)
  0x000000010210a245: xor    %rcx,%rcx
  0x000000010210a248: mov    %rcx,0x10(%rax)    ;*new  ; - java.lang.StringBuilder::toString@0 (line 407)
                                                ; - java.util.Arrays::copyOfRange@32 (line 3663)

  0x000000010210a24c: mov    0x90(%rsp),%rdi
  0x000000010210a254: mov    0x10(%rdi),%edx
  0x000000010210a257: shl    $0x3,%rdx          ;*getfield value
                                                ; - java.lang.StringBuilder::toString@5 (line 407)
                                                ; - java.util.Arrays::copyOfRange@32 (line 3663)

  0x000000010210a25b: mov    0xc(%rdi),%r8d     ;*getfield count
                                                ; - java.lang.StringBuilder::toString@10 (line 407)
                                                ; - java.util.Arrays::copyOfRange@32 (line 3663)

  0x000000010210a25f: mov    %rax,%rcx
  0x000000010210a262: movabs $0x116065e20,%rsi  ;   {metadata(method data for {method} {0x0000000115ee7570} 'toString' '()Ljava/lang/String;' in 'java/lang/StringBuilder')}
  0x000000010210a26c: addq   $0x1,0x108(%rsi)
  0x000000010210a274: mov    $0x0,%ecx
  0x000000010210a279: mov    %rax,%rsi          ;*invokespecial <init>
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.util.Arrays::copyOfRange@32 (line 3663)

  0x000000010210a27c: mov    %rax,0xa0(%rsp)
  0x000000010210a284: nop
  0x000000010210a285: nop
  0x000000010210a286: nop
  0x000000010210a287: callq  0x0000000102046020  ; OopMap{[152]=Oop [136]=Oop [144]=Oop [160]=Oop off=2188}
                                                ;*invokespecial <init>
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.util.Arrays::copyOfRange@32 (line 3663)
                                                ;   {optimized virtual_call}
  0x000000010210a28c: mov    0x98(%rsp),%rax
  0x000000010210a294: movabs $0x116061a18,%rdx  ;   {metadata(method data for {method} {0x0000000115f8a4f8} 'copyOfRange' '([CII)[C' in 'java/util/Arrays')}
  0x000000010210a29e: addq   $0x1,0x1f8(%rdx)
  0x000000010210a2a6: mov    0xa0(%rsp),%rdx
  0x000000010210a2ae: mov    0x98(%rsp),%rsi    ;*invokespecial <init>
                                                ; - java.util.Arrays::copyOfRange@35 (line 3663)

  0x000000010210a2b6: nop
  0x000000010210a2b7: callq  0x0000000102046020  ; OopMap{[152]=Oop [136]=Oop off=2236}
                                                ;*invokespecial <init>
                                                ; - java.util.Arrays::copyOfRange@35 (line 3663)
                                                ;   {optimized virtual_call}
  0x000000010210a2bc: mov    0x98(%rsp),%rax    ; OopMap{[136]=Oop rax=Oop off=2244}
                                                ;*athrow
                                                ; - java.util.Arrays::copyOfRange@38 (line 3663)

  0x000000010210a2c4: movabs $0x10210a2c4,%rdx  ;   {section_word}
  0x000000010210a2ce: callq  0x000000010206bfa0  ;   {runtime_call}
  0x000000010210a2d3: nop
  0x000000010210a2d4: mov    %rbx,0x8(%rsp)
  0x000000010210a2d9: movq   $0xffffffffffffffff,(%rsp)
  0x000000010210a2e1: callq  0x00000001020fe020  ; OopMap{rsi=Oop [136]=Oop off=2278}
                                                ;*synchronization entry
                                                ; - java.util.Arrays::copyOfRange@-1 (line 3661)
                                                ;   {runtime_call}
  0x000000010210a2e6: jmpq   0x0000000102109a51
  0x000000010210a2eb: callq  0x000000010206c8a0  ; OopMap{r14=Oop [136]=Oop off=2288}
                                                ;*newarray
                                                ; - java.util.Arrays::copyOfRange@40 (line 3664)
                                                ;   {runtime_call}
  0x000000010210a2f0: jmpq   0x0000000102109b19
  0x000000010210a2f5: callq  0x000000010206db40  ; OopMap{r14=Oop [136]=Oop rax=Oop off=2298}
                                                ;*arraylength
                                                ; - java.util.Arrays::copyOfRange@50 (line 3665)
                                                ;   {runtime_call}
  0x000000010210a2fa: mov    %rdx,0x8(%rsp)
  0x000000010210a2ff: movq   $0xffffffffffffffff,(%rsp)
  0x000000010210a307: callq  0x00000001020fe020  ; OopMap{r14=Oop [136]=Oop rax=Oop off=2316}
                                                ;*synchronization entry
                                                ; - java.lang.Math::min@-1 (line 1336)
                                                ; - java.util.Arrays::copyOfRange@54 (line 3666)
                                                ;   {runtime_call}
  0x000000010210a30c: jmpq   0x0000000102109b64
  0x000000010210a311: nop
  0x000000010210a312: nop
  0x000000010210a313: nop
  0x000000010210a314: nop
  0x000000010210a315: nop
  0x000000010210a316: nop
  0x000000010210a317: callq  0x0000000102046420  ; OopMap{[112]=Oop [136]=Oop off=2332}
                                                ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOfRange@57 (line 3665)
                                                ;   {static_call}
  0x000000010210a31c: jmpq   0x0000000102109c48
  0x000000010210a321: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x000000010210a32b: mov    $0xa050f00,%eax
  0x000000010210a330: callq  0x00000001020fd020  ; OopMap{[136]=Oop off=2357}
                                                ;*new  ; - java.util.Arrays::copyOfRange@8 (line 3663)
                                                ;   {runtime_call}
  0x000000010210a335: jmpq   0x0000000102109c60
  0x000000010210a33a: mov    %rdx,%rdx
  0x000000010210a33d: callq  0x000000010206d1e0  ; OopMap{[136]=Oop off=2370}
                                                ;*new  ; - java.util.Arrays::copyOfRange@8 (line 3663)
                                                ;   {runtime_call}
  0x000000010210a342: jmpq   0x0000000102109ca5
  0x000000010210a347: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x000000010210a351: mov    $0xa050f00,%eax
  0x000000010210a356: callq  0x00000001020fd020  ; OopMap{[136]=Oop rax=Oop off=2395}
                                                ;*new  ; - java.util.Arrays::copyOfRange@12 (line 3663)
                                                ;   {runtime_call}
  0x000000010210a35b: jmpq   0x0000000102109ca8
  0x000000010210a360: mov    %rdx,%rdx
  0x000000010210a363: callq  0x000000010206d1e0  ; OopMap{[136]=Oop [152]=Oop off=2408}
                                                ;*new  ; - java.util.Arrays::copyOfRange@12 (line 3663)
                                                ;   {runtime_call}
  0x000000010210a368: jmpq   0x0000000102109cf1
  0x000000010210a36d: mov    %rbx,0x8(%rsp)
  0x000000010210a372: movq   $0xffffffffffffffff,(%rsp)
  0x000000010210a37a: callq  0x00000001020fe020  ; OopMap{[136]=Oop [152]=Oop rax=Oop [144]=Oop off=2431}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::<init>@-1 (line 89)
                                                ; - java.util.Arrays::copyOfRange@16 (line 3663)
                                                ;   {runtime_call}
  0x000000010210a37f: jmpq   0x0000000102109d40
  0x000000010210a384: mov    %rbx,0x8(%rsp)
  0x000000010210a389: movq   $0xffffffffffffffff,(%rsp)
  0x000000010210a391: callq  0x00000001020fe020  ; OopMap{[136]=Oop [152]=Oop rax=Oop [144]=Oop off=2454}
                                                ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::<init>@-1 (line 67)
                                                ; - java.lang.StringBuilder::<init>@3 (line 89)
                                                ; - java.util.Arrays::copyOfRange@16 (line 3663)
                                                ;   {runtime_call}
  0x000000010210a396: jmpq   0x0000000102109d87
  0x000000010210a39b: mov    %rbx,0x8(%rsp)
  0x000000010210a3a0: movq   $0xffffffffffffffff,(%rsp)
  0x000000010210a3a8: callq  0x00000001020fe020  ; OopMap{[136]=Oop [152]=Oop rax=Oop [144]=Oop off=2477}
                                                ;*synchronization entry
                                                ; - java.lang.Object::<init>@-1 (line 37)
                                                ; - java.lang.AbstractStringBuilder::<init>@1 (line 67)
                                                ; - java.lang.StringBuilder::<init>@3 (line 89)
                                                ; - java.util.Arrays::copyOfRange@16 (line 3663)
                                                ;   {runtime_call}
  0x000000010210a3ad: jmpq   0x0000000102109dce
  0x000000010210a3b2: callq  0x000000010206c8a0  ; OopMap{[136]=Oop [152]=Oop r9=Oop [144]=Oop off=2487}
                                                ;*newarray
                                                ; - java.lang.AbstractStringBuilder::<init>@6 (line 68)
                                                ; - java.lang.StringBuilder::<init>@3 (line 89)
                                                ; - java.util.Arrays::copyOfRange@16 (line 3663)
                                                ;   {runtime_call}
  0x000000010210a3b7: jmpq   0x0000000102109e4d
  0x000000010210a3bc: mov    %rdx,0x8(%rsp)
  0x000000010210a3c1: movq   $0xffffffffffffffff,(%rsp)
  0x000000010210a3c9: callq  0x00000001020fe020  ; OopMap{[136]=Oop [152]=Oop r9=Oop [144]=Oop off=2510}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::append@-1 (line 208)
                                                ; - java.util.Arrays::copyOfRange@20 (line 3663)
                                                ;   {runtime_call}
  0x000000010210a3ce: jmpq   0x0000000102109f2f
  0x000000010210a3d3: mov    %rdx,0x8(%rsp)
  0x000000010210a3d8: movq   $0xffffffffffffffff,(%rsp)
  0x000000010210a3e0: callq  0x00000001020fe020  ; OopMap{[144]=Oop [152]=Oop [136]=Oop off=2533}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::append@-1 (line 136)
                                                ; - java.util.Arrays::copyOfRange@25 (line 3663)
                                                ;   {runtime_call}
  0x000000010210a3e5: jmpq   0x000000010210a01b
  0x000000010210a3ea: mov    %rdx,0x8(%rsp)
  0x000000010210a3ef: movq   $0xffffffffffffffff,(%rsp)
  0x000000010210a3f7: callq  0x00000001020fe020  ; OopMap{[144]=Oop [152]=Oop [136]=Oop off=2556}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::append@-1 (line 208)
                                                ; - java.util.Arrays::copyOfRange@29 (line 3663)
                                                ;   {runtime_call}
  0x000000010210a3fc: jmpq   0x000000010210a113
  0x000000010210a401: mov    %rdx,0x8(%rsp)
  0x000000010210a406: movq   $0xffffffffffffffff,(%rsp)
  0x000000010210a40e: callq  0x00000001020fe020  ; OopMap{[144]=Oop [152]=Oop [136]=Oop off=2579}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::toString@-1 (line 407)
                                                ; - java.util.Arrays::copyOfRange@32 (line 3663)
                                                ;   {runtime_call}
  0x000000010210a413: jmpq   0x000000010210a20b
  0x000000010210a418: mov    %rdx,%rdx
  0x000000010210a41b: callq  0x000000010206d1e0  ; OopMap{[144]=Oop [152]=Oop [136]=Oop off=2592}
                                                ;*new  ; - java.lang.StringBuilder::toString@0 (line 407)
                                                ; - java.util.Arrays::copyOfRange@32 (line 3663)
                                                ;   {runtime_call}
  0x000000010210a420: jmpq   0x000000010210a24c
  0x000000010210a425: nop
  0x000000010210a426: nop
  0x000000010210a427: mov    0x2a8(%r15),%rax
  0x000000010210a42e: movabs $0x0,%r10
  0x000000010210a438: mov    %r10,0x2a8(%r15)
  0x000000010210a43f: movabs $0x0,%r10
  0x000000010210a449: mov    %r10,0x2b0(%r15)
  0x000000010210a450: add    $0xb0,%rsp
  0x000000010210a457: pop    %rbp
  0x000000010210a458: jmpq   0x000000010206e6a0  ;   {runtime_call}
  0x000000010210a45d: hlt
  0x000000010210a45e: hlt
  0x000000010210a45f: hlt
[Stub Code]
  0x000000010210a460: nop                       ;   {no_reloc}
  0x000000010210a461: nop
  0x000000010210a462: nop
  0x000000010210a463: nop
  0x000000010210a464: nop
  0x000000010210a465: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010210a46f: jmpq   0x000000010210a46f  ;   {runtime_call}
  0x000000010210a474: nop
  0x000000010210a475: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010210a47f: jmpq   0x000000010210a47f  ;   {runtime_call}
  0x000000010210a484: nop
  0x000000010210a485: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010210a48f: jmpq   0x000000010210a48f  ;   {runtime_call}
  0x000000010210a494: nop
  0x000000010210a495: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010210a49f: jmpq   0x000000010210a49f  ;   {runtime_call}
  0x000000010210a4a4: nop
  0x000000010210a4a5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010210a4af: jmpq   0x000000010210a4af  ;   {runtime_call}
  0x000000010210a4b4: nop
  0x000000010210a4b5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010210a4bf: jmpq   0x000000010210a4bf  ;   {runtime_call}
[Exception Handler]
  0x000000010210a4c4: callq  0x00000001020fb9a0  ;   {runtime_call}
  0x000000010210a4c9: mov    %rsp,-0x28(%rsp)
  0x000000010210a4ce: sub    $0x80,%rsp
  0x000000010210a4d5: mov    %rax,0x78(%rsp)
  0x000000010210a4da: mov    %rcx,0x70(%rsp)
  0x000000010210a4df: mov    %rdx,0x68(%rsp)
  0x000000010210a4e4: mov    %rbx,0x60(%rsp)
  0x000000010210a4e9: mov    %rbp,0x50(%rsp)
  0x000000010210a4ee: mov    %rsi,0x48(%rsp)
  0x000000010210a4f3: mov    %rdi,0x40(%rsp)
  0x000000010210a4f8: mov    %r8,0x38(%rsp)
  0x000000010210a4fd: mov    %r9,0x30(%rsp)
  0x000000010210a502: mov    %r10,0x28(%rsp)
  0x000000010210a507: mov    %r11,0x20(%rsp)
  0x000000010210a50c: mov    %r12,0x18(%rsp)
  0x000000010210a511: mov    %r13,0x10(%rsp)
  0x000000010210a516: mov    %r14,0x8(%rsp)
  0x000000010210a51b: mov    %r15,(%rsp)
  0x000000010210a51f: movabs $0x100d1ee90,%rdi  ;   {external_word}
  0x000000010210a529: movabs $0x10210a4c9,%rsi  ;   {internal_word}
  0x000000010210a533: mov    %rsp,%rdx
  0x000000010210a536: and    $0xfffffffffffffff0,%rsp
  0x000000010210a53a: callq  0x0000000100b4a196  ;   {runtime_call}
  0x000000010210a53f: hlt
[Deopt Handler Code]
  0x000000010210a540: movabs $0x10210a540,%r10  ;   {section_word}
  0x000000010210a54a: push   %r10
  0x000000010210a54c: jmpq   0x00000001020473c0  ;   {runtime_call}
  0x000000010210a551: hlt
  0x000000010210a552: hlt
  0x000000010210a553: hlt
  0x000000010210a554: hlt
  0x000000010210a555: hlt
  0x000000010210a556: hlt
  0x000000010210a557: hlt
[Loaded sun.net.util.URLUtil from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.misc.URLClassPath$3 from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.misc.URLClassPath$Loader from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.misc.URLClassPath$JarLoader from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.zip.ZipConstants from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.zip.ZipFile from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.misc.JavaUtilZipFileAccess from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.zip.ZipFile$1 from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
Decoding compiled method 0x000000010210af90:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000115e71218} 'indexOf' '(II)I' in 'java/lang/String'
  # this:     rsi:rsi   = 'java/lang/String'
  # parm0:    rdx       = int
  # parm1:    rcx       = int
  #           [sp+0x50]  (sp of caller)
  0x000000010210b120: mov    0x8(%rsi),%r10d
  0x000000010210b124: shl    $0x3,%r10
  0x000000010210b128: cmp    %rax,%r10
  0x000000010210b12b: jne    0x0000000102045e20  ;   {runtime_call}
  0x000000010210b131: data32 data32 nopw 0x0(%rax,%rax,1)
  0x000000010210b13c: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x000000010210b140: mov    %eax,-0x14000(%rsp)
  0x000000010210b147: push   %rbp
  0x000000010210b148: sub    $0x40,%rsp
  0x000000010210b14c: movabs $0x116044eb0,%rax  ;   {metadata(method data for {method} {0x0000000115e71218} 'indexOf' '(II)I' in 'java/lang/String')}
  0x000000010210b156: mov    0xdc(%rax),%edi
  0x000000010210b15c: add    $0x8,%edi
  0x000000010210b15f: mov    %edi,0xdc(%rax)
  0x000000010210b165: movabs $0x115e71218,%rax  ;   {metadata({method} {0x0000000115e71218} 'indexOf' '(II)I' in 'java/lang/String')}
  0x000000010210b16f: and    $0x1ff8,%edi
  0x000000010210b175: cmp    $0x0,%edi
  0x000000010210b178: je     0x000000010210b3b1  ;*aload_0
                                                ; - java.lang.String::indexOf@0 (line 1546)

  0x000000010210b17e: mov    0xc(%rsi),%eax
  0x000000010210b181: shl    $0x3,%rax          ;*getfield value
                                                ; - java.lang.String::indexOf@1 (line 1546)

  0x000000010210b185: mov    0xc(%rax),%edi     ;*arraylength
                                                ; - java.lang.String::indexOf@4 (line 1546)
                                                ; implicit exception: dispatches to 0x000000010210b3c8
  0x000000010210b188: cmp    $0x0,%ecx
  0x000000010210b18b: movabs $0x116044eb0,%rbx  ;   {metadata(method data for {method} {0x0000000115e71218} 'indexOf' '(II)I' in 'java/lang/String')}
  0x000000010210b195: movabs $0x108,%r8
  0x000000010210b19f: jge    0x000000010210b1af
  0x000000010210b1a5: movabs $0x118,%r8
  0x000000010210b1af: mov    (%rbx,%r8,1),%r9
  0x000000010210b1b3: lea    0x1(%r9),%r9
  0x000000010210b1b7: mov    %r9,(%rbx,%r8,1)
  0x000000010210b1bb: jge    0x000000010210b1db  ;*ifge
                                                ; - java.lang.String::indexOf@7 (line 1547)

  0x000000010210b1c1: movabs $0x116044eb0,%rcx  ;   {metadata(method data for {method} {0x0000000115e71218} 'indexOf' '(II)I' in 'java/lang/String')}
  0x000000010210b1cb: incl   0x128(%rcx)
  0x000000010210b1d1: mov    $0x0,%ecx
  0x000000010210b1d6: jmpq   0x000000010210b213  ;*goto
                                                ; - java.lang.String::indexOf@12 (line 1548)

  0x000000010210b1db: cmp    %edi,%ecx
  0x000000010210b1dd: movabs $0x116044eb0,%rbx  ;   {metadata(method data for {method} {0x0000000115e71218} 'indexOf' '(II)I' in 'java/lang/String')}
  0x000000010210b1e7: movabs $0x140,%r8
  0x000000010210b1f1: jl     0x000000010210b201
  0x000000010210b1f7: movabs $0x150,%r8
  0x000000010210b201: mov    (%rbx,%r8,1),%r9
  0x000000010210b205: lea    0x1(%r9),%r9
  0x000000010210b209: mov    %r9,(%rbx,%r8,1)
  0x000000010210b20d: jge    0x000000010210b3a0  ;*if_icmplt
                                                ; - java.lang.String::indexOf@17 (line 1549)

  0x000000010210b213: cmp    $0x10000,%edx
  0x000000010210b219: movabs $0x116044eb0,%rbx  ;   {metadata(method data for {method} {0x0000000115e71218} 'indexOf' '(II)I' in 'java/lang/String')}
  0x000000010210b223: movabs $0x160,%r8
  0x000000010210b22d: jge    0x000000010210b23d
  0x000000010210b233: movabs $0x170,%r8
  0x000000010210b23d: mov    (%rbx,%r8,1),%r9
  0x000000010210b241: lea    0x1(%r9),%r9
  0x000000010210b245: mov    %r9,(%rbx,%r8,1)
  0x000000010210b249: jge    0x000000010210b350  ;*if_icmpge
                                                ; - java.lang.String::indexOf@25 (line 1554)

  0x000000010210b24f: mov    %rcx,%rbx
  0x000000010210b252: jmpq   0x000000010210b2f3  ;*iload
                                                ; - java.lang.String::indexOf@37 (line 1558)

  0x000000010210b257: nop
  0x000000010210b258: movslq %ebx,%r8
  0x000000010210b25b: cmp    0xc(%rax),%ebx
  0x000000010210b25e: jae    0x000000010210b3cd
  0x000000010210b264: movzwl 0x10(%rax,%r8,2),%r8d  ;*caload
                                                ; - java.lang.String::indexOf@47 (line 1559)

  0x000000010210b26a: cmp    %edx,%r8d
  0x000000010210b26d: movabs $0x116044eb0,%r8   ;   {metadata(method data for {method} {0x0000000115e71218} 'indexOf' '(II)I' in 'java/lang/String')}
  0x000000010210b277: movabs $0x1a0,%r9
  0x000000010210b281: jne    0x000000010210b291
  0x000000010210b287: movabs $0x1b0,%r9
  0x000000010210b291: mov    (%r8,%r9,1),%r11
  0x000000010210b295: lea    0x1(%r11),%r11
  0x000000010210b299: mov    %r11,(%r8,%r9,1)
  0x000000010210b29d: je     0x000000010210b330  ;*if_icmpne
                                                ; - java.lang.String::indexOf@49 (line 1559)

  0x000000010210b2a3: inc    %ebx
  0x000000010210b2a5: movabs $0x116044eb0,%r8   ;   {metadata(method data for {method} {0x0000000115e71218} 'indexOf' '(II)I' in 'java/lang/String')}
  0x000000010210b2af: mov    0xe0(%r8),%r9d
  0x000000010210b2b6: add    $0x8,%r9d
  0x000000010210b2ba: mov    %r9d,0xe0(%r8)
  0x000000010210b2c1: movabs $0x115e71218,%r8   ;   {metadata({method} {0x0000000115e71218} 'indexOf' '(II)I' in 'java/lang/String')}
  0x000000010210b2cb: and    $0xfff8,%r9d
  0x000000010210b2d2: cmp    $0x0,%r9d
  0x000000010210b2d6: je     0x000000010210b3d6  ; OopMap{rsi=Oop rax=Oop off=444}
                                                ;*goto
                                                ; - java.lang.String::indexOf@58 (line 1558)

  0x000000010210b2dc: test   %eax,-0x9df1e2(%rip)        # 0x000000010172c100
                                                ;   {poll}
  0x000000010210b2e2: movabs $0x116044eb0,%r8   ;   {metadata(method data for {method} {0x0000000115e71218} 'indexOf' '(II)I' in 'java/lang/String')}
  0x000000010210b2ec: incl   0x1c0(%r8)         ;*goto
                                                ; - java.lang.String::indexOf@58 (line 1558)

  0x000000010210b2f3: cmp    %edi,%ebx
  0x000000010210b2f5: movabs $0x116044eb0,%r8   ;   {metadata(method data for {method} {0x0000000115e71218} 'indexOf' '(II)I' in 'java/lang/String')}
  0x000000010210b2ff: movabs $0x180,%r9
  0x000000010210b309: jge    0x000000010210b319
  0x000000010210b30f: movabs $0x190,%r9
  0x000000010210b319: mov    (%r8,%r9,1),%r11
  0x000000010210b31d: lea    0x1(%r11),%r11
  0x000000010210b321: mov    %r11,(%r8,%r9,1)
  0x000000010210b325: jge    0x000000010210b33f
  0x000000010210b32b: jmpq   0x000000010210b258  ;*if_icmpge
                                                ; - java.lang.String::indexOf@40 (line 1558)

  0x000000010210b330: mov    %rbx,%rax
  0x000000010210b333: add    $0x40,%rsp
  0x000000010210b337: pop    %rbp
  0x000000010210b338: test   %eax,-0x9df23e(%rip)        # 0x000000010172c100
                                                ;   {poll_return}
  0x000000010210b33e: retq                      ;*ireturn
                                                ; - java.lang.String::indexOf@54 (line 1560)

  0x000000010210b33f: mov    $0xffffffff,%eax
  0x000000010210b344: add    $0x40,%rsp
  0x000000010210b348: pop    %rbp
  0x000000010210b349: test   %eax,-0x9df24f(%rip)        # 0x000000010172c100
                                                ;   {poll_return}
  0x000000010210b34f: retq                      ;*ireturn
                                                ; - java.lang.String::indexOf@62 (line 1563)

  0x000000010210b350: mov    %edi,0x30(%rsp)
  0x000000010210b354: mov    %rsi,%rbx
  0x000000010210b357: movabs $0x116044eb0,%rax  ;   {metadata(method data for {method} {0x0000000115e71218} 'indexOf' '(II)I' in 'java/lang/String')}
  0x000000010210b361: addq   $0x1,0x1d8(%rax)
  0x000000010210b369: mov    %rdx,%rbx
  0x000000010210b36c: mov    %rbx,%rdx
  0x000000010210b36f: mov    %rcx,%rax
  0x000000010210b372: mov    %rax,%rcx
  0x000000010210b375: mov    %rsi,%r8
  0x000000010210b378: mov    %r8,%rsi           ;*invokespecial indexOfSupplementary
                                                ; - java.lang.String::indexOf@66 (line 1565)

  0x000000010210b37b: mov    %ebx,0x2c(%rsp)
  0x000000010210b37f: mov    %eax,0x28(%rsp)
  0x000000010210b383: mov    %r8,0x20(%rsp)
  0x000000010210b388: nop
  0x000000010210b389: nop
  0x000000010210b38a: nop
  0x000000010210b38b: nop
  0x000000010210b38c: nop
  0x000000010210b38d: nop
  0x000000010210b38e: nop
  0x000000010210b38f: callq  0x0000000102046020  ; OopMap{[32]=Oop off=628}
                                                ;*invokespecial indexOfSupplementary
                                                ; - java.lang.String::indexOf@66 (line 1565)
                                                ;   {optimized virtual_call}
  0x000000010210b394: add    $0x40,%rsp
  0x000000010210b398: pop    %rbp
  0x000000010210b399: test   %eax,-0x9df29f(%rip)        # 0x000000010172c100
                                                ;   {poll_return}
  0x000000010210b39f: retq                      ;*ireturn
                                                ; - java.lang.String::indexOf@69 (line 1565)

  0x000000010210b3a0: mov    $0xffffffff,%eax
  0x000000010210b3a5: add    $0x40,%rsp
  0x000000010210b3a9: pop    %rbp
  0x000000010210b3aa: test   %eax,-0x9df2b0(%rip)        # 0x000000010172c100
                                                ;   {poll_return}
  0x000000010210b3b0: retq
  0x000000010210b3b1: mov    %rax,0x8(%rsp)
  0x000000010210b3b6: movq   $0xffffffffffffffff,(%rsp)
  0x000000010210b3be: callq  0x00000001020fe020  ; OopMap{rsi=Oop off=675}
                                                ;*synchronization entry
                                                ; - java.lang.String::indexOf@-1 (line 1546)
                                                ;   {runtime_call}
  0x000000010210b3c3: jmpq   0x000000010210b17e
  0x000000010210b3c8: callq  0x000000010206db40  ; OopMap{rsi=Oop rax=Oop off=685}
                                                ;*arraylength
                                                ; - java.lang.String::indexOf@4 (line 1546)
                                                ;   {runtime_call}
  0x000000010210b3cd: mov    %rbx,(%rsp)
  0x000000010210b3d1: callq  0x000000010206e200  ; OopMap{rsi=Oop rax=Oop off=694}
                                                ;*caload
                                                ; - java.lang.String::indexOf@47 (line 1559)
                                                ;   {runtime_call}
  0x000000010210b3d6: mov    %r8,0x8(%rsp)
  0x000000010210b3db: movq   $0x3a,(%rsp)
  0x000000010210b3e3: callq  0x00000001020fe020  ; OopMap{rsi=Oop rax=Oop off=712}
                                                ;*goto
                                                ; - java.lang.String::indexOf@58 (line 1558)
                                                ;   {runtime_call}
  0x000000010210b3e8: jmpq   0x000000010210b2dc
  0x000000010210b3ed: nop
  0x000000010210b3ee: nop
  0x000000010210b3ef: mov    0x2a8(%r15),%rax
  0x000000010210b3f6: movabs $0x0,%r10
  0x000000010210b400: mov    %r10,0x2a8(%r15)
  0x000000010210b407: movabs $0x0,%r10
  0x000000010210b411: mov    %r10,0x2b0(%r15)
  0x000000010210b418: add    $0x40,%rsp
  0x000000010210b41c: pop    %rbp
  0x000000010210b41d: jmpq   0x000000010206e6a0  ;   {runtime_call}
  0x000000010210b422: hlt
  0x000000010210b423: hlt
  0x000000010210b424: hlt
  0x000000010210b425: hlt
  0x000000010210b426: hlt
  0x000000010210b427: hlt
  0x000000010210b428: hlt
  0x000000010210b429: hlt
  0x000000010210b42a: hlt
  0x000000010210b42b: hlt
  0x000000010210b42c: hlt
  0x000000010210b42d: hlt
  0x000000010210b42e: hlt
  0x000000010210b42f: hlt
  0x000000010210b430: hlt
  0x000000010210b431: hlt
  0x000000010210b432: hlt
  0x000000010210b433: hlt
  0x000000010210b434: hlt
  0x000000010210b435: hlt
  0x000000010210b436: hlt
  0x000000010210b437: hlt
  0x000000010210b438: hlt
  0x000000010210b439: hlt
  0x000000010210b43a: hlt
  0x000000010210b43b: hlt
  0x000000010210b43c: hlt
  0x000000010210b43d: hlt
  0x000000010210b43e: hlt
  0x000000010210b43f: hlt
[Stub Code]
  0x000000010210b440: nop                       ;   {no_reloc}
  0x000000010210b441: nop
  0x000000010210b442: nop
  0x000000010210b443: nop
  0x000000010210b444: nop
  0x000000010210b445: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010210b44f: jmpq   0x000000010210b44f  ;   {runtime_call}
[Exception Handler]
  0x000000010210b454: callq  0x00000001020fb9a0  ;   {runtime_call}
  0x000000010210b459: mov    %rsp,-0x28(%rsp)
  0x000000010210b45e: sub    $0x80,%rsp
  0x000000010210b465: mov    %rax,0x78(%rsp)
  0x000000010210b46a: mov    %rcx,0x70(%rsp)
  0x000000010210b46f: mov    %rdx,0x68(%rsp)
  0x000000010210b474: mov    %rbx,0x60(%rsp)
  0x000000010210b479: mov    %rbp,0x50(%rsp)
  0x000000010210b47e: mov    %rsi,0x48(%rsp)
  0x000000010210b483: mov    %rdi,0x40(%rsp)
  0x000000010210b488: mov    %r8,0x38(%rsp)
  0x000000010210b48d: mov    %r9,0x30(%rsp)
  0x000000010210b492: mov    %r10,0x28(%rsp)
  0x000000010210b497: mov    %r11,0x20(%rsp)
  0x000000010210b49c: mov    %r12,0x18(%rsp)
  0x000000010210b4a1: mov    %r13,0x10(%rsp)
  0x000000010210b4a6: mov    %r14,0x8(%rsp)
  0x000000010210b4ab: mov    %r15,(%rsp)
  0x000000010210b4af: movabs $0x100d1ee90,%rdi  ;   {external_word}
  0x000000010210b4b9: movabs $0x10210b459,%rsi  ;   {internal_word}
  0x000000010210b4c3: mov    %rsp,%rdx
  0x000000010210b4c6: and    $0xfffffffffffffff0,%rsp
  0x000000010210b4ca: callq  0x0000000100b4a196  ;   {runtime_call}
  0x000000010210b4cf: hlt
[Deopt Handler Code]
  0x000000010210b4d0: movabs $0x10210b4d0,%r10  ;   {section_word}
  0x000000010210b4da: push   %r10
  0x000000010210b4dc: jmpq   0x00000001020473c0  ;   {runtime_call}
  0x000000010210b4e1: hlt
  0x000000010210b4e2: hlt
  0x000000010210b4e3: hlt
  0x000000010210b4e4: hlt
  0x000000010210b4e5: hlt
  0x000000010210b4e6: hlt
  0x000000010210b4e7: hlt
Decoding compiled method 0x000000010210b750:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000115e6c480} '<init>' '()V' in 'java/lang/Object'
  #           [sp+0x40]  (sp of caller)
  0x000000010210b8c0: mov    0x8(%rsi),%r10d
  0x000000010210b8c4: shl    $0x3,%r10
  0x000000010210b8c8: cmp    %rax,%r10
  0x000000010210b8cb: jne    0x0000000102045e20  ;   {runtime_call}
  0x000000010210b8d1: data32 data32 nopw 0x0(%rax,%rax,1)
  0x000000010210b8dc: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x000000010210b8e0: mov    %eax,-0x14000(%rsp)
  0x000000010210b8e7: push   %rbp
  0x000000010210b8e8: sub    $0x30,%rsp
  0x000000010210b8ec: movabs $0x115fe7460,%rdi  ;   {metadata(method data for {method} {0x0000000115e6c480} '<init>' '()V' in 'java/lang/Object')}
  0x000000010210b8f6: mov    0xdc(%rdi),%ebx
  0x000000010210b8fc: add    $0x8,%ebx
  0x000000010210b8ff: mov    %ebx,0xdc(%rdi)
  0x000000010210b905: movabs $0x115e6c480,%rdi  ;   {metadata({method} {0x0000000115e6c480} '<init>' '()V' in 'java/lang/Object')}
  0x000000010210b90f: and    $0x1ff8,%ebx
  0x000000010210b915: cmp    $0x0,%ebx
  0x000000010210b918: je     0x000000010210b937
  0x000000010210b91e: mov    %rsi,%rdi          ;*return
                                                ; - java.lang.Object::<init>@0 (line 37)

  0x000000010210b921: mov    %rsi,0x20(%rsp)
  0x000000010210b926: callq  0x000000010206d8a0  ; OopMap{[32]=Oop off=107}
                                                ;*return
                                                ; - java.lang.Object::<init>@0 (line 37)
                                                ;   {runtime_call}
  0x000000010210b92b: add    $0x30,%rsp
  0x000000010210b92f: pop    %rbp
  0x000000010210b930: test   %eax,-0x9df836(%rip)        # 0x000000010172c100
                                                ;   {poll_return}
  0x000000010210b936: retq
  0x000000010210b937: mov    %rdi,0x8(%rsp)
  0x000000010210b93c: movq   $0xffffffffffffffff,(%rsp)
  0x000000010210b944: callq  0x00000001020fe020  ; OopMap{rsi=Oop off=137}
                                                ;*synchronization entry
                                                ; - java.lang.Object::<init>@-1 (line 37)
                                                ;   {runtime_call}
  0x000000010210b949: jmp    0x000000010210b91e
  0x000000010210b94b: nop
  0x000000010210b94c: nop
  0x000000010210b94d: mov    0x2a8(%r15),%rax
  0x000000010210b954: movabs $0x0,%r10
  0x000000010210b95e: mov    %r10,0x2a8(%r15)
  0x000000010210b965: movabs $0x0,%r10
  0x000000010210b96f: mov    %r10,0x2b0(%r15)
  0x000000010210b976: add    $0x30,%rsp
  0x000000010210b97a: pop    %rbp
  0x000000010210b97b: jmpq   0x000000010206e6a0  ;   {runtime_call}
[Exception Handler]
[Stub Code]
  0x000000010210b980: callq  0x00000001020fb9a0  ;   {no_reloc}
  0x000000010210b985: mov    %rsp,-0x28(%rsp)
  0x000000010210b98a: sub    $0x80,%rsp
  0x000000010210b991: mov    %rax,0x78(%rsp)
  0x000000010210b996: mov    %rcx,0x70(%rsp)
  0x000000010210b99b: mov    %rdx,0x68(%rsp)
  0x000000010210b9a0: mov    %rbx,0x60(%rsp)
  0x000000010210b9a5: mov    %rbp,0x50(%rsp)
  0x000000010210b9aa: mov    %rsi,0x48(%rsp)
  0x000000010210b9af: mov    %rdi,0x40(%rsp)
  0x000000010210b9b4: mov    %r8,0x38(%rsp)
  0x000000010210b9b9: mov    %r9,0x30(%rsp)
  0x000000010210b9be: mov    %r10,0x28(%rsp)
  0x000000010210b9c3: mov    %r11,0x20(%rsp)
  0x000000010210b9c8: mov    %r12,0x18(%rsp)
  0x000000010210b9cd: mov    %r13,0x10(%rsp)
  0x000000010210b9d2: mov    %r14,0x8(%rsp)
  0x000000010210b9d7: mov    %r15,(%rsp)
  0x000000010210b9db: movabs $0x100d1ee90,%rdi  ;   {external_word}
  0x000000010210b9e5: movabs $0x10210b985,%rsi  ;   {internal_word}
  0x000000010210b9ef: mov    %rsp,%rdx
  0x000000010210b9f2: and    $0xfffffffffffffff0,%rsp
  0x000000010210b9f6: callq  0x0000000100b4a196  ;   {runtime_call}
  0x000000010210b9fb: hlt
[Deopt Handler Code]
  0x000000010210b9fc: movabs $0x10210b9fc,%r10  ;   {section_word}
  0x000000010210ba06: push   %r10
  0x000000010210ba08: jmpq   0x00000001020473c0  ;   {runtime_call}
  0x000000010210ba0d: hlt
  0x000000010210ba0e: hlt
  0x000000010210ba0f: hlt
Decoding compiled method 0x000000010210bad0:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000115e702a0} 'getChars' '(II[CI)V' in 'java/lang/String'
  # this:     rsi:rsi   = 'java/lang/String'
  # parm0:    rdx       = int
  # parm1:    rcx       = int
  # parm2:    r8:r8     = '[C'
  # parm3:    r9        = int
  #           [sp+0x90]  (sp of caller)
  0x000000010210bca0: mov    0x8(%rsi),%r10d
  0x000000010210bca4: shl    $0x3,%r10
  0x000000010210bca8: cmp    %rax,%r10
  0x000000010210bcab: jne    0x0000000102045e20  ;   {runtime_call}
  0x000000010210bcb1: data32 data32 nopw 0x0(%rax,%rax,1)
  0x000000010210bcbc: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x000000010210bcc0: mov    %eax,-0x14000(%rsp)
  0x000000010210bcc7: push   %rbp
  0x000000010210bcc8: sub    $0x80,%rsp
  0x000000010210bccf: mov    %rsi,0x50(%rsp)
  0x000000010210bcd4: mov    %edx,0x3c(%rsp)
  0x000000010210bcd8: mov    %ecx,0x38(%rsp)
  0x000000010210bcdc: mov    %r8,0x48(%rsp)
  0x000000010210bce1: mov    %r9d,0x40(%rsp)
  0x000000010210bce6: movabs $0x116073c78,%rdi  ;   {metadata(method data for {method} {0x0000000115e702a0} 'getChars' '(II[CI)V' in 'java/lang/String')}
  0x000000010210bcf0: mov    0xdc(%rdi),%ebx
  0x000000010210bcf6: add    $0x8,%ebx
  0x000000010210bcf9: mov    %ebx,0xdc(%rdi)
  0x000000010210bcff: movabs $0x115e702a0,%rdi  ;   {metadata({method} {0x0000000115e702a0} 'getChars' '(II[CI)V' in 'java/lang/String')}
  0x000000010210bd09: and    $0x1ff8,%ebx
  0x000000010210bd0f: cmp    $0x0,%ebx
  0x000000010210bd12: je     0x000000010210bf79  ;*iload_1
                                                ; - java.lang.String::getChars@0 (line 817)

  0x000000010210bd18: cmp    $0x0,%edx
  0x000000010210bd1b: movabs $0x116073c78,%rdi  ;   {metadata(method data for {method} {0x0000000115e702a0} 'getChars' '(II[CI)V' in 'java/lang/String')}
  0x000000010210bd25: movabs $0x108,%rbx
  0x000000010210bd2f: jge    0x000000010210bd3f
  0x000000010210bd35: movabs $0x118,%rbx
  0x000000010210bd3f: mov    (%rdi,%rbx,1),%rax
  0x000000010210bd43: lea    0x1(%rax),%rax
  0x000000010210bd47: mov    %rax,(%rdi,%rbx,1)
  0x000000010210bd4b: jl     0x000000010210bf29  ;*ifge
                                                ; - java.lang.String::getChars@1 (line 817)

  0x000000010210bd51: mov    0xc(%rsi),%edi
  0x000000010210bd54: shl    $0x3,%rdi          ;*getfield value
                                                ; - java.lang.String::getChars@15 (line 820)

  0x000000010210bd58: mov    0xc(%rdi),%ebx     ;*arraylength
                                                ; - java.lang.String::getChars@18 (line 820)
                                                ; implicit exception: dispatches to 0x000000010210bf90
  0x000000010210bd5b: cmp    %ebx,%ecx
  0x000000010210bd5d: movabs $0x116073c78,%rbx  ;   {metadata(method data for {method} {0x0000000115e702a0} 'getChars' '(II[CI)V' in 'java/lang/String')}
  0x000000010210bd67: movabs $0x138,%rax
  0x000000010210bd71: jle    0x000000010210bd81
  0x000000010210bd77: movabs $0x148,%rax
  0x000000010210bd81: mov    (%rbx,%rax,1),%r11
  0x000000010210bd85: lea    0x1(%r11),%r11
  0x000000010210bd89: mov    %r11,(%rbx,%rax,1)
  0x000000010210bd8d: jg     0x000000010210bed1  ;*if_icmple
                                                ; - java.lang.String::getChars@19 (line 820)

  0x000000010210bd93: cmp    %ecx,%edx
  0x000000010210bd95: movabs $0x116073c78,%rbx  ;   {metadata(method data for {method} {0x0000000115e702a0} 'getChars' '(II[CI)V' in 'java/lang/String')}
  0x000000010210bd9f: movabs $0x168,%rax
  0x000000010210bda9: jle    0x000000010210bdb9
  0x000000010210bdaf: movabs $0x178,%rax
  0x000000010210bdb9: mov    (%rbx,%rax,1),%r11
  0x000000010210bdbd: lea    0x1(%r11),%r11
  0x000000010210bdc1: mov    %r11,(%rbx,%rax,1)
  0x000000010210bdc5: jg     0x000000010210be7c  ;*if_icmple
                                                ; - java.lang.String::getChars@33 (line 823)

  0x000000010210bdcb: movabs $0x116073c78,%rbx  ;   {metadata(method data for {method} {0x0000000115e702a0} 'getChars' '(II[CI)V' in 'java/lang/String')}
  0x000000010210bdd5: addq   $0x1,0x198(%rbx)
  0x000000010210bddd: mov    %rcx,%rbx
  0x000000010210bde0: sub    %edx,%ebx
  0x000000010210bde2: mov    %rdi,%rsi
  0x000000010210bde5: mov    %rdx,%rdi
  0x000000010210bde8: mov    %rdi,%rdx
  0x000000010210bdeb: mov    %r8,%rcx
  0x000000010210bdee: mov    %r9,%r8
  0x000000010210bdf1: mov    %rbx,%r9
  0x000000010210bdf4: test   %rcx,%rcx
  0x000000010210bdf7: je     0x000000010210bf95
  0x000000010210bdfd: test   %edx,%edx
  0x000000010210bdff: jl     0x000000010210bf95
  0x000000010210be05: test   %r8d,%r8d
  0x000000010210be08: jl     0x000000010210bf95
  0x000000010210be0e: lea    (%rdx,%r9,1),%rdi
  0x000000010210be12: cmp    0xc(%rsi),%edi
  0x000000010210be15: ja     0x000000010210bf95
  0x000000010210be1b: lea    (%r8,%r9,1),%rdi
  0x000000010210be1f: cmp    0xc(%rcx),%edi
  0x000000010210be22: ja     0x000000010210bf95
  0x000000010210be28: test   %r9d,%r9d
  0x000000010210be2b: jl     0x000000010210bf95
  0x000000010210be31: je     0x000000010210be6d
  0x000000010210be37: movslq %edx,%rdx
  0x000000010210be3a: movslq %r8d,%r8
  0x000000010210be3d: lea    0x10(%rsi,%rdx,2),%rdi
  0x000000010210be42: lea    0x10(%rcx,%r8,2),%rsi
  0x000000010210be47: mov    %r9,%rdx
  0x000000010210be4a: test   $0xf,%esp
  0x000000010210be50: je     0x000000010210be68
  0x000000010210be56: sub    $0x8,%rsp
  0x000000010210be5a: callq  Stub::jshort_arraycopy  ;   {runtime_call}
  0x000000010210be5f: add    $0x8,%rsp
  0x000000010210be63: jmpq   0x000000010210be6d
  0x000000010210be68: callq  Stub::jshort_arraycopy  ;*invokestatic arraycopy
                                                ; - java.lang.String::getChars@58 (line 826)
                                                ;   {runtime_call}
  0x000000010210be6d: add    $0x80,%rsp
  0x000000010210be74: pop    %rbp
  0x000000010210be75: test   %eax,-0x9dfd7b(%rip)        # 0x000000010172c100
                                                ;   {poll_return}
  0x000000010210be7b: retq                      ;*return
                                                ; - java.lang.String::getChars@61 (line 827)

  0x000000010210be7c: nopl   0x0(%rax)
  0x000000010210be80: jmpq   0x000000010210bfb0  ;   {no_reloc}
  0x000000010210be85: add    %al,(%rax)
  0x000000010210be87: add    %al,(%rax)
  0x000000010210be89: add    %ch,%cl
  0x000000010210be8b: sub    (%rcx),%eax
  0x000000010210be8d: add    %al,(%rax)         ;*new  ; - java.lang.String::getChars@36 (line 824)

  0x000000010210be8f: mov    %rax,%rdx
  0x000000010210be92: movabs $0x116073c78,%rsi  ;   {metadata(method data for {method} {0x0000000115e702a0} 'getChars' '(II[CI)V' in 'java/lang/String')}
  0x000000010210be9c: addq   $0x1,0x188(%rsi)
  0x000000010210bea4: mov    0x38(%rsp),%ecx
  0x000000010210bea8: sub    0x3c(%rsp),%ecx
  0x000000010210beac: mov    %rcx,%rdx
  0x000000010210beaf: mov    %rax,%rsi          ;*invokespecial <init>
                                                ; - java.lang.String::getChars@43 (line 824)

  0x000000010210beb2: mov    %rax,0x58(%rsp)
  0x000000010210beb7: callq  0x0000000102046020  ; OopMap{[72]=Oop [80]=Oop [88]=Oop off=540}
                                                ;*invokespecial <init>
                                                ; - java.lang.String::getChars@43 (line 824)
                                                ;   {optimized virtual_call}
  0x000000010210bebc: mov    0x58(%rsp),%rax    ; OopMap{[72]=Oop [80]=Oop rax=Oop off=545}
                                                ;*athrow
                                                ; - java.lang.String::getChars@46 (line 824)

  0x000000010210bec1: movabs $0x10210bec1,%rdx  ;   {section_word}
  0x000000010210becb: callq  0x000000010206bfa0  ;   {runtime_call}
  0x000000010210bed0: nop                       ;*athrow
                                                ; - java.lang.String::getChars@46 (line 824)

  0x000000010210bed1: nopl   0x0(%rax)
  0x000000010210bed8: jmpq   0x000000010210bfd6  ;   {no_reloc}
  0x000000010210bedd: add    %al,(%rax)
  0x000000010210bedf: add    %al,(%rax)
  0x000000010210bee1: add    %ch,%cl
  0x000000010210bee3: stc
  0x000000010210bee4: add    %al,(%rax)
  0x000000010210bee6: add    %cl,-0x75(%rax)    ;*new  ; - java.lang.String::getChars@22 (line 821)

  0x000000010210bee9: rorb   -0x42(%rax)        ;   {metadata(method data for {method} {0x0000000115e702a0} 'getChars' '(II[CI)V' in 'java/lang/String')}
  0x000000010210beec: js     0x000000010210bf2a
  0x000000010210beee: (bad)
  0x000000010210beef: (bad)
  0x000000010210bef0: add    %eax,(%rax)
  0x000000010210bef2: add    %al,(%rax)
  0x000000010210bef4: addq   $0x1,0x158(%rsi)
  0x000000010210befc: mov    0x38(%rsp),%edx
  0x000000010210bf00: mov    %rax,%rsi          ;*invokespecial <init>
                                                ; - java.lang.String::getChars@27 (line 821)

  0x000000010210bf03: mov    %rax,0x60(%rsp)
  0x000000010210bf08: nop
  0x000000010210bf09: nop
  0x000000010210bf0a: nop
  0x000000010210bf0b: nop
  0x000000010210bf0c: nop
  0x000000010210bf0d: nop
  0x000000010210bf0e: nop
  0x000000010210bf0f: callq  0x0000000102046020  ; OopMap{[80]=Oop [72]=Oop [96]=Oop off=628}
                                                ;*invokespecial <init>
                                                ; - java.lang.String::getChars@27 (line 821)
                                                ;   {optimized virtual_call}
  0x000000010210bf14: mov    0x60(%rsp),%rax    ; OopMap{[80]=Oop [72]=Oop rax=Oop off=633}
                                                ;*athrow
                                                ; - java.lang.String::getChars@30 (line 821)

  0x000000010210bf19: movabs $0x10210bf19,%rdx  ;   {section_word}
  0x000000010210bf23: callq  0x000000010206bfa0  ;   {runtime_call}
  0x000000010210bf28: nop                       ;*athrow
                                                ; - java.lang.String::getChars@30 (line 821)

  0x000000010210bf29: mov    %rdx,%rdi
  0x000000010210bf2c: nopl   0x0(%rax)
  0x000000010210bf30: jmpq   0x000000010210bffc  ;   {no_reloc}
  0x000000010210bf35: add    %al,(%rax)
  0x000000010210bf37: add    %al,(%rax)
  0x000000010210bf39: add    %ch,%cl
  0x000000010210bf3b: movl   $0x8b480000,(%rax)  ;*new
                                                ; - java.lang.String::getChars@4 (line 818)

  0x000000010210bf41: rorb   -0x45(%rax)        ;   {metadata(method data for {method} {0x0000000115e702a0} 'getChars' '(II[CI)V' in 'java/lang/String')}
  0x000000010210bf44: js     0x000000010210bf82
  0x000000010210bf46: (bad)
  0x000000010210bf47: (bad)
  0x000000010210bf48: add    %eax,(%rax)
  0x000000010210bf4a: add    %al,(%rax)
  0x000000010210bf4c: addq   $0x1,0x128(%rbx)
  0x000000010210bf54: mov    %rdi,%rdx
  0x000000010210bf57: mov    %rax,%rsi          ;*invokespecial <init>
                                                ; - java.lang.String::getChars@9 (line 818)

  0x000000010210bf5a: mov    %rax,0x68(%rsp)
  0x000000010210bf5f: callq  0x0000000102046020  ; OopMap{[72]=Oop [80]=Oop [104]=Oop off=708}
                                                ;*invokespecial <init>
                                                ; - java.lang.String::getChars@9 (line 818)
                                                ;   {optimized virtual_call}
  0x000000010210bf64: mov    0x68(%rsp),%rax    ; OopMap{[72]=Oop [80]=Oop rax=Oop off=713}
                                                ;*athrow
                                                ; - java.lang.String::getChars@12 (line 818)

  0x000000010210bf69: movabs $0x10210bf69,%rdx  ;   {section_word}
  0x000000010210bf73: callq  0x000000010206bfa0  ;   {runtime_call}
  0x000000010210bf78: nop
  0x000000010210bf79: mov    %rdi,0x8(%rsp)
  0x000000010210bf7e: movq   $0xffffffffffffffff,(%rsp)
  0x000000010210bf86: callq  0x00000001020fe020  ; OopMap{rsi=Oop [80]=Oop r8=Oop [72]=Oop off=747}
                                                ;*synchronization entry
                                                ; - java.lang.String::getChars@-1 (line 817)
                                                ;   {runtime_call}
  0x000000010210bf8b: jmpq   0x000000010210bd18
  0x000000010210bf90: callq  0x000000010206db40  ; OopMap{rsi=Oop [80]=Oop r8=Oop [72]=Oop rdi=Oop off=757}
                                                ;*arraylength
                                                ; - java.lang.String::getChars@18 (line 820)
                                                ;   {runtime_call}
  0x000000010210bf95: nop
  0x000000010210bf96: nop
  0x000000010210bf97: callq  0x0000000102046420  ; OopMap{[80]=Oop [72]=Oop off=764}
                                                ;*invokestatic arraycopy
                                                ; - java.lang.String::getChars@58 (line 826)
                                                ;   {static_call}
  0x000000010210bf9c: jmpq   0x000000010210be6d
  0x000000010210bfa1: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x000000010210bfab: mov    $0xa050f00,%eax
  0x000000010210bfb0: callq  0x00000001020fd020  ; OopMap{[72]=Oop [80]=Oop off=789}
                                                ;*new  ; - java.lang.String::getChars@36 (line 824)
                                                ;   {runtime_call}
  0x000000010210bfb5: jmpq   0x000000010210be80
  0x000000010210bfba: mov    %rdx,%rdx
  0x000000010210bfbd: callq  0x000000010206d620  ; OopMap{[72]=Oop [80]=Oop off=802}
                                                ;*new  ; - java.lang.String::getChars@36 (line 824)
                                                ;   {runtime_call}
  0x000000010210bfc2: jmpq   0x000000010210be8f
  0x000000010210bfc7: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x000000010210bfd1: mov    $0xa050f00,%eax
  0x000000010210bfd6: callq  0x00000001020fd020  ; OopMap{[80]=Oop [72]=Oop off=827}
                                                ;*new  ; - java.lang.String::getChars@22 (line 821)
                                                ;   {runtime_call}
  0x000000010210bfdb: jmpq   0x000000010210bed8
  0x000000010210bfe0: mov    %rdx,%rdx
  0x000000010210bfe3: callq  0x000000010206d620  ; OopMap{[80]=Oop [72]=Oop off=840}
                                                ;*new  ; - java.lang.String::getChars@22 (line 821)
                                                ;   {runtime_call}
  0x000000010210bfe8: jmpq   0x000000010210bee7
  0x000000010210bfed: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x000000010210bff7: mov    $0xa050f00,%eax
  0x000000010210bffc: callq  0x00000001020fd020  ; OopMap{[80]=Oop [72]=Oop off=865}
                                                ;*new  ; - java.lang.String::getChars@4 (line 818)
                                                ;   {runtime_call}
  0x000000010210c001: jmpq   0x000000010210bf30
  0x000000010210c006: mov    %rdx,%rdx
  0x000000010210c009: callq  0x000000010206d620  ; OopMap{[80]=Oop [72]=Oop off=878}
                                                ;*new  ; - java.lang.String::getChars@4 (line 818)
                                                ;   {runtime_call}
  0x000000010210c00e: jmpq   0x000000010210bf3f
  0x000000010210c013: nop
  0x000000010210c014: nop
  0x000000010210c015: mov    0x2a8(%r15),%rax
  0x000000010210c01c: movabs $0x0,%r10
  0x000000010210c026: mov    %r10,0x2a8(%r15)
  0x000000010210c02d: movabs $0x0,%r10
  0x000000010210c037: mov    %r10,0x2b0(%r15)
  0x000000010210c03e: add    $0x80,%rsp
  0x000000010210c045: pop    %rbp
  0x000000010210c046: jmpq   0x000000010206e6a0  ;   {runtime_call}
  0x000000010210c04b: hlt
  0x000000010210c04c: hlt
  0x000000010210c04d: hlt
  0x000000010210c04e: hlt
  0x000000010210c04f: hlt
  0x000000010210c050: hlt
  0x000000010210c051: hlt
  0x000000010210c052: hlt
  0x000000010210c053: hlt
  0x000000010210c054: hlt
  0x000000010210c055: hlt
  0x000000010210c056: hlt
  0x000000010210c057: hlt
  0x000000010210c058: hlt
  0x000000010210c059: hlt
  0x000000010210c05a: hlt
  0x000000010210c05b: hlt
  0x000000010210c05c: hlt
  0x000000010210c05d: hlt
  0x000000010210c05e: hlt
  0x000000010210c05f: hlt
[Stub Code]
  0x000000010210c060: nop                       ;   {no_reloc}
  0x000000010210c061: nop
  0x000000010210c062: nop
  0x000000010210c063: nop
  0x000000010210c064: nop
  0x000000010210c065: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010210c06f: jmpq   0x000000010210c06f  ;   {runtime_call}
  0x000000010210c074: nop
  0x000000010210c075: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010210c07f: jmpq   0x000000010210c07f  ;   {runtime_call}
  0x000000010210c084: nop
  0x000000010210c085: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010210c08f: jmpq   0x000000010210c08f  ;   {runtime_call}
  0x000000010210c094: nop
  0x000000010210c095: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010210c09f: jmpq   0x000000010210c09f  ;   {runtime_call}
[Exception Handler]
  0x000000010210c0a4: callq  0x00000001020fb9a0  ;   {runtime_call}
  0x000000010210c0a9: mov    %rsp,-0x28(%rsp)
  0x000000010210c0ae: sub    $0x80,%rsp
  0x000000010210c0b5: mov    %rax,0x78(%rsp)
  0x000000010210c0ba: mov    %rcx,0x70(%rsp)
  0x000000010210c0bf: mov    %rdx,0x68(%rsp)
  0x000000010210c0c4: mov    %rbx,0x60(%rsp)
  0x000000010210c0c9: mov    %rbp,0x50(%rsp)
  0x000000010210c0ce: mov    %rsi,0x48(%rsp)
  0x000000010210c0d3: mov    %rdi,0x40(%rsp)
  0x000000010210c0d8: mov    %r8,0x38(%rsp)
  0x000000010210c0dd: mov    %r9,0x30(%rsp)
  0x000000010210c0e2: mov    %r10,0x28(%rsp)
  0x000000010210c0e7: mov    %r11,0x20(%rsp)
  0x000000010210c0ec: mov    %r12,0x18(%rsp)
  0x000000010210c0f1: mov    %r13,0x10(%rsp)
  0x000000010210c0f6: mov    %r14,0x8(%rsp)
  0x000000010210c0fb: mov    %r15,(%rsp)
  0x000000010210c0ff: movabs $0x100d1ee90,%rdi  ;   {external_word}
  0x000000010210c109: movabs $0x10210c0a9,%rsi  ;   {internal_word}
  0x000000010210c113: mov    %rsp,%rdx
  0x000000010210c116: and    $0xfffffffffffffff0,%rsp
  0x000000010210c11a: callq  0x0000000100b4a196  ;   {runtime_call}
  0x000000010210c11f: hlt
[Deopt Handler Code]
  0x000000010210c120: movabs $0x10210c120,%r10  ;   {section_word}
  0x000000010210c12a: push   %r10
  0x000000010210c12c: jmpq   0x00000001020473c0  ;   {runtime_call}
  0x000000010210c131: hlt
  0x000000010210c132: hlt
  0x000000010210c133: hlt
  0x000000010210c134: hlt
  0x000000010210c135: hlt
  0x000000010210c136: hlt
  0x000000010210c137: hlt
Decoding compiled method 0x000000010210c490:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x0000000115f64fd8} 'min' '(II)I' in 'java/lang/Math'
  # parm0:    rsi       = int
  # parm1:    rdx       = int
  #           [sp+0x40]  (sp of caller)
  0x000000010210c600: mov    %eax,-0x14000(%rsp)
  0x000000010210c607: push   %rbp
  0x000000010210c608: sub    $0x30,%rsp
  0x000000010210c60c: movabs $0x11603afa0,%rax  ;   {metadata(method data for {method} {0x0000000115f64fd8} 'min' '(II)I' in 'java/lang/Math')}
  0x000000010210c616: mov    0xdc(%rax),%edi
  0x000000010210c61c: add    $0x8,%edi
  0x000000010210c61f: mov    %edi,0xdc(%rax)
  0x000000010210c625: movabs $0x115f64fd8,%rax  ;   {metadata({method} {0x0000000115f64fd8} 'min' '(II)I' in 'java/lang/Math')}
  0x000000010210c62f: and    $0x1ff8,%edi
  0x000000010210c635: cmp    $0x0,%edi
  0x000000010210c638: je     0x000000010210c69d  ;*iload_0
                                                ; - java.lang.Math::min@0 (line 1336)

  0x000000010210c63e: cmp    %edx,%esi
  0x000000010210c640: movabs $0x11603afa0,%rax  ;   {metadata(method data for {method} {0x0000000115f64fd8} 'min' '(II)I' in 'java/lang/Math')}
  0x000000010210c64a: movabs $0x108,%rdi
  0x000000010210c654: jg     0x000000010210c664
  0x000000010210c65a: movabs $0x118,%rdi
  0x000000010210c664: mov    (%rax,%rdi,1),%rbx
  0x000000010210c668: lea    0x1(%rbx),%rbx
  0x000000010210c66c: mov    %rbx,(%rax,%rdi,1)
  0x000000010210c670: jg     0x000000010210c68b  ;*if_icmpgt
                                                ; - java.lang.Math::min@2 (line 1336)

  0x000000010210c676: movabs $0x11603afa0,%rax  ;   {metadata(method data for {method} {0x0000000115f64fd8} 'min' '(II)I' in 'java/lang/Math')}
  0x000000010210c680: incl   0x128(%rax)
  0x000000010210c686: jmpq   0x000000010210c68e  ;*goto
                                                ; - java.lang.Math::min@6 (line 1336)

  0x000000010210c68b: mov    %rdx,%rsi          ;*ireturn
                                                ; - java.lang.Math::min@10 (line 1336)

  0x000000010210c68e: mov    %rsi,%rax
  0x000000010210c691: add    $0x30,%rsp
  0x000000010210c695: pop    %rbp
  0x000000010210c696: test   %eax,-0x9e059c(%rip)        # 0x000000010172c100
                                                ;   {poll_return}
  0x000000010210c69c: retq
  0x000000010210c69d: mov    %rax,0x8(%rsp)
  0x000000010210c6a2: movq   $0xffffffffffffffff,(%rsp)
  0x000000010210c6aa: callq  0x00000001020fe020  ; OopMap{off=175}
                                                ;*synchronization entry
                                                ; - java.lang.Math::min@-1 (line 1336)
                                                ;   {runtime_call}
  0x000000010210c6af: jmp    0x000000010210c63e
  0x000000010210c6b1: nop
  0x000000010210c6b2: nop
  0x000000010210c6b3: mov    0x2a8(%r15),%rax
  0x000000010210c6ba: movabs $0x0,%r10
  0x000000010210c6c4: mov    %r10,0x2a8(%r15)
  0x000000010210c6cb: movabs $0x0,%r10
  0x000000010210c6d5: mov    %r10,0x2b0(%r15)
  0x000000010210c6dc: add    $0x30,%rsp
  0x000000010210c6e0: pop    %rbp
  0x000000010210c6e1: jmpq   0x000000010206e6a0  ;   {runtime_call}
  0x000000010210c6e6: hlt
  0x000000010210c6e7: hlt
  0x000000010210c6e8: hlt
  0x000000010210c6e9: hlt
  0x000000010210c6ea: hlt
  0x000000010210c6eb: hlt
  0x000000010210c6ec: hlt
  0x000000010210c6ed: hlt
  0x000000010210c6ee: hlt
  0x000000010210c6ef: hlt
  0x000000010210c6f0: hlt
  0x000000010210c6f1: hlt
  0x000000010210c6f2: hlt
  0x000000010210c6f3: hlt
  0x000000010210c6f4: hlt
  0x000000010210c6f5: hlt
  0x000000010210c6f6: hlt
  0x000000010210c6f7: hlt
  0x000000010210c6f8: hlt
  0x000000010210c6f9: hlt
  0x000000010210c6fa: hlt
  0x000000010210c6fb: hlt
  0x000000010210c6fc: hlt
  0x000000010210c6fd: hlt
  0x000000010210c6fe: hlt
  0x000000010210c6ff: hlt
[Exception Handler]
[Stub Code]
  0x000000010210c700: callq  0x00000001020fb9a0  ;   {no_reloc}
  0x000000010210c705: mov    %rsp,-0x28(%rsp)
  0x000000010210c70a: sub    $0x80,%rsp
  0x000000010210c711: mov    %rax,0x78(%rsp)
  0x000000010210c716: mov    %rcx,0x70(%rsp)
  0x000000010210c71b: mov    %rdx,0x68(%rsp)
  0x000000010210c720: mov    %rbx,0x60(%rsp)
  0x000000010210c725: mov    %rbp,0x50(%rsp)
  0x000000010210c72a: mov    %rsi,0x48(%rsp)
  0x000000010210c72f: mov    %rdi,0x40(%rsp)
  0x000000010210c734: mov    %r8,0x38(%rsp)
  0x000000010210c739: mov    %r9,0x30(%rsp)
  0x000000010210c73e: mov    %r10,0x28(%rsp)
  0x000000010210c743: mov    %r11,0x20(%rsp)
  0x000000010210c748: mov    %r12,0x18(%rsp)
  0x000000010210c74d: mov    %r13,0x10(%rsp)
  0x000000010210c752: mov    %r14,0x8(%rsp)
  0x000000010210c757: mov    %r15,(%rsp)
  0x000000010210c75b: movabs $0x100d1ee90,%rdi  ;   {external_word}
  0x000000010210c765: movabs $0x10210c705,%rsi  ;   {internal_word}
  0x000000010210c76f: mov    %rsp,%rdx
  0x000000010210c772: and    $0xfffffffffffffff0,%rsp
  0x000000010210c776: callq  0x0000000100b4a196  ;   {runtime_call}
  0x000000010210c77b: hlt
[Deopt Handler Code]
  0x000000010210c77c: movabs $0x10210c77c,%r10  ;   {section_word}
  0x000000010210c786: push   %r10
  0x000000010210c788: jmpq   0x00000001020473c0  ;   {runtime_call}
  0x000000010210c78d: hlt
  0x000000010210c78e: hlt
  0x000000010210c78f: hlt
Decoding compiled method 0x000000010210f550:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000115e6fe48} 'charAt' '(I)C' in 'java/lang/String'
  # this:     rsi:rsi   = 'java/lang/String'
  # parm0:    rdx       = int
  #           [sp+0x30]  (sp of caller)
  0x000000010210f6a0: mov    0x8(%rsi),%r10d
  0x000000010210f6a4: shl    $0x3,%r10
  0x000000010210f6a8: cmp    %r10,%rax
  0x000000010210f6ab: jne    0x0000000102045e20  ;   {runtime_call}
  0x000000010210f6b1: data32 xchg %ax,%ax
  0x000000010210f6b4: nopl   0x0(%rax,%rax,1)
  0x000000010210f6bc: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x000000010210f6c0: mov    %eax,-0x14000(%rsp)
  0x000000010210f6c7: push   %rbp
  0x000000010210f6c8: sub    $0x20,%rsp         ;*synchronization entry
                                                ; - java.lang.String::charAt@-1 (line 657)

  0x000000010210f6cc: test   %edx,%edx
  0x000000010210f6ce: jl     0x000000010210f73d  ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)

  0x000000010210f6d0: mov    0xc(%rsi),%r11d    ;*getfield value
                                                ; - java.lang.String::charAt@6 (line 657)

  0x000000010210f6d4: test   %r11d,%r11d
  0x000000010210f6d7: je     0x000000010210f6fc
  0x000000010210f6d9: mov    0xc(%r12,%r11,8),%ebp  ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)

  0x000000010210f6de: cmp    %ebp,%edx
  0x000000010210f6e0: jge    0x000000010210f755  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)

  0x000000010210f6e2: cmp    %ebp,%edx
  0x000000010210f6e4: jae    0x000000010210f721
  0x000000010210f6e6: lea    (%r12,%r11,8),%r10
  0x000000010210f6ea: movzwl 0x10(%r10,%rdx,2),%eax  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)

  0x000000010210f6f0: add    $0x20,%rsp
  0x000000010210f6f4: pop    %rbp
  0x000000010210f6f5: test   %eax,-0x9e36fb(%rip)        # 0x000000010172c000
                                                ;   {poll_return}
  0x000000010210f6fb: retq
  0x000000010210f6fc: mov    0x39c(%r15),%r11d
  0x000000010210f703: test   %r11d,%r11d
  0x000000010210f706: jne    0x000000010210f76d
  0x000000010210f708: mov    %rsi,%rbp
  0x000000010210f70b: mov    %edx,0x4(%rsp)
  0x000000010210f70f: mov    $0xfffffff6,%esi
  0x000000010210f714: data32 xchg %ax,%ax
  0x000000010210f717: callq  0x00000001020051a0  ; OopMap{rbp=Oop off=124}
                                                ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ;   {runtime_call}
  0x000000010210f71c: callq  0x0000000100bcc9dc  ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ;   {runtime_call}
  0x000000010210f721: mov    %rsi,%rbp
  0x000000010210f724: mov    %edx,0x4(%rsp)
  0x000000010210f728: mov    %r11d,0x8(%rsp)
  0x000000010210f72d: mov    $0xffffffe4,%esi
  0x000000010210f732: nop
  0x000000010210f733: callq  0x00000001020051a0  ; OopMap{rbp=Oop [8]=NarrowOop off=152}
                                                ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ;   {runtime_call}
  0x000000010210f738: callq  0x0000000100bcc9dc  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ;   {runtime_call}
  0x000000010210f73d: mov    %rsi,%rbp
  0x000000010210f740: mov    %edx,0x4(%rsp)
  0x000000010210f744: mov    $0xffffff65,%esi
  0x000000010210f749: xchg   %ax,%ax
  0x000000010210f74b: callq  0x00000001020051a0  ; OopMap{rbp=Oop off=176}
                                                ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ;   {runtime_call}
  0x000000010210f750: callq  0x0000000100bcc9dc  ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ;   {runtime_call}
  0x000000010210f755: mov    %rsi,(%rsp)
  0x000000010210f759: mov    %edx,0xc(%rsp)
  0x000000010210f75d: mov    $0xffffff65,%esi
  0x000000010210f762: nop
  0x000000010210f763: callq  0x00000001020051a0  ; OopMap{[0]=Oop off=200}
                                                ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ;   {runtime_call}
  0x000000010210f768: callq  0x0000000100bcc9dc  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ;   {runtime_call}
  0x000000010210f76d: mov    %rsi,%rbp
  0x000000010210f770: mov    %edx,0x4(%rsp)
  0x000000010210f774: mov    $0xfffffff7,%esi
  0x000000010210f779: xchg   %ax,%ax
  0x000000010210f77b: callq  0x00000001020051a0  ; OopMap{rbp=Oop off=224}
                                                ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ;   {runtime_call}
  0x000000010210f780: callq  0x0000000100bcc9dc  ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ;   {runtime_call}
  0x000000010210f785: hlt
  0x000000010210f786: hlt
  0x000000010210f787: hlt
  0x000000010210f788: hlt
  0x000000010210f789: hlt
  0x000000010210f78a: hlt
  0x000000010210f78b: hlt
  0x000000010210f78c: hlt
  0x000000010210f78d: hlt
  0x000000010210f78e: hlt
  0x000000010210f78f: hlt
  0x000000010210f790: hlt
  0x000000010210f791: hlt
  0x000000010210f792: hlt
  0x000000010210f793: hlt
  0x000000010210f794: hlt
  0x000000010210f795: hlt
  0x000000010210f796: hlt
  0x000000010210f797: hlt
  0x000000010210f798: hlt
  0x000000010210f799: hlt
  0x000000010210f79a: hlt
  0x000000010210f79b: hlt
  0x000000010210f79c: hlt
  0x000000010210f79d: hlt
  0x000000010210f79e: hlt
  0x000000010210f79f: hlt
[Exception Handler]
[Stub Code]
  0x000000010210f7a0: jmpq   0x0000000102057a60  ;   {no_reloc}
[Deopt Handler Code]
  0x000000010210f7a5: callq  0x000000010210f7aa
  0x000000010210f7aa: subq   $0x5,(%rsp)
  0x000000010210f7af: jmpq   0x00000001020473c0  ;   {runtime_call}
  0x000000010210f7b4: hlt
  0x000000010210f7b5: hlt
  0x000000010210f7b6: hlt
  0x000000010210f7b7: hlt
Decoding compiled method 0x000000010210ecd0:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000115ee21e0} 'ensureCapacit[Loaded sun.misc.URLClassPath$JarLoader$1 from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
yInternal' '(I)V' in 'java/lang/AbstractStringBuilder'
  # this:     rsi:rsi   = 'java/lang/AbstractStringBuilder'
  # parm0:    rdx       = int
  #           [sp+0xc0]  (sp of caller)
  0x000000010210ee60: mov    0x8(%rsi),%r10d
  0x000000010210ee64: shl    $0x3,%r10
  0x000000010210ee68: cmp    %rax,%r10
  0x000000010210ee6b: jne    0x0000000102045e20  ;   {runtime_call}
  0x000000010210ee71: data32 data32 nopw 0x0(%rax,%rax,1)
  0x000000010210ee7c: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x000000010210ee80: mov    %eax,-0x14000(%rsp)
  0x000000010210ee87: push   %rbp
  0x000000010210ee88: sub    $0xb0,%rsp
  0x000000010210ee8f: mov    %edx,0x7c(%rsp)
  0x000000010210ee93: movabs $0x116073e80,%rdi  ;   {metadata(method data for {method} {0x0000000115ee21e0} 'ensureCapacityInternal' '(I)V' in 'java/lang/AbstractStringBuilder')}
  0x000000010210ee9d: mov    0xdc(%rdi),%ebx
  0x000000010210eea3: add    $0x8,%ebx
  0x000000010210eea6: mov    %ebx,0xdc(%rdi)
  0x000000010210eeac: movabs $0x115ee21e0,%rdi  ;   {metadata({method} {0x0000000115ee21e0} 'ensureCapacityInternal' '(I)V' in 'java/lang/AbstractStringBuilder')}
  0x000000010210eeb6: and    $0x1ff8,%ebx
  0x000000010210eebc: cmp    $0x0,%ebx
  0x000000010210eebf: je     0x000000010210f17f  ;*iload_1
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@0 (line 123)

  0x000000010210eec5: mov    0x10(%rsi),%edi
  0x000000010210eec8: shl    $0x3,%rdi          ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@2 (line 123)

  0x000000010210eecc: mov    %rdi,0x80(%rsp)
  0x000000010210eed4: mov    0xc(%rdi),%ebx     ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; implicit exception: dispatches to 0x000000010210f196
  0x000000010210eed7: mov    %rdx,%rax
  0x000000010210eeda: sub    %ebx,%eax
  0x000000010210eedc: cmp    $0x0,%eax
  0x000000010210eedf: movabs $0x116073e80,%rax  ;   {metadata(method data for {method} {0x0000000115ee21e0} 'ensureCapacityInternal' '(I)V' in 'java/lang/AbstractStringBuilder')}
  0x000000010210eee9: movabs $0x108,%rcx
  0x000000010210eef3: jle    0x000000010210ef03
  0x000000010210eef9: movabs $0x118,%rcx
  0x000000010210ef03: mov    (%rax,%rcx,1),%r8
  0x000000010210ef07: lea    0x1(%r8),%r8
  0x000000010210ef0b: mov    %r8,(%rax,%rcx,1)
  0x000000010210ef0f: jle    0x000000010210f170  ;*ifle
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@7 (line 123)

  0x000000010210ef15: mov    %ebx,0x78(%rsp)
  0x000000010210ef19: mov    %rsi,%rax
  0x000000010210ef1c: movabs $0x116073e80,%rcx  ;   {metadata(method data for {method} {0x0000000115ee21e0} 'ensureCapacityInternal' '(I)V' in 'java/lang/AbstractStringBuilder')}
  0x000000010210ef26: addq   $0x1,0x128(%rcx)
  0x000000010210ef2e: mov    %rdx,%rax
  0x000000010210ef31: mov    %rax,%rdx
  0x000000010210ef34: mov    %rsi,%rcx
  0x000000010210ef37: mov    %rcx,%rsi          ;*invokespecial newCapacity
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)

  0x000000010210ef3a: mov    %rcx,0x88(%rsp)
  0x000000010210ef42: nop
  0x000000010210ef43: nop
  0x000000010210ef44: nop
  0x000000010210ef45: nop
  0x000000010210ef46: nop
  0x000000010210ef47: callq  0x0000000102046020  ; OopMap{[136]=Oop [128]=Oop off=236}
                                                ;*invokespecial newCapacity
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ;   {optimized virtual_call}
  0x000000010210ef4c: movabs $0x116073e80,%rbx  ;   {metadata(method data for {method} {0x0000000115ee21e0} 'ensureCapacityInternal' '(I)V' in 'java/lang/AbstractStringBuilder')}
  0x000000010210ef56: addq   $0x1,0x138(%rbx)
  0x000000010210ef5e: movabs $0x1160741c0,%rbx  ;   {metadata(method data for {method} {0x0000000115f89d30} 'copyOf' '([CI)[C' in 'java/util/Arrays')}
  0x000000010210ef68: mov    0xdc(%rbx),%edx
  0x000000010210ef6e: add    $0x8,%edx
  0x000000010210ef71: mov    %edx,0xdc(%rbx)
  0x000000010210ef77: movabs $0x115f89d30,%rbx  ;   {metadata({method} {0x0000000115f89d30} 'copyOf' '([CI)[C' in 'java/util/Arrays')}
  0x000000010210ef81: and    $0x7ffff8,%edx
  0x000000010210ef87: cmp    $0x0,%edx
  0x000000010210ef8a: je     0x000000010210f19b
  0x000000010210ef90: mov    %rax,%rbx
  0x000000010210ef93: movabs $0x7c0000208,%rdx  ;   {metadata({type array char})}
  0x000000010210ef9d: mov    %rax,%r11
  0x000000010210efa0: movslq %ebx,%rbx
  0x000000010210efa3: mov    %rbx,%rdi
  0x000000010210efa6: cmp    $0xffffff,%rbx
  0x000000010210efad: ja     0x000000010210f1b2
  0x000000010210efb3: movabs $0x17,%rsi
  0x000000010210efbd: lea    (%rsi,%rbx,2),%rsi
  0x000000010210efc1: and    $0xfffffffffffffff8,%rsi
  0x000000010210efc5: mov    0x60(%r15),%rax
  0x000000010210efc9: lea    (%rax,%rsi,1),%rsi
  0x000000010210efcd: cmp    0x70(%r15),%rsi
  0x000000010210efd1: ja     0x000000010210f1b2
  0x000000010210efd7: mov    %rsi,0x60(%r15)
  0x000000010210efdb: sub    %rax,%rsi
  0x000000010210efde: movq   $0x1,(%rax)
  0x000000010210efe5: mov    %rdx,%rcx
  0x000000010210efe8: shr    $0x3,%rcx
  0x000000010210efec: mov    %ecx,0x8(%rax)
  0x000000010210efef: mov    %ebx,0xc(%rax)
  0x000000010210eff2: sub    $0x10,%rsi
  0x000000010210eff6: je     0x000000010210f00d
  0x000000010210effc: xor    %rbx,%rbx
  0x000000010210efff: shr    $0x3,%rsi
  0x000000010210f003: mov    %rbx,0x8(%rax,%rsi,8)
  0x000000010210f008: dec    %rsi
  0x000000010210f00b: jne    0x000000010210f003  ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)

  0x000000010210f00d: movabs $0x1160741c0,%rsi  ;   {metadata(method data for {method} {0x0000000115f89d30} 'copyOf' '([CI)[C' in 'java/util/Arrays')}
  0x000000010210f017: addq   $0x1,0x108(%rsi)
  0x000000010210f01f: movabs $0x11603afa0,%rsi  ;   {metadata(method data for {method} {0x0000000115f64fd8} 'min' '(II)I' in 'java/lang/Math')}
  0x000000010210f029: mov    0xdc(%rsi),%edx
  0x000000010210f02f: add    $0x8,%edx
  0x000000010210f032: mov    %edx,0xdc(%rsi)
  0x000000010210f038: movabs $0x115f64fd8,%rsi  ;   {metadata({method} {0x0000000115f64fd8} 'min' '(II)I' in 'java/lang/Math')}
  0x000000010210f042: and    $0x7ffff8,%edx
  0x000000010210f048: cmp    $0x0,%edx
  0x000000010210f04b: je     0x000000010210f1bc
  0x000000010210f051: mov    0x78(%rsp),%ebx
  0x000000010210f055: cmp    %r11d,%ebx
  0x000000010210f058: movabs $0x11603afa0,%rsi  ;   {metadata(method data for {method} {0x0000000115f64fd8} 'min' '(II)I' in 'java/lang/Math')}
  0x000000010210f062: movabs $0x108,%rdx
  0x000000010210f06c: jg     0x000000010210f07c
  0x000000010210f072: movabs $0x118,%rdx
  0x000000010210f07c: mov    (%rsi,%rdx,1),%rcx
  0x000000010210f080: lea    0x1(%rcx),%rcx
  0x000000010210f084: mov    %rcx,(%rsi,%rdx,1)
  0x000000010210f088: jg     0x000000010210f0a3  ;*if_icmpgt
                                                ; - java.lang.Math::min@2 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)

  0x000000010210f08e: movabs $0x11603afa0,%rsi  ;   {metadata(method data for {method} {0x0000000115f64fd8} 'min' '(II)I' in 'java/lang/Math')}
  0x000000010210f098: incl   0x128(%rsi)
  0x000000010210f09e: jmpq   0x000000010210f0a6  ;*goto
                                                ; - java.lang.Math::min@6 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)

  0x000000010210f0a3: mov    %r11,%rbx          ;*ireturn
                                                ; - java.lang.Math::min@10 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)

  0x000000010210f0a6: mov    %r11d,0x98(%rsp)
  0x000000010210f0ae: mov    0x80(%rsp),%rdi
  0x000000010210f0b6: movabs $0x1160741c0,%rsi  ;   {metadata(method data for {method} {0x0000000115f89d30} 'copyOf' '([CI)[C' in 'java/util/Arrays')}
  0x000000010210f0c0: addq   $0x1,0x118(%rsi)
  0x000000010210f0c8: mov    %rdi,%rsi
  0x000000010210f0cb: mov    $0x0,%edx
  0x000000010210f0d0: mov    %rax,%rcx
  0x000000010210f0d3: mov    $0x0,%r8d
  0x000000010210f0d9: mov    %rbx,%r9
  0x000000010210f0dc: mov    %rax,0x90(%rsp)
  0x000000010210f0e4: lea    (%rdx,%r9,1),%rdi
  0x000000010210f0e8: cmp    0xc(%rsi),%edi
  0x000000010210f0eb: ja     0x000000010210f1d3
  0x000000010210f0f1: lea    (%r8,%r9,1),%rdi
  0x000000010210f0f5: cmp    0xc(%rcx),%edi
  0x000000010210f0f8: ja     0x000000010210f1d3
  0x000000010210f0fe: test   %r9d,%r9d
  0x000000010210f101: jl     0x000000010210f1d3
  0x000000010210f107: je     0x000000010210f143
  0x000000010210f10d: movslq %edx,%rdx
  0x000000010210f110: movslq %r8d,%r8
  0x000000010210f113: lea    0x10(%rsi,%rdx,2),%rdi
  0x000000010210f118: lea    0x10(%rcx,%r8,2),%rsi
  0x000000010210f11d: mov    %r9,%rdx
  0x000000010210f120: test   $0xf,%esp
  0x000000010210f126: je     0x000000010210f13e
  0x000000010210f12c: sub    $0x8,%rsp
  0x000000010210f130: callq  Stub::jshort_disjoint_arraycopy
                                                ;   {runtime_call}
  0x000000010210f135: add    $0x8,%rsp
  0x000000010210f139: jmpq   0x000000010210f143
  0x000000010210f13e: callq  Stub::jshort_disjoint_arraycopy
                                                ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ;   {runtime_call}
  0x000000010210f143: mov    0x90(%rsp),%rax
  0x000000010210f14b: mov    0x88(%rsp),%rsi
  0x000000010210f153: mov    %rax,%r10
  0x000000010210f156: shr    $0x3,%r10
  0x000000010210f15a: mov    %r10d,0x10(%rsi)
  0x000000010210f15e: shr    $0x9,%rsi
  0x000000010210f162: movabs $0x10d9c0000,%rdi
  0x000000010210f16c: movb   $0x0,(%rsi,%rdi,1)  ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@23 (line 124)

  0x000000010210f170: add    $0xb0,%rsp
  0x000000010210f177: pop    %rbp
  0x000000010210f178: test   %eax,-0x9e307e(%rip)        # 0x000000010172c100
                                                ;   {poll_return}
  0x000000010210f17e: retq
  0x000000010210f17f: mov    %rdi,0x8(%rsp)
  0x000000010210f184: movq   $0xffffffffffffffff,(%rsp)
  0x000000010210f18c: callq  0x00000001020fe020  ; OopMap{rsi=Oop off=817}
                                                ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@-1 (line 123)
                                                ;   {runtime_call}
  0x000000010210f191: jmpq   0x000000010210eec5
  0x000000010210f196: callq  0x000000010206db40  ; OopMap{rsi=Oop rdi=Oop [128]=Oop off=827}
                                                ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ;   {runtime_call}
  0x000000010210f19b: mov    %rbx,0x8(%rsp)
  0x000000010210f1a0: movq   $0xffffffffffffffff,(%rsp)
  0x000000010210f1a8: callq  0x00000001020fe020  ; OopMap{[136]=Oop [128]=Oop off=845}
                                                ;*synchronization entry
                                                ; - java.util.Arrays::copyOf@-1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ;   {runtime_call}
  0x000000010210f1ad: jmpq   0x000000010210ef90
  0x000000010210f1b2: callq  0x000000010206c8a0  ; OopMap{[136]=Oop [128]=Oop off=855}
                                                ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ;   {runtime_call}
  0x000000010210f1b7: jmpq   0x000000010210f00d
  0x000000010210f1bc: mov    %rsi,0x8(%rsp)
  0x000000010210f1c1: movq   $0xffffffffffffffff,(%rsp)
  0x000000010210f1c9: callq  0x00000001020fe020  ; OopMap{[136]=Oop [128]=Oop rax=Oop off=878}
                                                ;*synchronization entry
                                                ; - java.lang.Math::min@-1 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ;   {runtime_call}
  0x000000010210f1ce: jmpq   0x000000010210f051
  0x000000010210f1d3: nop
  0x000000010210f1d4: nop
  0x000000010210f1d5: nop
  0x000000010210f1d6: nop
  0x000000010210f1d7: callq  0x0000000102046420  ; OopMap{[136]=Oop [128]=Oop [144]=Oop off=892}
                                                ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ;   {static_call}
  0x000000010210f1dc: jmpq   0x000000010210f143
  0x000000010210f1e1: nop
  0x000000010210f1e2: nop
  0x000000010210f1e3: mov    0x2a8(%r15),%rax
  0x000000010210f1ea: movabs $0x0,%r10
  0x000000010210f1f4: mov    %r10,0x2a8(%r15)
  0x000000010210f1fb: movabs $0x0,%r10
  0x000000010210f205: mov    %r10,0x2b0(%r15)
  0x000000010210f20c: add    $0xb0,%rsp
  0x000000010210f213: pop    %rbp
  0x000000010210f214: jmpq   0x000000010206e6a0  ;   {runtime_call}
  0x000000010210f219: hlt
  0x000000010210f21a: hlt
  0x000000010210f21b: hlt
  0x000000010210f21c: hlt
  0x000000010210f21d: hlt
  0x000000010210f21e: hlt
  0x000000010210f21f: hlt
[Stub Code]
  0x000000010210f220: nop                       ;   {no_reloc}
  0x000000010210f221: nop
  0x000000010210f222: nop
  0x000000010210f223: nop
  0x000000010210f224: nop
  0x000000010210f225: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010210f22f: jmpq   0x000000010210f22f  ;   {runtime_call}
  0x000000010210f234: nop
  0x000000010210f235: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010210f23f: jmpq   0x000000010210f23f  ;   {runtime_call}
[Exception Handler]
  0x000000010210f244: callq  0x00000001020fb9a0  ;   {runtime_call}
  0x000000010210f249: mov    %rsp,-0x28(%rsp)
  0x000000010210f24e: sub    $0x80,%rsp
  0x000000010210f255: mov    %rax,0x78(%rsp)
  0x000000010210f25a: mov    %rcx,0x70(%rsp)
  0x000000010210f25f: mov    %rdx,0x68(%rsp)
  0x000000010210f264: mov    %rbx,0x60(%rsp)
  0x000000010210f269: mov    %rbp,0x50(%rsp)
  0x000000010210f26e: mov    %rsi,0x48(%rsp)
  0x000000010210f273: mov    %rdi,0x40(%rsp)
  0x000000010210f278: mov    %r8,0x38(%rsp)
  0x000000010210f27d: mov    %r9,0x30(%rsp)
  0x000000010210f282: mov    %r10,0x28(%rsp)
  0x000000010210f287: mov    %r11,0x20(%rsp)
  0x000000010210f28c: mov    %r12,0x18(%rsp)
  0x000000010210f291: mov    %r13,0x10(%rsp)
  0x000000010210f296: mov    %r14,0x8(%rsp)
  0x000000010210f29b: mov    %r15,(%rsp)
  0x000000010210f29f: movabs $0x100d1ee90,%rdi  ;   {external_word}
  0x000000010210f2a9: movabs $0x10210f249,%rsi  ;   {internal_word}
  0x000000010210f2b3: mov    %rsp,%rdx
  0x000000010210f2b6: and    $0xfffffffffffffff0,%rsp
  0x000000010210f2ba: callq  0x0000000100b4a196  ;   {runtime_call}
  0x000000010210f2bf: hlt
[Deopt Handler Code]
  0x000000010210f2c0: movabs $0x10210f2c0,%r10  ;   {section_word}
  0x000000010210f2ca: push   %r10
  0x000000010210f2cc: jmpq   0x00000001020473c0  ;   {runtime_call}
  0x000000010210f2d1: hlt
  0x000000010210f2d2: hlt
  0x000000010210f2d3: hlt
  0x000000010210f2d4: hlt
  0x000000010210f2d5: hlt
  0x000000010210f2d6: hlt
  0x000000010210f2d7: hlt
Decoding compiled method 0x000000010210e990:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x0000000115e85d48} 'ge[Loaded sun.misc.FileURLMapper from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
tSecurityManager' '()Ljava/lang/SecurityManager;' in 'java/lang/System'
  #           [sp+0x40]  (sp of caller)
  0x000000010210eae0: mov    %eax,-0x14000(%rsp)
  0x000000010210eae7: push   %rbp
  0x000000010210eae8: sub    $0x30,%rsp
  0x000000010210eaec: movabs $0x116074c00,%rax  ;   {metadata(method data for {method} {0x0000000115e85d48} 'getSecurityManager' '()Ljava/lang/SecurityManager;' in 'java/lang/System')}
  0x000000010210eaf6: mov    0xdc(%rax),%esi
  0x000000010210eafc: add    $0x8,%esi
  0x000000010210eaff: mov    %esi,0xdc(%rax)
  0x000000010210eb05: movabs $0x115e85d48,%rax  ;   {metadata({method} {0x0000000115e85d48} 'getSecurityManager' '()Ljava/lang/SecurityManager;' in 'java/lang/System')}
  0x000000010210eb0f: and    $0x1ff8,%esi
  0x000000010210eb15: cmp    $0x0,%esi
  0x000000010210eb18: je     0x000000010210eb3b
  0x000000010210eb1e: movabs $0x795580c78,%rax  ;   {oop(a 'java/lang/Class' = 'java/lang/System')}
  0x000000010210eb28: mov    0x74(%rax),%eax
  0x000000010210eb2b: shl    $0x3,%rax          ;*getstatic security
                                                ; - java.lang.System::getSecurityManager@0 (line 334)

  0x000000010210eb2f: add    $0x30,%rsp
  0x000000010210eb33: pop    %rbp
  0x000000010210eb34: test   %eax,-0x9e2a3a(%rip)        # 0x000000010172c100
                                                ;   {poll_return}
  0x000000010210eb3a: retq
  0x000000010210eb3b: mov    %rax,0x8(%rsp)
  0x000000010210eb40: movq   $0xffffffffffffffff,(%rsp)
  0x000000010210eb48: callq  0x00000001020fe020  ; OopMap{off=109}
                                                ;*synchronization entry
                                                ; - java.lang.System::getSecurityManager@-1 (line 334)
                                                ;   {runtime_call}
  0x000000010210eb4d: jmp    0x000000010210eb1e
  0x000000010210eb4f: nop
  0x000000010210eb50: nop
  0x000000010210eb51: mov    0x2a8(%r15),%rax
  0x000000010210eb58: movabs $0x0,%r10
  0x000000010210eb62: mov    %r10,0x2a8(%r15)
  0x000000010210eb69: movabs $0x0,%r10
  0x000000010210eb73: mov    %r10,0x2b0(%r15)
  0x000000010210eb7a: add    $0x30,%rsp
  0x000000010210eb7e: pop    %rbp
  0x000000010210eb7f: jmpq   0x000000010206e6a0  ;   {runtime_call}
  0x000000010210eb84: hlt
  0x000000010210eb85: hlt
  0x000000010210eb86: hlt
  0x000000010210eb87: hlt
  0x000000010210eb88: hlt
  0x000000010210eb89: hlt
  0x000000010210eb8a: hlt
  0x000000010210eb8b: hlt
  0x000000010210eb8c: hlt
  0x000000010210eb8d: hlt
  0x000000010210eb8e: hlt
  0x000000010210eb8f: hlt
  0x000000010210eb90: hlt
  0x000000010210eb91: hlt
  0x000000010210eb92: hlt
  0x000000010210eb93: hlt
  0x000000010210eb94: hlt
  0x000000010210eb95: hlt
  0x000000010210eb96: hlt
  0x000000010210eb97: hlt
  0x000000010210eb98: hlt
  0x000000010210eb99: hlt
  0x000000010210eb9a: hlt
  0x000000010210eb9b: hlt
  0x000000010210eb9c: hlt
  0x000000010210eb9d: hlt
  0x000000010210eb9e: hlt
  0x000000010210eb9f: hlt
[Exception Handler]
[Stub Code]
  0x000000010210eba0: callq  0x00000001020fb9a0  ;   {no_reloc}
  0x000000010210eba5: mov    %rsp,-0x28(%rsp)
  0x000000010210ebaa: sub    $0x80,%rsp
  0x000000010210ebb1: mov    %rax,0x78(%rsp)
  0x000000010210ebb6: mov    %rcx,0x70(%rsp)
  0x000000010210ebbb: mov    %rdx,0x68(%rsp)
  0x000000010210ebc0: mov    %rbx,0x60(%rsp)
  0x000000010210ebc5: mov    %rbp,0x50(%rsp)
  0x000000010210ebca: mov    %rsi,0x48(%rsp)
  0x000000010210ebcf: mov    %rdi,0x40(%rsp)
  0x000000010210ebd4: mov    %r8,0x38(%rsp)
  0x000000010210ebd9: mov    %r9,0x30(%rsp)
  0x000000010210ebde: mov    %r10,0x28(%rsp)
  0x000000010210ebe3: mov    %r11,0x20(%rsp)
  0x000000010210ebe8: mov    %r12,0x18(%rsp)
  0x000000010210ebed: mov    %r13,0x10(%rsp)
  0x000000010210ebf2: mov    %r14,0x8(%rsp)
  0x000000010210ebf7: mov    %r15,(%rsp)
  0x000000010210ebfb: movabs $0x100d1ee90,%rdi  ;   {external_word}
  0x000000010210ec05: movabs $0x10210eba5,%rsi  ;   {internal_word}
  0x000000010210ec0f: mov    %rsp,%rdx
  0x000000010210ec12: and    $0xfffffffffffffff0,%rsp
  0x000000010210ec16: callq  0x0000000100b4a196  ;   {runtime_call}
  0x000000010210ec1b: hlt
[Deopt Handler Code]
  0x000000010210ec1c: movabs $0x10210ec1c,%r10  ;   {section_word}
  0x000000010210ec26: push   %r10
  0x000000010210ec28: jmpq   0x00000001020473c0  ;   {runtime_call}
  0x000000010210ec2d: hlt
  0x000000010210ec2e: hlt
  0x000000010210ec2f: hlt
Decoding compiled method 0x000000010210e690:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000115ef2de8} 'getPath' '()Ljava/lang/String;' in 'java/io/File'
  #           [sp+0x40]  (sp of caller)
  0x000000010210e7e0: mov    0x8(%rsi),%r10d
  0x000000010210e7e4: shl    $0x3,%r10
  0x000000010210e7e8: cmp    %rax,%r10
  0x000000010210e7eb: jne    0x0000000102045e20  ;   {runtime_call}
  0x000000010210e7f1: data32 data32 nopw 0x0(%rax,%rax,1)
  0x000000010210e7fc: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x000000010210e800: mov    %eax,-0x14000(%rsp)
  0x000000010210e807: push   %rbp
  0x000000010210e808: sub    $0x30,%rsp         ;*aload_0
                                                ; - java.io.File::getPath@0 (line 512)

  0x000000010210e80c: mov    0x10(%rsi),%eax
  0x000000010210e80f: shl    $0x3,%rax          ;*getfield path
                                                ; - java.io.File::getPath@1 (line 512)

  0x000000010210e813: add    $0x30,%rsp
  0x000000010210e817: pop    %rbp
  0x000000010210e818: test   %eax,-0x9e271e(%rip)        # 0x000000010172c100
                                                ;   {poll_return}
  0x000000010210e81e: retq
  0x000000010210e81f: nop
  0x000000010210e820: nop
  0x000000010210e821: mov    0x2a8(%r15),%rax
  0x000000010210e828: movabs $0x0,%r10
  0x000000010210e832: mov    %r10,0x2a8(%r15)
  0x000000010210e839: movabs $0x0,%r10
  0x000000010210e843: mov    %r10,0x2b0(%r15)
  0x000000010210e84a: add    $0x30,%rsp
  0x000000010210e84e: pop    %rbp
  0x000000010210e84f: jmpq   0x000000010206e6a0  ;   {runtime_call}
  0x000000010210e854: hlt
  0x000000010210e855: hlt
  0x000000010210e856: hlt
  0x000000010210e857: hlt
  0x000000010210e858: hlt
  0x000000010210e859: hlt
  0x000000010210e85a: hlt
  0x000000010210e85b: hlt
  0x000000010210e85c: hlt
  0x000000010210e85d: hlt
  0x000000010210e85e: hlt
  0x000000010210e85f: hlt
[Exception Handler]
[Stub Code]
  0x000000010210e860: callq  0x00000001020fb9a0  ;   {no_reloc}
  0x000000010210e865: mov    %rsp,-0x28(%rsp)
  0x000000010210e86a: sub    $0x80,%rsp
  0x000000010210e871: mov    %rax,0x78(%rsp)
  0x000000010210e876: mov    %rcx,0x70(%rsp)
  0x000000010210e87b: mov    %rdx,0x68(%rsp)
  0x000000010210e880: mov    %rbx,0x60(%rsp)
  0x000000010210e885: mov    %rbp,0x50(%rsp)
  0x000000010210e88a: mov    %rsi,0x48(%rsp)
  0x000000010210e88f: mov    %rdi,0x40(%rsp)
  0x000000010210e894: mov    %r8,0x38(%rsp)
  0x000000010210e899: mov    %r9,0x30(%rsp)
  0x000000010210e89e: mov    %r10,0x28(%rsp)
  0x000000010210e8a3: mov    %r11,0x20(%rsp)
  0x000000010210e8a8: mov    %r12,0x18(%rsp)
  0x000000010210e8ad: mov    %r13,0x10(%rsp)
  0x000000010210e8b2: mov    %r14,0x8(%rsp)
  0x000000010210e8b7: mov    %r15,(%rsp)
  0x000000010210e8bb: movabs $0x100d1ee90,%rdi  ;   {external_word}
  0x000000010210e8c5: movabs $0x10210e865,%rsi  ;   {internal_word}
  0x000000010210e8cf: mov    %rsp,%rdx
  0x000000010210e8d2: and    $0xfffffffffffffff0,%rsp
  0x000000010210e8d6: callq  0x0000000100b4a196  ;   {runtime_call}
  0x000000010210e8db: hlt
[Deopt Handler Code]
  0x000000010210e8dc: movabs $0x10210e8dc,%r10  ;   {section_word}
  0x000000010210e8e6: push   %r10
  0x000000010210e8e8: jmpq   0x00000001020473c0  ;   {runtime_call}
  0x000000010210e8ed: hlt
  0x000000010210e8ee: hlt
  0x000000010210e8ef: hlt
[Loaded java.util.jar.JarFile from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.misc.JavaUtilJarAccess from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.jar.JavaUtilJarAccessImpl from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.nio.charset.StandardCharsets from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.nio.cs.US_ASCII from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
Decoding compiled method 0x000000010210dc50:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000115e706b0} 'equals' '(Ljava/lang/Object;)Z' in 'java/lang/String'
  # this:     rsi:rsi   = 'java/lang/String'
  # parm0:    rdx:rdx   = 'java/lang/Object'
  #           [sp+0x40]  (sp of caller)
  0x000000010210dde0: mov    0x8(%rsi),%r10d
  0x000000010210dde4: shl    $0x3,%r10
  0x000000010210dde8: cmp    %rax,%r10
  0x000000010210ddeb: jne    0x0000000102045e20  ;   {runtime_call}
  0x000000010210ddf1: data32 data32 nopw 0x0(%rax,%rax,1)
  0x000000010210ddfc: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x000000010210de00: mov    %eax,-0x14000(%rsp)
  0x000000010210de07: push   %rbp
  0x000000010210de08: sub    $0x30,%rsp
  0x000000010210de0c: movabs $0x11607a878,%rax  ;   {metadata(method data for {method} {0x0000000115e706b0} 'equals' '(Ljava/lang/Object;)Z' in 'java/lang/String')}
  0x000000010210de16: mov    0xdc(%rax),%edi
  0x000000010210de1c: add    $0x8,%edi
  0x000000010210de1f: mov    %edi,0xdc(%rax)
  0x000000010210de25: movabs $0x115e706b0,%rax  ;   {metadata({method} {0x0000000115e706b0} 'equals' '(Ljava/lang/Object;)Z' in 'java/lang/String')}
  0x000000010210de2f: and    $0x1ff8,%edi
  0x000000010210de35: cmp    $0x0,%edi
  0x000000010210de38: je     0x000000010210e219  ;*aload_0
                                                ; - java.lang.String::equals@0 (line 977)

  0x000000010210de3e: cmp    %rdx,%rsi
  0x000000010210de41: movabs $0x11607a878,%rax  ;   {metadata(method data for {method} {0x0000000115e706b0} 'equals' '(Ljava/lang/Object;)Z' in 'java/lang/String')}
  0x000000010210de4b: movabs $0x108,%rdi
  0x000000010210de55: jne    0x000000010210de65
  0x000000010210de5b: movabs $0x118,%rdi
  0x000000010210de65: mov    (%rax,%rdi,1),%rbx
  0x000000010210de69: lea    0x1(%rbx),%rbx
  0x000000010210de6d: mov    %rbx,(%rax,%rdi,1)
  0x000000010210de71: je     0x000000010210e208  ;*if_acmpne
                                                ; - java.lang.String::equals@2 (line 977)

  0x000000010210de77: cmp    $0x0,%rdx
  0x000000010210de7b: jne    0x000000010210de96
  0x000000010210de7d: movabs $0x11607a878,%rbx  ;   {metadata(method data for {method} {0x0000000115e706b0} 'equals' '(Ljava/lang/Object;)Z' in 'java/lang/String')}
  0x000000010210de87: orl    $0x100,0x120(%rbx)
  0x000000010210de91: jmpq   0x000000010210df56
  0x000000010210de96: movabs $0x7c00016d0,%rcx  ;   {metadata('java/lang/String')}
  0x000000010210dea0: mov    0x8(%rdx),%edi
  0x000000010210dea3: shl    $0x3,%rdi
  0x000000010210dea7: cmp    %rdi,%rcx
  0x000000010210deaa: jne    0x000000010210df3a
  0x000000010210deb0: movabs $0x11607a878,%rbx  ;   {metadata(method data for {method} {0x0000000115e706b0} 'equals' '(Ljava/lang/Object;)Z' in 'java/lang/String')}
  0x000000010210deba: mov    0x8(%rdx),%ecx
  0x000000010210debd: shl    $0x3,%rcx
  0x000000010210dec1: cmp    0x130(%rbx),%rcx
  0x000000010210dec8: jne    0x000000010210ded7
  0x000000010210deca: addq   $0x1,0x138(%rbx)
  0x000000010210ded2: jmpq   0x000000010210df5b
  0x000000010210ded7: cmp    0x140(%rbx),%rcx
  0x000000010210dede: jne    0x000000010210deed
  0x000000010210dee0: addq   $0x1,0x148(%rbx)
  0x000000010210dee8: jmpq   0x000000010210df5b
  0x000000010210deed: cmpq   $0x0,0x130(%rbx)
  0x000000010210def8: jne    0x000000010210df11
  0x000000010210defa: mov    %rcx,0x130(%rbx)
  0x000000010210df01: movq   $0x1,0x138(%rbx)
  0x000000010210df0c: jmpq   0x000000010210df5b
  0x000000010210df11: cmpq   $0x0,0x140(%rbx)
  0x000000010210df1c: jne    0x000000010210df35
  0x000000010210df1e: mov    %rcx,0x140(%rbx)
  0x000000010210df25: movq   $0x1,0x148(%rbx)
  0x000000010210df30: jmpq   0x000000010210df5b
  0x000000010210df35: jmpq   0x000000010210df5b
  0x000000010210df3a: movabs $0x11607a878,%rbx  ;   {metadata(method data for {method} {0x0000000115e706b0} 'equals' '(Ljava/lang/Object;)Z' in 'java/lang/String')}
  0x000000010210df44: subq   $0x1,0x128(%rbx)
  0x000000010210df4c: jmpq   0x000000010210df56
  0x000000010210df51: jmpq   0x000000010210df5b
  0x000000010210df56: xor    %rax,%rax
  0x000000010210df59: jmp    0x000000010210df65
  0x000000010210df5b: movabs $0x1,%rax          ;*instanceof
                                                ; - java.lang.String::equals@8 (line 980)

  0x000000010210df65: cmp    $0x0,%eax
  0x000000010210df68: movabs $0x11607a878,%rax  ;   {metadata(method data for {method} {0x0000000115e706b0} 'equals' '(Ljava/lang/Object;)Z' in 'java/lang/String')}
  0x000000010210df72: movabs $0x158,%rdi
  0x000000010210df7c: je     0x000000010210df8c
  0x000000010210df82: movabs $0x168,%rdi
  0x000000010210df8c: mov    (%rax,%rdi,1),%rbx
  0x000000010210df90: lea    0x1(%rbx),%rbx
  0x000000010210df94: mov    %rbx,(%rax,%rdi,1)
  0x000000010210df98: je     0x000000010210e1f7  ;*ifeq
                                                ; - java.lang.String::equals@11 (line 980)

  0x000000010210df9e: cmp    $0x0,%rdx
  0x000000010210dfa2: jne    0x000000010210dfbd
  0x000000010210dfa4: movabs $0x11607a878,%rbx  ;   {metadata(method data for {method} {0x0000000115e706b0} 'equals' '(Ljava/lang/Object;)Z' in 'java/lang/String')}
  0x000000010210dfae: orl    $0x100,0x170(%rbx)
  0x000000010210dfb8: jmpq   0x000000010210e07d
  0x000000010210dfbd: movabs $0x7c00016d0,%rcx  ;   {metadata('java/lang/String')}
  0x000000010210dfc7: mov    0x8(%rdx),%edi
  0x000000010210dfca: shl    $0x3,%rdi
  0x000000010210dfce: cmp    %rdi,%rcx
  0x000000010210dfd1: jne    0x000000010210e061
  0x000000010210dfd7: movabs $0x11607a878,%rbx  ;   {metadata(method data for {method} {0x0000000115e706b0} 'equals' '(Ljava/lang/Object;)Z' in 'java/lang/String')}
  0x000000010210dfe1: mov    0x8(%rdx),%ecx
  0x000000010210dfe4: shl    $0x3,%rcx
  0x000000010210dfe8: cmp    0x180(%rbx),%rcx
  0x000000010210dfef: jne    0x000000010210dffe
  0x000000010210dff1: addq   $0x1,0x188(%rbx)
  0x000000010210dff9: jmpq   0x000000010210e07d
  0x000000010210dffe: cmp    0x190(%rbx),%rcx
  0x000000010210e005: jne    0x000000010210e014
  0x000000010210e007: addq   $0x1,0x198(%rbx)
  0x000000010210e00f: jmpq   0x000000010210e07d
  0x000000010210e014: cmpq   $0x0,0x180(%rbx)
  0x000000010210e01f: jne    0x000000010210e038
  0x000000010210e021: mov    %rcx,0x180(%rbx)
  0x000000010210e028: movq   $0x1,0x188(%rbx)
  0x000000010210e033: jmpq   0x000000010210e07d
  0x000000010210e038: cmpq   $0x0,0x190(%rbx)
  0x000000010210e043: jne    0x000000010210e05c
  0x000000010210e045: mov    %rcx,0x190(%rbx)
  0x000000010210e04c: movq   $0x1,0x198(%rbx)
  0x000000010210e057: jmpq   0x000000010210e07d
  0x000000010210e05c: jmpq   0x000000010210e07d
  0x000000010210e061: movabs $0x11607a878,%rbx  ;   {metadata(method data for {method} {0x0000000115e706b0} 'equals' '(Ljava/lang/Object;)Z' in 'java/lang/String')}
  0x000000010210e06b: subq   $0x1,0x178(%rbx)
  0x000000010210e073: jmpq   0x000000010210e230
  0x000000010210e078: jmpq   0x000000010210e07d
  0x000000010210e07d: mov    %rdx,%rax          ;*checkcast
                                                ; - java.lang.String::equals@15 (line 981)

  0x000000010210e080: mov    0xc(%rsi),%edi
  0x000000010210e083: shl    $0x3,%rdi          ;*getfield value
                                                ; - java.lang.String::equals@20 (line 982)

  0x000000010210e087: mov    0xc(%rdi),%ebx     ;*arraylength
                                                ; - java.lang.String::equals@23 (line 982)
                                                ; implicit exception: dispatches to 0x000000010210e239
  0x000000010210e08a: mov    0xc(%rax),%ecx     ; implicit exception: dispatches to 0x000000010210e23e
  0x000000010210e08d: shl    $0x3,%rcx          ;*getfield value
                                                ; - java.lang.String::equals@27 (line 983)

  0x000000010210e091: mov    0xc(%rcx),%r8d     ;*arraylength
                                                ; - java.lang.String::equals@30 (line 983)
                                                ; implicit exception: dispatches to 0x000000010210e243
  0x000000010210e095: cmp    %r8d,%ebx
  0x000000010210e098: movabs $0x11607a878,%r8   ;   {metadata(method data for {method} {0x0000000115e706b0} 'equals' '(Ljava/lang/Object;)Z' in 'java/lang/String')}
  0x000000010210e0a2: movabs $0x1a8,%r9
  0x000000010210e0ac: jne    0x000000010210e0bc
  0x000000010210e0b2: movabs $0x1b8,%r9
  0x000000010210e0bc: mov    (%r8,%r9,1),%r11
  0x000000010210e0c0: lea    0x1(%r11),%r11
  0x000000010210e0c4: mov    %r11,(%r8,%r9,1)
  0x000000010210e0c8: jne    0x000000010210e1f7  ;*if_icmpne
                                                ; - java.lang.String::equals@31 (line 983)

  0x000000010210e0ce: mov    $0x0,%r8d
  0x000000010210e0d4: jmpq   0x000000010210e191  ;*iload_3
                                                ; - java.lang.String::equals@49 (line 987)

  0x000000010210e0d9: nopl   0x0(%rax)
  0x000000010210e0e0: movslq %r8d,%rbx
  0x000000010210e0e3: cmp    0xc(%rdi),%r8d
  0x000000010210e0e7: jae    0x000000010210e248
  0x000000010210e0ed: movzwl 0x10(%rdi,%rbx,2),%ebx  ;*caload
                                                ; - java.lang.String::equals@60 (line 988)

  0x000000010210e0f2: movslq %r8d,%r11
  0x000000010210e0f5: cmp    0xc(%rcx),%r8d
  0x000000010210e0f9: jae    0x000000010210e251
  0x000000010210e0ff: movzwl 0x10(%rcx,%r11,2),%r11d  ;*caload
                                                ; - java.lang.String::equals@65 (line 988)

  0x000000010210e105: cmp    %r11d,%ebx
  0x000000010210e108: movabs $0x11607a878,%rbx  ;   {metadata(method data for {method} {0x0000000115e706b0} 'equals' '(Ljava/lang/Object;)Z' in 'java/lang/String')}
  0x000000010210e112: movabs $0x1e8,%r11
  0x000000010210e11c: je     0x000000010210e12c
  0x000000010210e122: movabs $0x1f8,%r11
  0x000000010210e12c: mov    (%rbx,%r11,1),%r13
  0x000000010210e130: lea    0x1(%r13),%r13
  0x000000010210e134: mov    %r13,(%rbx,%r11,1)
  0x000000010210e138: jne    0x000000010210e1d5  ;*if_icmpeq
                                                ; - java.lang.String::equals@66 (line 988)

  0x000000010210e13e: inc    %r8d
  0x000000010210e141: movabs $0x11607a878,%rbx  ;   {metadata(method data for {method} {0x0000000115e706b0} 'equals' '(Ljava/lang/Object;)Z' in 'java/lang/String')}
  0x000000010210e14b: mov    0xe0(%rbx),%r11d
  0x000000010210e152: [Loaded sun.nio.cs.ISO_8859_1 from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
add    $0x8,%r11d
  0x000000010210e156: mov    %r11d,0xe0(%rbx)
  0x000000010210e15d: movabs $0x115e706b0,%rbx  ;   {metadata({method} {0x0000000115e706b0} 'equals' '(Ljava/lang/Object;)Z' in 'java/lang/String')}
  0x000000010210e167: and    $0xfff8,%r11d
  0x000000010210e16e: cmp    $0x0,%r11d
  0x000000010210e172: je     0x000000010210e25a  ; OopMap{rcx=Oop rdi=Oop rax=Oop rsi=Oop rdx=Oop off=920}
                                                ;*goto
                                                ; - java.lang.String::equals@74 (line 990)

  0x000000010210e178: test   %eax,-0x9e207e(%rip)        # 0x000000010172c100
                                                ;   {poll}
  0x000000010210e17e: movabs $0x11607a878,%rbx  ;   {metadata(method data for {method} {0x0000000115e706b0} 'equals' '(Ljava/lang/Object;)Z' in 'java/lang/String')}
  0x000000010210e188: incl   0x208(%rbx)
  0x000000010210e18e: mov    %r9,%rbx           ;*goto
                                                ; - java.lang.String::equals@74 (line 990)

  0x000000010210e191: mov    %rbx,%r9
  0x000000010210e194: dec    %r9d
  0x000000010210e197: cmp    $0x0,%ebx
  0x000000010210e19a: movabs $0x11607a878,%rbx  ;   {metadata(method data for {method} {0x0000000115e706b0} 'equals' '(Ljava/lang/Object;)Z' in 'java/lang/String')}
  0x000000010210e1a4: movabs $0x1c8,%r11
  0x000000010210e1ae: je     0x000000010210e1be
  0x000000010210e1b4: movabs $0x1d8,%r11
  0x000000010210e1be: mov    (%rbx,%r11,1),%r13
  0x000000010210e1c2: lea    0x1(%r13),%r13
  0x000000010210e1c6: mov    %r13,(%rbx,%r11,1)
  0x000000010210e1ca: je     0x000000010210e1e6
  0x000000010210e1d0: jmpq   0x000000010210e0e0  ;*ifeq
                                                ; - java.lang.String::equals@53 (line 987)

  0x000000010210e1d5: mov    $0x0,%eax
  0x000000010210e1da: add    $0x30,%rsp
  0x000000010210e1de: pop    %rbp
  0x000000010210e1df: test   %eax,-0x9e20e5(%rip)        # 0x000000010172c100
                                                ;   {poll_return}
  0x000000010210e1e5: retq                      ;*ireturn
                                                ; - java.lang.String::equals@70 (line 989)

  0x000000010210e1e6: mov    $0x1,%eax
  0x000000010210e1eb: add    $0x30,%rsp
  0x000000010210e1ef: pop    %rbp
  0x000000010210e1f0: test   %eax,-0x9e20f6(%rip)        # 0x000000010172c100
                                                ;   {poll_return}
  0x000000010210e1f6: retq                      ;*ireturn
                                                ; - java.lang.String::equals@78 (line 992)

  0x000000010210e1f7: mov    $0x0,%eax
  0x000000010210e1fc: add    $0x30,%rsp
  0x000000010210e200: pop    %rbp
  0x000000010210e201: test   %eax,-0x9e2107(%rip)        # 0x000000010172c100
                                                ;   {poll_return}
  0x000000010210e207: retq                      ;*ireturn
                                                ; - java.lang.String::equals@80 (line 995)

  0x000000010210e208: mov    $0x1,%eax
  0x000000010210e20d: add    $0x30,%rsp
  0x000000010210e211: pop    %rbp
  0x000000010210e212: test   %eax,-0x9e2118(%rip)        # 0x000000010172c100
                                                ;   {poll_return}
  0x000000010210e218: retq
  0x000000010210e219: mov    %rax,0x8(%rsp)
  0x000000010210e21e: movq   $0xffffffffffffffff,(%rsp)
  0x000000010210e226: callq  0x00000001020fe020  ; OopMap{rsi=Oop rdx=Oop off=1099}
                                                ;*synchronization entry
                                                ; - java.lang.String::equals@-1 (line 977)
                                                ;   {runtime_call}
  0x000000010210e22b: jmpq   0x000000010210de3e
  0x000000010210e230: mov    %rdx,(%rsp)
  0x000000010210e234: callq  0x00000001020fbd00  ; OopMap{rdx=Oop rsi=Oop off=1113}
                                                ;*checkcast
                                                ; - java.lang.String::equals@15 (line 981)
                                                ;   {runtime_call}
  0x000000010210e239: callq  0x000000010206db40  ; OopMap{rdx=Oop rsi=Oop rax=Oop rdi=Oop off=1118}
                                                ;*arraylength
                                                ; - java.lang.String::equals@23 (line 982)
                                                ;   {runtime_call}
  0x000000010210e23e: callq  0x000000010206db40  ; OopMap{rdx=Oop rsi=Oop rax=Oop rdi=Oop off=1123}
                                                ;*getfield value
                                                ; - java.lang.String::equals@27 (line 983)
                                                ;   {runtime_call}
  0x000000010210e243: callq  0x000000010206db40  ; OopMap{rdx=Oop rsi=Oop rax=Oop rdi=Oop rcx=Oop off=1128}
                                                ;*arraylength
                                                ; - java.lang.String::equals@30 (line 983)
                                                ;   {runtime_call}
  0x000000010210e248: mov    %r8,(%rsp)
  0x000000010210e24c: callq  0x000000010206e200  ; OopMap{rcx=Oop rdi=Oop rax=Oop rsi=Oop rdx=Oop off=1137}
                                                ;*caload
                                                ; - java.lang.String::equals@60 (line 988)
                                                ;   {runtime_call}
  0x000000010210e251: mov    %r8,(%rsp)
  0x000000010210e255: callq  0x000000010206e200  ; OopMap{rcx=Oop rdi=Oop rax=Oop rsi=Oop rdx=Oop off=1146}
                                                ;*caload
                                                ; - java.lang.String::equals@65 (line 988)
                                                ;   {runtime_call}
  0x000000010210e25a: mov    %rbx,0x8(%rsp)
  0x000000010210e25f: movq   $0x4a,(%rsp)
  0x000000010210e267: callq  0x00000001020fe020  ; OopMap{rcx=Oop rdi=Oop rax=Oop rsi=Oop rdx=Oop off=1164}
                                                ;*goto
                                                ; - java.lang.String::equals@74 (line 990)
                                                ;   {runtime_call}
  0x000000010210e26c: jmpq   0x000000010210e178
  0x000000010210e271: nop
  0x000000010210e272: nop
  0x000000010210e273: mov    0x2a8(%r15),%rax
  0x000000010210e27a: movabs $0x0,%r10
  0x000000010210e284: mov    %r10,0x2a8(%r15)
  0x000000010210e28b: movabs $0x0,%r10
  0x000000010210e295: mov    %r10,0x2b0(%r15)
  0x000000010210e29c: add    $0x30,%rsp
  0x000000010210e2a0: pop    %rbp
  0x000000010210e2a1: jmpq   0x000000010206e6a0  ;   {runtime_call}
  0x000000010210e2a6: hlt
  0x000000010210e2a7: hlt
  0x000000010210e2a8: hlt
  0x000000010210e2a9: hlt
  0x000000010210e2aa: hlt
  0x000000010210e2ab: hlt
  0x000000010210e2ac: hlt
  0x000000010210e2ad: hlt
  0x000000010210e2ae: hlt
  0x000000010210e2af: hlt
  0x000000010210e2b0: hlt
  0x000000010210e2b1: hlt
  0x000000010210e2b2: hlt
  0x000000010210e2b3: hlt
  0x000000010210e2b4: hlt
  0x000000010210e2b5: hlt
  0x000000010210e2b6: hlt
  0x000000010210e2b7: hlt
  0x000000010210e2b8: hlt
  0x000000010210e2b9: hlt
  0x000000010210e2ba: hlt
  0x000000010210e2bb: hlt
  0x000000010210e2bc: hlt
  0x000000010210e2bd: hlt
  0x000000010210e2be: hlt
  0x000000010210e2bf: hlt
[Exception Handler]
[Stub Code]
  0x000000010210e2c0: callq  0x00000001020fb9a0  ;   {no_reloc}
  0x000000010210e2c5: mov    %rsp,-0x28(%rsp)
  0x000000010210e2ca: sub    $0x80,%rsp
  0x000000010210e2d1: mov    %rax,0x78(%rsp)
  0x000000010210e2d6: mov    %rcx,0x70(%rsp)
  0x000000010210e2db: mov    %rdx,0x68(%rsp)
  0x000000010210e2e0: mov    %rbx,0x60(%rsp)
  0x000000010210e2e5: mov    %rbp,0x50(%rsp)
  0x000000010210e2ea: mov    %rsi,0x48(%rsp)
  0x000000010210e2ef: mov    %rdi,0x40(%rsp)
  0x000000010210e2f4: mov    %r8,0x38(%rsp)
  0x000000010210e2f9: mov    %r9,0x30(%rsp)
  0x000000010210e2fe: mov    %r10,0x28(%rsp)
  0x000000010210e303: mov    %r11,0x20(%rsp)
  0x000000010210e308: mov    %r12,0x18(%rsp)
  0x000000010210e30d: mov    %r13,0x10(%rsp)
  0x000000010210e312: mov    %r14,0x8(%rsp)
  0x000000010210e317: mov    %r15,(%rsp)
  0x000000010210e31b: movabs $0x100d1ee90,%rdi  ;   {external_word}
  0x000000010210e325: movabs $0x10210e2c5,%rsi  ;   {internal_word}
  0x000000010210e32f: mov    %rsp,%rdx
  0x000000010210e332: and    $0xfffffffffffffff0,%rsp
  0x000000010210e336: callq  0x0000000100b4a196  ;   {runtime_call}
  0x000000010210e33b: hlt
[Deopt Handler Code]
  0x000000010210e33c: movabs $0x10210e33c,%r10  ;   {section_word}
  0x000000010210e346: push   %r10
  0x000000010210e348: jmpq   0x00000001020473c0  ;   {runtime_call}
  0x000000010210e34d: hlt
  0x000000010210e34e: hlt
  0x000000010210e34f: hlt
[Loaded sun.nio.cs.UTF_16BE from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.nio.cs.UTF_16LE from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.nio.cs.UTF_16 from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.Queue from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.Deque from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.ArrayDeque from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.zip.ZipCoder from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
Decoding compiled method 0x000000010210d810:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000115e71130} 'indexOf' '(I)I' in 'java/lang/String'
  # this:     rsi:rsi   = 'java/lang/String'
  # parm0:    rdx       = int
  #           [sp+0x50]  (sp of caller)
  0x000000010210d980: mov    0x8(%rsi),%r10d
  0x000000010210d984: shl    $0x3,%r10
  0x000000010210d988: cmp    %rax,%r10
  0x000000010210d98b: jne    0x0000000102045e20  ;   {runtime_call}
  0x000000010210d991: data32 data32 nopw 0x0(%rax,%rax,1)
  0x000000010210d99c: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x000000010210d9a0: mov    %eax,-0x14000(%rsp)
  0x000000010210d9a7: push   %rbp
  0x000000010210d9a8: sub    $0x40,%rsp
  0x000000010210d9ac: movabs $0x116083f68,%rcx[Loaded sun.misc.PerfCounter from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
  ;   {metadata(method data for {method} {0x0000000115e71130} 'indexOf' '(I)I' in 'java/lang/String')}
  0x000000010210d9b6: mov    0xdc(%rcx),%edi
  0x000000010210d9bc: add    $0x8,%edi
  0x000000010210d9bf: mov    %edi,0xdc(%rcx)
  0x000000010210d9c5: movabs $0x115e71130,%rcx  ;   {metadata({method} {0x0000000115e71130} 'indexOf' '(I)I' in 'java/lang/String')}
  0x000000010210d9cf: and    $0x1ff8,%edi
  0x000000010210d9d5: cmp    $0x0,%edi
  0x000000010210d9d8: je     0x000000010210daa0  ;*aload_0
                                                ; - java.lang.String::indexOf@0 (line 1503)

  0x000000010210d9de: mov    %rsi,%rcx
  0x000000010210d9e1: movabs $0x116083f68,%rdi  ;   {metadata(method data for {method} {0x0000000115e71130} 'indexOf' '(I)I' in 'java/lang/String')}
  0x000000010210d9eb: mov    0x8(%rcx),%ecx
  0x000000010210d9ee: shl    $0x3,%rcx
  0x000000010210d9f2: cmp    0x110(%rdi),%rcx
  0x000000010210d9f9: jne    0x000000010210da08
  0x000000010210d9fb: addq   $0x1,0x118(%rdi)
  0x000000010210da03: jmpq   0x000000010210da6e
  0x000000010210da08: cmp    0x120(%rdi),%rcx
  0x000000010210da0f: jne    0x000000010210da1e
  0x000000010210da11: addq   $0x1,0x128(%rdi)
  0x000000010210da19: jmpq   0x000000010210da6e
  0x000000010210da1e: cmpq   $0x0,0x110(%rdi)
  0x000000010210da29: jne    0x000000010210da42
  0x000000010210da2b: mov    %rcx,0x110(%rdi)
  0x000000010210da32: movq   $0x1,0x118(%rdi)
  0x000000010210da3d: jmpq   0x000000010210da6e
  0x000000010210da42: cmpq   $0x0,0x120(%rdi)
  0x000000010210da4d: jne    0x000000010210da66
  0x000000010210da4f: mov    %rcx,0x120(%rdi)
  0x000000010210da56: movq   $0x1,0x128(%rdi)
  0x000000010210da61: jmpq   0x000000010210da6e
  0x000000010210da66: addq   $0x1,0x108(%rdi)
  0x000000010210da6e: mov    %rdx,%rdi
  0x000000010210da71: mov    %rdi,%rdx
  0x000000010210da74: mov    $0x0,%ecx
  0x000000010210da79: mov    %rsi,%rbx
  0x000000010210da7c: mov    %rbx,%rsi          ;*invokevirtual indexOf
                                                ; - java.lang.String::indexOf@3 (line 1503)

  0x000000010210da7f: mov    %edi,0x28(%rsp)
  0x000000010210da83: mov    %rbx,0x20(%rsp)
  0x000000010210da88: nop
  0x000000010210da89: nop
  0x000000010210da8a: nop
  0x000000010210da8b: nop
  0x000000010210da8c: nop
  0x000000010210da8d: nop
  0x000000010210da8e: nop
  0x000000010210da8f: callq  0x0000000102046020  ; OopMap{[32]=Oop off=276}
                                                ;*invokevirtual indexOf
                                                ; - java.lang.String::indexOf@3 (line 1503)
                                                ;   {optimized virtual_call}
  0x000000010210da94: add    $0x40,%rsp
  0x000000010210da98: pop    %rbp
  0x000000010210da99: test   %eax,-0x9e199f(%rip)        # 0x000000010172c100
                                                ;   {poll_return}
  0x000000010210da9f: retq
  0x000000010210daa0: mov    %rcx,0x8(%rsp)
  0x000000010210daa5: movq   $0xffffffffffffffff,(%rsp)
  0x000000010210daad: callq  0x00000001020fe020  ; OopMap{rsi=Oop off=306}
                                                ;*synchronization entry
                                                ; - java.lang.String::indexOf@-1 (line 1503)
                                                ;   {runtime_call}
  0x000000010210dab2: jmpq   0x000000010210d9de
  0x000000010210dab7: nop
  0x000000010210dab8: nop
  0x000000010210dab9: mov    0x2a8(%r15),%rax
  0x000000010210dac0: movabs $0x0,%r10
  0x000000010210daca: mov    %r10,0x2a8(%r15)
  0x000000010210dad1: movabs $0x0,%r10
  0x000000010210dadb: mov    %r10,0x2b0(%r15)
  0x000000010210dae2: add    $0x40,%rsp
  0x000000010210dae6: pop    %rbp
  0x000000010210dae7: jmpq   0x000000010206e6a0  ;   {runtime_call}
  0x000000010210daec: hlt
  0x000000010210daed: hlt
  0x000000010210daee: hlt
  0x000000010210daef: hlt
  0x000000010210daf0: hlt
  0x000000010210daf1: hlt
  0x000000010210daf2: hlt
  0x000000010210daf3: hlt
  0x000000010210daf4: hlt
  0x000000010210daf5: hlt
  0x000000010210daf6: hlt
  0x000000010210daf7: hlt
  0x000000010210daf8: hlt
  0x000000010210daf9: hlt
  0x000000010210dafa: hlt
  0x000000010210dafb: hlt
  0x000000010210dafc: hlt
  0x000000010210dafd: hlt
  0x000000010210dafe: hlt
  0x000000010210daff: hlt
[Stub Code]
  0x000000010210db00: nop                       ;   {no_reloc}
  0x000000010210db01: nop
  0x000000010210db02: nop
  0x000000010210db03: nop
  0x000000010210db04: nop
  0x000000010210db05: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010210db0f: jmpq   0x000000010210db0f  ;   {runtime_call}
[Exception Handler]
  0x000000010210db14: callq  0x00000001020fb9a0  ;   {runtime_call}
  0x000000010210db19: mov    %rsp,-0x28(%rsp)
  0x000000010210db1e: sub    $0x80,%rsp
  0x000000010210db25: mov    %rax,0x78(%rsp)
  0x000000010210db2a: mov    %rcx,0x70(%rsp)
  0x000000010210db2f: mov    %rdx,0x68(%rsp)
  0x000000010210db34: mov    %rbx,0x60(%rsp)
  0x000000010210db39: mov    %rbp,0x50(%rsp)
  0x000000010210db3e: mov    %rsi,0x48(%rsp)
  0x000000010210db43: mov    %rdi,0x40(%rsp)
  0x000000010210db48: mov    %r8,0x38(%rsp)
  0x000000010210db4d: mov    %r9,0x30(%rsp)
  0x000000010210db52: mov    %r10,0x28(%rsp)
  0x000000010210db57: mov    %r11,0x20(%rsp)
  0x000000010210db5c: mov    %r12,0x18(%rsp)
  0x000000010210db61: mov    %r13,0x10(%rsp)
  0x000000010210db66: mov    %r14,0x8(%rsp)
  0x000000010210db6b: mov    %r15,(%rsp)
  0x000000010210db6f: movabs $0x100d1ee90,%rdi  ;   {external_word}
  0x000000010210db79: movabs $0x10210db19,%rsi  ;   {internal_word}
  0x000000010210db83: mov    %rsp,%rdx
  0x000000010210db86: and    $0xfffffffffffffff0,%rsp
  0x000000010210db8a: callq  0x0000000100b4a196  ;   {runtime_call}
  0x000000010210db8f: hlt
[Deopt Handler Code]
  0x000000010210db90: movabs $0x10210db90,%r10  ;   {section_word}
  0x000000010210db9a: push   %r10
  0x000000010210db9c: jmpq   0x00000001020473c0  ;   {runtime_call}
  0x000000010210dba1: hlt
  0x000000010210dba2: hlt
  0x000000010210dba3: hlt
  0x000000010210dba4: hlt
  0x000000010210dba5: hlt
  0x000000010210dba6: hlt
  0x000000010210dba7: hlt
[Loaded sun.misc.Perf$GetPerfAction from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.misc.Perf from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.misc.PerfCounter$CoreCounters from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.nio.ch.DirectBuffer from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.nio.MappedByteBuffer from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.nio.DirectByteBuffer from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.nio.LongBuffer from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.nio.DirectLongBufferU from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.misc.JarIndex from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.zip.ZipEntry from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.jar.JarEntry from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.jar.JarFile$JarFileEntry from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.zip.ZipFile$ZipFileInputStream from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.zip.Inflater from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.zip.ZStreamRef from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.zip.InflaterInputStream from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.zip.ZipFile$ZipFileInflaterInputStream from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.AbstractSequentialList from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.LinkedList from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.LinkedList$Node from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
Decoding compiled method 0x000000010210f990:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x0000000115f097a0} 'toLowerCase' '(C)C' in 'java/lang/Character'
  # parm0:    rsi       = char
  #           [sp+0x50]  (sp of caller)
  0x000000010210fb20: mov    %eax,-0x14000(%rsp)
  0x000000010210fb27: push   %rbp
  0x000000010210fb28: sub    $0x40,%rsp
  0x000000010210fb2c: movabs $0x1160a29b0,%rdi  ;   {metadata(method data for {method} {0x0000000115f097a0} 'toLowerCase' '(C)C' in 'java/lang/Character')}
  0x000000010210fb36: mov    0xdc(%rdi),%ebx
  0x000000010210fb3c: add    $0x8,%ebx
  0x000000010210fb3f: mov    %ebx,0xdc(%rdi)
  0x000000010210fb45: movabs $0x115f097a0,%rdi  ;   {metadata({method} {0x0000000115f097a0} 'toLowerCase' '(C)C' in 'java/lang/Character')}
  0x000000010210fb4f: and    $0x1ff8,%ebx
  0x000000010210fb55: cmp    $0x0,%ebx
  0x000000010210fb58: je     0x000000010210fc8c  ;*iload_0
                                                ; - java.lang.Character::toLowerCase@0 (line 6309)

  0x000000010210fb5e: movabs $0x1160a29b0,%rdi  ;   {metadata(method data for {method} {0x0000000115f097a0} 'toLowerCase' '(C)C' in 'java/lang/Character')}
  0x000000010210fb68: addq   $0x1,0x108(%rdi)
  0x000000010210fb70: movabs $0x1160a2b08,%rdi  ;   {metadata(method data for {method} {0x0000000115f09838} 'toLowerCase' '(I)I' in 'java/lang/Character')}
  0x000000010210fb7a: mov    0xdc(%rdi),%ebx
  0x000000010210fb80: add    $0x8,%ebx
  0x000000010210fb83: mov    %ebx,0xdc(%rdi)
  0x000000010210fb89: movabs $0x115f09838,%rdi  ;   {metadata({method} {0x0000000115f09838} 'toLowerCase' '(I)I' in 'java/lang/Character')}
  0x000000010210fb93: and    $0x7ffff8,%ebx
  0x000000010210fb99: cmp    $0x0,%ebx
  0x000000010210fb9c: je     0x000000010210fca3
  0x000000010210fba2: movabs $0x1160a2b08,%rdi  ;   {metadata(method data for {method} {0x0000000115f09838} 'toLowerCase' '(I)I' in 'java/lang/Character')}
  0x000000010210fbac: addq   $0x1,0x108(%rdi)
  0x000000010210fbb4: mov    %rsi,%rdi
  0x000000010210fbb7: mov    %rdi,%rsi          ;*invokestatic of
                                                ; - java.lang.Character::toLowerCase@1 (line 6338)
                                                ; - java.lang.Character::toLowerCase@1 (line 6309)

  0x000000010210fbba: mov    %edi,0x28(%rsp)
  0x000000010210fbbe: nop
  0x000000010210fbbf: callq  0x0000000102046420  ; OopMap{off=164}
                                                ;*invokestatic of
                                                ; - java.lang.Character::toLowerCase@1 (line 6338)
                                                ; - java.lang.Character::toLowerCase@1 (line 6309)
                                                ;   {static_call}
  0x000000010210fbc4: cmp    (%rax),%rax        ; implicit exception: dispatches to 0x000000010210fcba
  0x000000010210fbc7: mov    %rax,%rdx
  0x000000010210fbca: movabs $0x1160a2b08,%rsi  ;   {metadata(method data for {method} {0x0000000115f09838} 'toLowerCase' '(I)I' in 'java/lang/Character')}
  0x000000010210fbd4: mov    0x8(%rdx),%edx
  0x000000010210fbd7: shl    $0x3,%rdx
  0x000000010210fbdb: cmp    0x120(%rsi),%rdx
  0x000000010210fbe2: jne    0x000000010210fbf1
  0x000000010210fbe4: addq   $0x1,0x128(%rsi)
  0x000000010210fbec: jmpq   0x000000010210fc57
  0x000000010210fbf1: cmp    0x130(%rsi),%rdx
  0x000000010210fbf8: jne    0x000000010210fc07
  0x000000010210fbfa: addq   $0x1,0x138(%rsi)
  0x000000010210fc02: jmpq   0x000000010210fc57
  0x000000010210fc07: cmpq   $0x0,0x120(%rsi)
  0x000000010210fc12: jne    0x000000010210fc2b
  0x000000010210fc14: mov    %rdx,0x120(%rsi)
  0x000000010210fc1b: movq   $0x1,0x128(%rsi)
  0x000000010210fc26: jmpq   0x000000010210fc57
  0x000000010210fc2b: cmpq   $0x0,0x130(%rsi)
  0x000000010210fc36: jne    0x000000010210fc4f
  0x000000010210fc38: mov    %rdx,0x130(%rsi)
  0x000000010210fc3f: movq   $0x1,0x138(%rsi)
  0x000000010210fc4a: jmpq   0x000000010210fc57
  0x000000010210fc4f: addq   $0x1,0x118(%rsi)
  0x000000010210fc57: mov    0x28(%rsp),%edx
  0x000000010210fc5b: mov    %rax,%rsi          ;*invokevirtual toLowerCase
                                                ; - java.lang.Character::toLowerCase@5 (line 6338)
                                                ; - java.lang.Character::toLowerCase@1 (line 6309)

  0x000000010210fc5e: nop
  0x000000010210fc5f: nop
  0x000000010210fc60: nop
  0x000000010210fc61: nop
  0x000000010210fc62: nop
  0x000000010210fc63: nop
  0x000000010210fc64: nop
  0x000000010210fc65: movabs $0xffffffffffffffff,%rax
  0x000000010210fc6f: callq  0x0000000102046220  ; OopMap{off=340}
                                                ;*invokevirtual toLowerCase
                                                ; - java.lang.Character::toLowerCase@5 (line 6338)
                                                ; - java.lang.Character::toLowerCase@1 (line 6309)
                                                ;   {virtual_call}
  0x000000010210fc74: and    $0xffff,%eax
  0x000000010210fc7a: and    $0xffff,%eax
  0x000000010210fc80: add    $0x40,%rsp
  0x000000010210fc84: pop    %rbp
  0x000000010210fc85: test   %eax,-0x9e3b8b(%rip)        # 0x000000010172c100
                                                ;   {poll_return}
  0x000000010210fc8b: retq
  0x000000010210fc8c: mov    %rdi,0x8(%rsp)
  0x000000010210fc91: movq   $0xffffffffffffffff,(%rsp)
  0x000000010210fc99: callq  0x00000001020fe020  ; OopMap{off=382}
                                                ;*synchronization entry
                                                ; - java.lang.Character::toLowerCase@-1 (line 6309)
                                                ;   {runtime_call}
  0x000000010210fc9e: jmpq   0x000000010210fb5e
  0x000000010210fca3: mov    %rdi,0x8(%rsp)
  0x000000010210fca8: movq   $0xffffffffffffffff,(%rsp)
  0x000000010210fcb0: callq  0x00000001020fe020  ; OopMap{off=405}
                                                ;*synchronization entry
                                                ; - java.lang.Character::toLowerCase@-1 (line 6338)
                                                ; - java.lang.Character::toLowerCase@1 (line 6309)
                                                ;   {runtime_call}
  0x000000010210fcb5: jmpq   0x000000010210fba2
  0x000000010210fcba: callq  0x000000010206db40  ; OopMap{rax=Oop off=415}
                                                ;*invokevirtual toLowerCase
                                                ; - java.lang.Character::toLowerCase@5 (line 6338)
                                                ; - java.lang.Character::toLowerCase@1 (line 6309)
                                                ;   {runtime_call}
  0x000000010210fcbf: nop
  0x000000010210fcc0: nop
  0x000000010210fcc1: mov    0x2a8(%r15),%rax
  0x000000010210fcc8: movabs $0x0,%r10
  0x000000010210fcd2: mov    %r10,0x2a8(%r15)
  0x000000010210fcd9: movabs $0x0,%r10
  0x000000010210fce3: mov    %r10,0x2b0(%r15)
  0x000000010210fcea: add    $0x40,%rsp
  0x000000010210fcee: pop    %rbp
  0x000000010210fcef: jmpq   0x000000010206e6a0  ;   {runtime_call}
  0x000000010210fcf4: hlt
  0x000000010210fcf5: hlt
  0x000000010210fcf6: hlt
  0x000000010210fcf7: hlt
  0x000000010210fcf8: hlt
  0x000000010210fcf9: hlt
  0x000000010210fcfa: hlt
  0x000000010210fcfb: hlt
  0x000000010210fcfc: hlt
  0x000000010210fcfd: hlt
  0x000000010210fcfe: hlt
  0x000000010210fcff: hlt
[Stub Code]
  0x000000010210fd00: nop                       ;   {no_reloc}
  0x000000010210fd01: nop
  0x000000010210fd02: nop
  0x000000010210fd03: nop
  0x000000010210fd04: nop
  0x000000010210fd05: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010210fd0f: jmpq   0x000000010210fd0f  ;   {runtime_call}
  0x000000010210fd14: nop
  0x000000010210fd15: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010210fd1f: jmpq   0x000000010210fd1f  ;   {runtime_call}
[Exception Handler]
  0x000000010210fd24: callq  0x00000001020fb9a0  ;   {runtime_call}
  0x000000010210fd29: mov    %rsp,-0x28(%rsp)
  0x000000010210fd2e: sub    $0x80,%rsp
  0x000000010210fd35: mov    %rax,0x78(%rsp)
  0x000000010210fd3a: mov    %rcx,0x70(%rsp)
  0x000000010210fd3f: mov    %rdx,0x68(%rsp)
  0x000000010210fd44: mov    %rbx,0x60(%rsp)
  0x000000010210fd49: mov    %rbp,0x50(%rsp)
  0x000000010210fd4e: mov    %rsi,0x48(%rsp)
  0x000000010210fd53: mov    %rdi,0x40(%rsp)
  0x000000010210fd58: mov    %r8,0x38(%rsp)
  0x000000010210fd5d: mov    %r9,0x30(%rsp)
  0x000000010210fd62: mov    %r10,0x28(%rsp)
  0x000000010210fd67: mov    %r11,0x20(%rsp)
  0x000000010210fd6c: mov    %r12,0x18(%rsp)
  0x000000010210fd71: mov    %r13,0x10(%rsp)
  0x000000010210fd76: mov    %r14,0x8(%rsp)
  0x000000010210fd7b: mov    %r15,(%rsp)
  0x000000010210fd7f: movabs $0x100d1ee90,%rdi  ;   {external_word}
  0x000000010210fd89: movabs $0x10210fd29,%rsi  ;   {internal_word}
  0x000000010210fd93: mov    %rsp,%rdx
  0x000000010210fd96: and    $0xfffffffffffffff0,%rsp
  0x000000010210fd9a: callq  0x0000000100b4a196  ;   {runtime_call}
  0x000000010210fd9f: hlt
[Deopt Handler Code]
  0x000000010210fda0: movabs $0x10210fda0,%r10  ;   {section_word}
  0x000000010210fdaa: push   %r10
  0x000000010210fdac: jmpq   0x00000001020473c0  ;   {runtime_call}
  0x000000010210fdb1: hlt
  0x000000010210fdb2: hlt
  0x000000010210fdb3: hlt
  0x000000010210fdb4: hlt
  0x000000010210fdb5: hlt
  0x000000010210fdb6: hlt
  0x000000010210fdb7: hlt
[Loaded sun.misc.ExtensionDependency from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
Decoding compiled method 0x000000010210ff10:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000115ee2b38} 'append' '(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;' in 'java/lang/AbstractStringBuilder'
  # this:     rsi:rsi   = 'java/lang/AbstractStringBuilder'
  # parm0:    rdx:rdx   = 'java/lang/String'
  #           [sp+0xf0]  (sp of caller)
  0x00000001021100e0: mov    0x8(%rsi),%r10d
  0x00000001021100e4: shl    $0x3,%r10
  0x00000001021100e8: cmp    %rax,%r10
  0x00000001021100eb: jne    0x0000000102045e20  ;   {runtime_call}
  0x00000001021100f1: data32 data32 nopw 0x0(%rax,%rax,1)
  0x00000001021100fc: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x0000000102110100: mov    %eax,-0x14000(%rsp)
  0x0000000102110107: push   %rbp
  0x0000000102110108: sub    $0xe0,%rsp
  0x000000010211010f: mov    %rsi,0xb8(%rsp)
  0x0000000102110117: mov    %rdx,0xc0(%rsp)
  0x000000010211011f: movabs $0x116065c30,%rdi  ;   {metadata(method data for {method} {0x0000000115ee2b38} 'append' '(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;' in 'java/lang/AbstractStringBuilder')}
  0x0000000102110129: mov    0xdc(%rdi),%ebx
  0x000000010211012f: add    $0x8,%ebx
  0x0000000102110132: mov    %ebx,0xdc(%rdi)
  0x0000000102110138: movabs $0x115ee2b38,%rdi  ;   {metadata({method} {0x0000000115ee2b38} 'append' '(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;' in 'java/lang/AbstractStringBuilder')}
  0x0000000102110142: and    $0x1ff8,%ebx
  0x0000000102110148: cmp    $0x0,%ebx
  0x000000010211014b: je     0x0000000102110673  ;*aload_1
                                                ; - java.lang.AbstractStringBuilder::append@0 (line 445)

  0x0000000102110151: cmp    $0x0,%rdx
  0x0000000102110155: movabs $0x116065c30,%rdi  ;   {metadata(method data for {method} {0x0000000115ee2b38} 'append' '(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;' in 'java/lang/AbstractStringBuilder')}
  0x000000010211015f: movabs $0x108,%rbx
  0x0000000102110169: jne    0x0000000102110179
  0x000000010211016f: movabs $0x118,%rbx
  0x0000000102110179: mov    (%rdi,%rbx,1),%rax
  0x000000010211017d: lea    0x1(%rax),%rax
  0x0000000102110181: mov    %rax,(%rdi,%rbx,1)
  0x0000000102110185: je     0x0000000102110643  ;*ifnonnull
                                                ; - java.lang.AbstractStringBuilder::append@1 (line 445)

  0x000000010211018b: cmp    (%rdx),%rax        ;*invokevirtual length
                                                ; - java.lang.AbstractStringBuilder::append@10 (line 447)
                                                ; implicit exception: dispatches to 0x000000010211068a
  0x000000010211018e: mov    %rdx,%rdi
  0x0000000102110191: movabs $0x116065c30,%rbx  ;   {metadata(method data for {method} {0x0000000115ee2b38} 'append' '(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;' in 'java/lang/AbstractStringBuilder')}
  0x000000010211019b: mov    0x8(%rdi),%edi
  0x000000010211019e: shl    $0x3,%rdi
  0x00000001021101a2: cmp    0x140(%rbx),%rdi
  0x00000001021101a9: jne    0x00000001021101b8
  0x00000001021101ab: addq   $0x1,0x148(%rbx)
  0x00000001021101b3: jmpq   0x000000010211021e
  0x00000001021101b8: cmp    0x150(%rbx),%rdi
  0x00000001021101bf: jne    0x00000001021101ce
  0x00000001021101c1: addq   $0x1,0x158(%rbx)
  0x00000001021101c9: jmpq   0x000000010211021e
  0x00000001021101ce: cmpq   $0x0,0x140(%rbx)
  0x00000001021101d9: jne    0x00000001021101f2
  0x00000001021101db: mov    %rdi,0x140(%rbx)
  0x00000001021101e2: movq   $0x1,0x148(%rbx)
  0x00000001021101ed: jmpq   0x000000010211021e
  0x00000001021101f2: cmpq   $0x0,0x150(%rbx)
  0x00000001021101fd: jne    0x0000000102110216
  0x00000001021101ff: mov    %rdi,0x150(%rbx)
  0x0000000102110206: movq   $0x1,0x158(%rbx)
  0x0000000102110211: jmpq   0x000000010211021e
  0x0000000102110216: addq   $0x1,0x138(%rbx)
  0x000000010211021e: movabs $0x1160450c0,%rdi  ;   {metadata(method data for {method} {0x0000000115e6fcf8} 'length' '()I' in 'java/lang/String')}
  0x0000000102110228: mov    0xdc(%rdi),%ebx
  0x000000010211022e: add    $0x8,%ebx
  0x0000000102110231: mov    %ebx,0xdc(%rdi)
  0x0000000102110237: movabs $0x115e6fcf8,%rdi  ;   {metadata({method} {0x0000000115e6fcf8} 'length' '()I' in 'java/lang/String')}
  0x0000000102110241: and    $0x7ffff8,%ebx
  0x0000000102110247: cmp    $0x0,%ebx
  0x000000010211024a: je     0x000000010211068f
  0x0000000102110250: mov    0xc(%rdx),%edi
  0x0000000102110253: shl    $0x3,%rdi          ;*getfield value
                                                ; - java.lang.String::length@1 (line 623)
                                                ; - java.lang.AbstractStringBuilder::append@10 (line 447)

  0x0000000102110257: mov    0xc(%rdi),%edi     ;*arraylength
                                                ; - java.lang.String::length@4 (line 623)
                                                ; - java.lang.AbstractStringBuilder::append@10 (line 447)
                                                ; implicit exception: dispatches to 0x00000001021106a6
  0x000000010211025a: mov    %edi,0xac(%rsp)
  0x0000000102110261: mov    0xc(%rsi),%ebx     ;*getfield count
                                                ; - java.lang.AbstractStringBuilder::append@16 (line 448)

  0x0000000102110264: add    %edi,%ebx
  0x0000000102110266: mov    %ebx,0xc8(%rsp)
  0x000000010211026d: mov    %rsi,%rax
  0x0000000102110270: movabs $0x116065c30,%rcx  ;   {metadata(method data for {method} {0x0000000115ee2b38} 'append' '(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;' in 'java/lang/AbstractStringBuilder')}
  0x000000010211027a: addq   $0x1,0x168(%rcx)
  0x0000000102110282: movabs $0x116073e80,%rax  ;   {metadata(method data for {method} {0x0000000115ee21e0} 'ensureCapacityInternal' '(I)V' in 'java/lang/AbstractStringBuilder')}
  0x000000010211028c: mov    0xdc(%rax),%ecx
  0x0000000102110292: add    $0x8,%ecx
  0x0000000102110295: mov    %ecx,0xdc(%rax)
  0x000000010211029b: movabs $0x115ee21e0,%rax  ;   {metadata({method} {0x0000000115ee21e0} 'ensureCapacityInternal' '(I)V' in 'java/lang/AbstractStringBuilder')}
  0x00000001021102a5: and    $0x7ffff8,%ecx
  0x00000001021102ab: cmp    $0x0,%ecx
  0x00000001021102ae: je     0x00000001021106ab
  0x00000001021102b4: mov    0x10(%rsi),%eax
  0x00000001021102b7: shl    $0x3,%rax          ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@2 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)

  0x00000001021102bb: mov    %rax,0xb0(%rsp)
  0x00000001021102c3: mov    0xc(%rax),%ecx     ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ; implicit exception: dispatches to 0x00000001021106c2
  0x00000001021102c6: mov    %rbx,%r8
  0x00000001021102c9: sub    %ecx,%r8d
  0x00000001021102cc: cmp    $0x0,%r8d
  0x00000001021102d0: movabs $0x116073e80,%r8   ;   {metadata(method data for {method} {0x0000000115ee21e0} 'ensureCapacityInternal' '(I)V' in 'java/lang/AbstractStringBuilder')}
  0x00000001021102da: movabs $0x108,%r9
  0x00000001021102e4: jle    0x00000001021102f4
  0x00000001021102ea: movabs $0x118,%r9
  0x00000001021102f4: mov    (%r8,%r9,1),%r11
  0x00000001021102f8: lea    0x1(%r11),%r11
  0x00000001021102fc: mov    %r11,(%r8,%r9,1)
  0x0000000102110300: jle    0x000000010211055e  ;*ifle
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@7 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)

  0x0000000102110306: mov    %ecx,0xa8(%rsp)
  0x000000010211030d: mov    %rsi,%r8
  0x0000000102110310: movabs $0x116073e80,%r9   ;   {metadata(method data for {method} {0x0000000115ee21e0} 'ensureCapacityInternal' '(I)V' in 'java/lang/AbstractStringBuilder')}
  0x000000010211031a: addq   $0x1,0x128(%r9)
  0x0000000102110322: mov    %rbx,%rdx
  0x0000000102110325: mov    %rsi,%r9
  0x0000000102110328: mov    %r9,%rsi           ;*invokespecial newCapacity
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)

  0x000000010211032b: nop
  0x000000010211032c: nop
  0x000000010211032d: nop
  0x000000010211032e: nop
  0x000000010211032f: callq  0x0000000102046020  ; OopMap{[184]=Oop [192]=Oop [176]=Oop off=596}
                                                ;*invokespecial newCapacity
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ;   {optimized virtual_call}
  0x0000000102110334: movabs $0x116073e80,%rbx  ;   {metadata(method data for {method} {0x0000000115ee21e0} 'ensureCapacityInternal' '(I)V' in 'java/lang/AbstractStringBuilder')}
  0x000000010211033e: addq   $0x1,0x138(%rbx)
  0x0000000102110346: movabs $0x1160741c0,%rbx  ;   {metadata(method data for {method} {0x0000000115f89d30} 'copyOf' '([CI)[C' in 'java/util/Arrays')}
  0x0000000102110350: mov    0xdc(%rbx),%edx
  0x0000000102110356: add    $0x8,%edx
  0x0000000102110359: mov    %edx,0xdc(%rbx)
  0x000000010211035f: movabs $0x115f89d30,%rbx  ;   {metadata({method} {0x0000000115f89d30} 'copyOf' '([CI)[C' in 'java/util/Arrays')}
  0x0000000102110369: and    $0x7ffff8,%edx
  0x000000010211036f: cmp    $0x0,%edx
  0x0000000102110372: je     0x00000001021106c7
  0x0000000102110378: mov    %rax,%rbx
  0x000000010211037b: movabs $0x7c0000208,%rdx  ;   {metadata({type array char})}
  0x0000000102110385: mov    %rax,%r11
  0x0000000102110388: movslq %ebx,%rbx
  0x000000010211038b: mov    %rbx,%rdi
  0x000000010211038e: cmp    $0xffffff,%rbx
  0x0000000102110395: ja     0x00000001021106de
  0x000000010211039b: movabs $0x17,%rsi
  0x00000001021103a5: lea    (%rsi,%rbx,2),%rsi
  0x00000001021103a9: and    $0xfffffffffffffff8,%rsi
  0x00000001021103ad: mov    0x60(%r15),%rax
  0x00000001021103b1: lea    (%rax,%rsi,1),%rsi
  0x00000001021103b5: cmp    0x70(%r15),%rsi
  0x00000001021103b9: ja     0x00000001021106de
  0x00000001021103bf: mov    %rsi,0x60(%r15)
  0x00000001021103c3: sub    %rax,%rsi
  0x00000001021103c6: movq   $0x1,(%rax)
  0x00000001021103cd: mov    %rdx,%rcx
  0x00000001021103d0: shr    $0x3,%rcx
  0x00000001021103d4: mov    %ecx,0x8(%rax)
  0x00000001021103d7: mov    %ebx,0xc(%rax)
  0x00000001021103da: sub    $0x10,%rsi
  0x00000001021103de: je     0x00000001021103f5
  0x00000001021103e4: xor    %rbx,%rbx
  0x00000001021103e7: shr    $0x3,%rsi
  0x00000001021103eb: mov    %rbx,0x8(%rax,%rsi,8)
  0x00000001021103f0: dec    %rsi
  0x00000001021103f3: jne    0x00000001021103eb  ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)

  0x00000001021103f5: movabs $0x1160741c0,%rsi  ;   {metadata(method data for {method} {0x0000000115f89d30} 'copyOf' '([CI)[C' in 'java/util/Arrays')}
  0x00000001021103ff: addq   $0x1,0x108(%rsi)
  0x0000000102110407: movabs $0x11603afa0,%rsi  ;   {metadata(method data for {method} {0x0000000115f64fd8} 'min' '(II)I' in 'java/lang/Math')}
  0x0000000102110411: mov    0xdc(%rsi),%edx
  0x0000000102110417: add    $0x8,%edx
  0x000000010211041a: mov    %edx,0xdc(%rsi)
  0x0000000102110420: movabs $0x115f64fd8,%rsi  ;   {metadata({method} {0x0000000115f64fd8} 'min' '(II)I' in 'java/lang/Math')}
  0x000000010211042a: and    $0x7ffff8,%edx
  0x0000000102110430: cmp    $0x0,%edx
  0x0000000102110433: je     0x00000001021106e8
  0x0000000102110439: mov    0xa8(%rsp),%ecx
  0x0000000102110440: cmp    %r11d,%ecx
  0x0000000102110443: movabs $0x11603afa0,%rsi  ;   {metadata(method data for {method} {0x0000000115f64fd8} 'min' '(II)I' in 'java/lang/Math')}
  0x000000010211044d: movabs $0x108,%rdx
  0x0000000102110457: jg     0x0000000102110467
  0x000000010211045d: movabs $0x118,%rdx
  0x0000000102110467: mov    (%rsi,%rdx,1),%r8
  0x000000010211046b: lea    0x1(%r8),%r8
  0x000000010211046f: mov    %r8,(%rsi,%rdx,1)
  0x0000000102110473: jg     0x0000000102110491  ;*if_icmpgt
                                                ; - java.lang.Math::min@2 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)

  0x0000000102110479: movabs $0x11603afa0,%rsi  ;   {metadata(method data for {method} {0x0000000115f64fd8} 'min' '(II)I' in 'java/lang/Math')}
  0x0000000102110483: incl   0x128(%rsi)
  0x0000000102110489: mov    %rcx,%r9
  0x000000010211048c: jmpq   0x0000000102110494  ;*goto
                                                ; - java.lang.Math::min@6 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)

  0x0000000102110491: mov    %r11,%r9           ;*ireturn
                                                ; - java.lang.Math::min@10 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)

  0x0000000102110494: mov    %r11d,0xcc(%rsp)
  0x000000010211049c: mov    0xb0(%rsp),%rdi
  0x00000001021104a4: movabs $0x1160741c0,%rsi  ;   {metadata(method data for {method} {0x0000000115f89d30} 'copyOf' '([CI)[C' in 'java/util/Arrays')}
  0x00000001021104ae: [Loaded sun.misc.IOUtils from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
addq   $0x1,0x118(%rsi)
  0x00000001021104b6: mov    %rdi,%rsi
  0x00000001021104b9: mov    $0x0,%edx
  0x00000001021104be: mov    %rax,%rcx
  0x00000001021104c1: mov    $0x0,%r8d
  0x00000001021104c7: mov    %rax,0xd0(%rsp)
  0x00000001021104cf: lea    (%rdx,%r9,1),%rdi
  0x00000001021104d3: cmp    0xc(%rsi),%edi
  0x00000001021104d6: ja     0x00000001021106ff
  0x00000001021104dc: lea    (%r8,%r9,1),%rdi
  0x00000001021104e0: cmp    0xc(%rcx),%edi
  0x00000001021104e3: ja     0x00000001021106ff
  0x00000001021104e9: test   %r9d,%r9d
  0x00000001021104ec: jl     0x00000001021106ff
  0x00000001021104f2: je     0x000000010211052e
  0x00000001021104f8: movslq %edx,%rdx
  0x00000001021104fb: movslq %r8d,%r8
  0x00000001021104fe: lea    0x10(%rsi,%rdx,2),%rdi
  0x0000000102110503: lea    0x10(%rcx,%r8,2),%rsi
  0x0000000102110508: mov    %r9,%rdx
  0x000000010211050b: test   $0xf,%esp
  0x0000000102110511: je     0x0000000102110529
  0x0000000102110517: sub    $0x8,%rsp
  0x000000010211051b: callq  Stub::jshort_disjoint_arraycopy
                                                ;   {runtime_call}
  0x0000000102110520: add    $0x8,%rsp
  0x0000000102110524: jmpq   0x000000010211052e
  0x0000000102110529: callq  Stub::jshort_disjoint_arraycopy
                                                ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ;   {runtime_call}
  0x000000010211052e: mov    0xd0(%rsp),%rax
  0x0000000102110536: mov    0xb8(%rsp),%rsi
  0x000000010211053e: mov    %rax,%r10
  0x0000000102110541: shr    $0x3,%r10
  0x0000000102110545: mov    %r10d,0x10(%rsi)
  0x0000000102110549: mov    %rsi,%rdx
  0x000000010211054c: shr    $0x9,%rdx
  0x0000000102110550: movabs $0x10d9c0000,%rcx
  0x000000010211055a: movb   $0x0,(%rdx,%rcx,1)  ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@23 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)

  0x000000010211055e: mov    0xac(%rsp),%edi
  0x0000000102110565: mov    0x10(%rsi),%r8d
  0x0000000102110569: shl    $0x3,%r8           ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::append@28 (line 449)

  0x000000010211056d: mov    0xc(%rsi),%r9d     ;*getfield count
                                                ; - java.lang.AbstractStringBuilder::append@32 (line 449)

  0x0000000102110571: mov    0xc0(%rsp),%rdx
  0x0000000102110579: movabs $0x116065c30,%rcx  ;   {metadata(method data for {method} {0x0000000115ee2b38} 'append' '(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;' in 'java/lang/AbstractStringBuilder')}
  0x0000000102110583: mov    0x8(%rdx),%edx
  0x0000000102110586: shl    $0x3,%rdx
  0x000000010211058a: cmp    0x180(%rcx),%rdx
  0x0000000102110591: jne    0x00000001021105a0
  0x0000000102110593: addq   $0x1,0x188(%rcx)
  0x000000010211059b: jmpq   0x0000000102110606
  0x00000001021105a0: cmp    0x190(%rcx),%rdx
  0x00000001021105a7: jne    0x00000001021105b6
  0x00000001021105a9: addq   $0x1,0x198(%rcx)
  0x00000001021105b1: jmpq   0x0000000102110606
  0x00000001021105b6: cmpq   $0x0,0x180(%rcx)
  0x00000001021105c1: jne    0x00000001021105da
  0x00000001021105c3: mov    %rdx,0x180(%rcx)
  0x00000001021105ca: movq   $0x1,0x188(%rcx)
  0x00000001021105d5: jmpq   0x0000000102110606
  0x00000001021105da: cmpq   $0x0,0x190(%rcx)
  0x00000001021105e5: jne    0x00000001021105fe
  0x00000001021105e7: mov    %rdx,0x190(%rcx)
  0x00000001021105ee: movq   $0x1,0x198(%rcx)
  0x00000001021105f9: jmpq   0x0000000102110606
  0x00000001021105fe: addq   $0x1,0x178(%rcx)
  0x0000000102110606: mov    $0x0,%edx
  0x000000010211060b: mov    %rdi,%rcx
  0x000000010211060e: mov    0xc0(%rsp),%rsi    ;*invokevirtual getChars
                                                ; - java.lang.AbstractStringBuilder::append@35 (line 449)

  0x0000000102110616: nop
  0x0000000102110617: callq  0x0000000102046020  ; OopMap{[192]=Oop [184]=Oop off=1340}
                                                ;*invokevirtual getChars
                                                ; - java.lang.AbstractStringBuilder::append@35 (line 449)
                                                ;   {optimized virtual_call}
  0x000000010211061c: mov    0xb8(%rsp),%rsi
  0x0000000102110624: mov    0xc(%rsi),%eax     ;*getfield count
                                                ; - java.lang.AbstractStringBuilder::append@40 (line 450)

  0x0000000102110627: add    0xac(%rsp),%eax
  0x000000010211062e: mov    %eax,0xc(%rsi)     ;*putfield count
                                                ; - java.lang.AbstractStringBuilder::append@45 (line 450)

  0x0000000102110631: mov    %rsi,%rax
  0x0000000102110634: add    $0xe0,%rsp
  0x000000010211063b: pop    %rbp
  0x000000010211063c: test   %eax,-0x9e4542(%rip)        # 0x000000010172c100
                                                ;   {poll_return}
  0x0000000102110642: retq                      ;*areturn
                                                ; - java.lang.AbstractStringBuilder::append@49 (line 451)

  0x0000000102110643: mov    %rsi,%rdi
  0x0000000102110646: movabs $0x116065c30,%rbx  ;   {metadata(method data for {method} {0x0000000115ee2b38} 'append' '(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;' in 'java/lang/AbstractStringBuilder')}
  0x0000000102110650: addq   $0x1,0x128(%rbx)
  0x0000000102110658: mov    %rsi,%rdi
  0x000000010211065b: mov    %rdi,%rsi          ;*invokespecial appendNull
                                                ; - java.lang.AbstractStringBuilder::append@5 (line 446)

  0x000000010211065e: nop
  0x000000010211065f: callq  0x0000000102046020  ; OopMap{[184]=Oop [192]=Oop off=1412}
                                                ;*invokespecial appendNull
                                                ; - java.lang.AbstractStringBuilder::append@5 (line 446)
                                                ;   {optimized virtual_call}
  0x0000000102110664: add    $0xe0,%rsp
  0x000000010211066b: pop    %rbp
  0x000000010211066c: test   %eax,-0x9e4572(%rip)        # 0x000000010172c100
                                                ;   {poll_return}
  0x0000000102110672: retq
  0x0000000102110673: mov    %rdi,0x8(%rsp)
  0x0000000102110678: movq   $0xffffffffffffffff,(%rsp)
  0x0000000102110680: callq  0x00000001020fe020  ; OopMap{rsi=Oop [184]=Oop rdx=Oop [192]=Oop off=1445}
                                                ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::append@-1 (line 445)
                                                ;   {runtime_call}
  0x0000000102110685: jmpq   0x0000000102110151
  0x000000010211068a: callq  0x000000010206db40  ; OopMap{rsi=Oop [184]=Oop rdx=Oop [192]=Oop off=1455}
                                                ;*invokevirtual length
                                                ; - java.lang.AbstractStringBuilder::append@10 (line 447)
                                                ;   {runtime_call}
  0x000000010211068f: mov    %rdi,0x8(%rsp)
  0x0000000102110694: movq   $0xffffffffffffffff,(%rsp)
  0x000000010211069c: callq  0x00000001020fe020  ; OopMap{rsi=Oop [184]=Oop rdx=Oop [192]=Oop off=1473}
                                                ;*synchronization entry
                                                ; - java.lang.String::length@-1 (line 623)
                                                ; - java.lang.AbstractStringBuilder::append@10 (line 447)
                                                ;   {runtime_call}
  0x00000001021106a1: jmpq   0x0000000102110250
  0x00000001021106a6: callq  0x000000010206db40  ; OopMap{rsi=Oop [184]=Oop rdx=Oop [192]=Oop off=1483}
                                                ;*arraylength
                                                ; - java.lang.String::length@4 (line 623)
                                                ; - java.lang.AbstractStringBuilder::append@10 (line 447)
                                                ;   {runtime_call}
  0x00000001021106ab: mov    %rax,0x8(%rsp)
  0x00000001021106b0: movq   $0xffffffffffffffff,(%rsp)
  0x00000001021106b8: callq  0x00000001020fe020  ; OopMap{rsi=Oop [184]=Oop rdx=Oop [192]=Oop off=1501}
                                                ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@-1 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ;   {runtime_call}
  0x00000001021106bd: jmpq   0x00000001021102b4
  0x00000001021106c2: callq  0x000000010206db40  ; OopMap{rsi=Oop [184]=Oop rdx=Oop [192]=Oop rax=Oop [176]=Oop off=1511}
                                                ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ;   {runtime_call}
  0x00000001021106c7: mov    %rbx,0x8(%rsp)
  0x00000001021106cc: movq   $0xffffffffffffffff,(%rsp)
  0x00000001021106d4: callq  0x00000001020fe020  ; OopMap{[184]=Oop [192]=Oop [176]=Oop off=1529}
                                                ;*synchronization entry
                                                ; - java.util.Arrays::copyOf@-1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ;   {runtime_call}
  0x00000001021106d9: jmpq   0x0000000102110378
  0x00000001021106de: callq  0x000000010206c8a0  ; OopMap{[184]=Oop [192]=Oop [176]=Oop off=1539}
                                                ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ;   {runtime_call}
  0x00000001021106e3: jmpq   0x00000001021103f5
  0x00000001021106e8: mov    %rsi,0x8(%rsp)
  0x00000001021106ed: movq   $0xffffffffffffffff,(%rsp)
  0x00000001021106f5: callq  0x00000001020fe020  ; OopMap{[184]=Oop [192]=Oop [176]=Oop rax=Oop off=1562}
                                                ;*synchronization entry
                                                ; - java.lang.Math::min@-1 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ;   {runtime_call}
  0x00000001021106fa: jmpq   0x0000000102110439
  0x00000001021106ff: callq  0x0000000102046420  ; OopMap{[184]=Oop [192]=Oop [208]=Oop [176]=Oop off=1572}
                                                ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ;   {static_call}
  0x0000000102110704: jmpq   0x000000010211052e
  0x0000000102110709: nop
  0x000000010211070a: nop
  0x000000010211070b: mov    0x2a8(%r15),%rax
  0x0000000102110712: movabs $0x0,%r10
  0x000000010211071c: mov    %r10,0x2a8(%r15)
  0x0000000102110723: movabs $0x0,%r10
  0x000000010211072d: mov    %r10,0x2b0(%r15)
  0x0000000102110734: add    $0xe0,%rsp
  0x000000010211073b: pop    %rbp
  0x000000010211073c: jmpq   0x000000010206e6a0  ;   {runtime_call}
  0x0000000102110741: hlt
  0x0000000102110742: hlt
  0x0000000102110743: hlt
  0x0000000102110744: hlt
  0x0000000102110745: hlt
  0x0000000102110746: hlt
  0x0000000102110747: hlt
  0x0000000102110748: hlt
  0x0000000102110749: hlt
  0x000000010211074a: hlt
  0x000000010211074b: hlt
  0x000000010211074c: hlt
  0x000000010211074d: hlt
  0x000000010211074e: hlt
  0x000000010211074f: hlt
  0x0000000102110750: hlt
  0x0000000102110751: hlt
  0x0000000102110752: hlt
  0x0000000102110753: hlt
  0x0000000102110754: hlt
  0x0000000102110755: hlt
  0x0000000102110756: hlt
  0x0000000102110757: hlt
  0x0000000102110758: hlt
  0x0000000102110759: hlt
  0x000000010211075a: hlt
  0x000000010211075b: hlt
  0x000000010211075c: hlt
  0x000000010211075d: hlt
  0x000000010211075e: hlt
  0x000000010211075f: hlt
[Stub Code]
  0x0000000102110760: nop                       ;   {no_reloc}
  0x0000000102110761: nop
  0x0000000102110762: nop
  0x0000000102110763: nop
  0x0000000102110764: nop
  0x0000000102110765: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010211076f: jmpq   0x000000010211076f  ;   {runtime_call}
  0x0000000102110774: nop
  0x0000000102110775: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010211077f: jmpq   0x000000010211077f  ;   {runtime_call}
  0x0000000102110784: nop
  0x0000000102110785: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010211078f: jmpq   0x000000010211078f  ;   {runtime_call}
  0x0000000102110794: nop
  0x0000000102110795: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010211079f: jmpq   0x000000010211079f  ;   {runtime_call}
[Exception Handler]
  0x00000001021107a4: callq  0x00000001020fb9a0  ;   {runtime_call}
  0x00000001021107a9: mov    %rsp,-0x28(%rsp)
  0x00000001021107ae: sub    $0x80,%rsp
  0x00000001021107b5: mov    %rax,0x78(%rsp)
  0x00000001021107ba: mov    %rcx,0x70(%rsp)
  0x00000001021107bf: mov    %rdx,0x68(%rsp)
  0x00000001021107c4: mov    %rbx,0x60(%rsp)
  0x00000001021107c9: mov    %rbp,0x50(%rsp)
  0x00000001021107ce: mov    %rsi,0x48(%rsp)
  0x00000001021107d3: mov    %rdi,0x40(%rsp)
  0x00000001021107d8: mov    %r8,0x38(%rsp)
  0x00000001021107dd: mov    %r9,0x30(%rsp)
  0x00000001021107e2: mov    %r10,0x28(%rsp)
  0x00000001021107e7: mov    %r11,0x20(%rsp)
  0x00000001021107ec: mov    %r12,0x18(%rsp)
  0x00000001021107f1: mov    %r13,0x10(%rsp)
  0x00000001021107f6: mov    %r14,0x8(%rsp)
  0x00000001021107fb: mov    %r15,(%rsp)
  0x00000001021107ff: movabs $0x100d1ee90,%rdi  ;   {external_word}
  0x0000000102110809: movabs $0x1021107a9,%rsi  ;   {internal_word}
  0x0000000102110813: mov    %rsp,%rdx
  0x0000000102110816: and    $0xfffffffffffffff0,%rsp
  0x000000010211081a: callq  0x0000000100b4a196  ;   {runtime_call}
  0x000000010211081f: hlt
[Deopt Handler Code]
  0x0000000102110820: movabs $0x102110820,%r10  ;   {section_word}
  0x000000010211082a: push   %r10
  0x000000010211082c: jmpq   0x00000001020473c0  ;   {runtime_call}
  0x0000000102110831: hlt
  0x0000000102110832: hlt
  0x0000000102110833: hlt
  0x0000000102110834: hlt
  0x0000000102110835: hlt
  0x0000000102110836: hlt
  0x0000000102110837: hlt
Decoding compiled method 0x000000010210c850:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000115ee61c0} 'append' '(Ljava/lang/String;)Ljava/lang/StringBuilder;' in 'java/lang/StringBuilder'
  # this:     rsi:rsi   = 'java/lang/StringBuilder'
  # parm0:    rdx:rdx   = 'java/lang/String'
  #           [sp+0x50]  (sp of caller)
  0x000000010210c9c0: mov    0x8(%rsi),%r10d
  0x000000010210c9c4: shl    $0x3,%r10
  0x000000010210c9c8: cmp    %rax,%r10
  0x000000010210c9cb: jne    0x0000000102045e20  ;   {runtime_call}
  0x000000010210c9d1: data32 data32 nopw 0x0(%rax,%rax,1)
  0x000000010210c9dc: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x000000010210c9e0: mov    %eax,-0x14000(%rsp)
  0x000000010210c9e7: push   %rbp
  0x000000010210c9e8: sub    $0x40,%rsp
  0x000000010210c9ec: movabs $0x116065af8,%rdi  ;   {metadata(method data for {method} {0x0000000115ee61c0} 'append' '(Ljava/lang/String;)Ljava/lang/StringBuilder;' in 'java/lang/StringBuilder')}
  0x000000010210c9f6: mov    0xdc(%rdi),%ebx
  0x000000010210c9fc: add    $0x8,%ebx
  0x000000010210c9ff: mov    %ebx,0xdc(%rdi)
  0x000000010210ca05: movabs $0x115ee61c0,%rdi  ;   {metadata({method} {0x0000000115ee61c0} 'append' '(Ljava/lang/String;)Ljava/lang/StringBuilder;' in 'java/lang/StringBuilder')}
  0x000000010210ca0f: and    $0x1ff8,%ebx
  0x000000010210ca15: cmp    $0x0,%ebx
  0x000000010210ca18: je     0x000000010210ca65  ;*aload_0
                                                ; - java.lang.StringBuilder::append@0 (line 136)

  0x000000010210ca1e: mov    %rsi,%rdi
  0x000000010210ca21: movabs $0x116065af8,%rbx  ;   {metadata(method data for {method} {0x0000000115ee61c0} 'append' '(Ljava/lang/String;)Ljava/lang/StringBuilder;' in 'java/lang/StringBuilder')}
  0x000000010210ca2b: addq   $0x1,0x108(%rbx)
  0x000000010210ca33: mov    %rdx,%rdi
  0x000000010210ca36: mov    %rdi,%rdx
  0x000000010210ca39: mov    %rsi,%rbx
  0x000000010210ca3c: mov    %rbx,%rsi          ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 136)

  0x000000010210ca3f: mov    %rdi,0x28(%rsp)
  0x000000010210ca44: mov    %rbx,0x20(%rsp)
  0x000000010210ca49: nop
  0x000000010210ca4a: nop
  0x000000010210ca4b: nop
  0x000000010210ca4c: nop
  0x000000010210ca4d: nop
  0x000000010210ca4e: nop
  0x000000010210ca4f: callq  0x0000000102046020  ; OopMap{[32]=Oop [40]=Oop off=148}
                                                ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ;   {optimized virtual_call}
  0x000000010210ca54: mov    0x20(%rsp),%rax
  0x000000010210ca59: add    $0x40,%rsp
  0x000000010210ca5d: pop    %rbp
  0x000000010210ca5e: test   %eax,-0x9e0964(%rip)        # 0x000000010172c100
                                                ;   {poll_return}
  0x000000010210ca64: retq
  0x000000010210ca65: mov    %rdi,0x8(%rsp)
  0x000000010210ca6a: movq   $0xffffffffffffffff,(%rsp)
  0x000000010210ca72: callq  0x00000001020fe020  ; OopMap{rsi=Oop rdx=Oop off=183}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::append@-1 (line 136)
                                                ;   {runtime_call}
  0x000000010210ca77: jmp    0x000000010210ca1e
  0x000000010210ca79: nop
  0x000000010210ca7a: nop
  0x000000010210ca7b: mov    0x2a8(%r15),%rax
  0x000000010210ca82: movabs $0x0,%r10
  0x000000010210ca8c: mov    %r10,0x2a8(%r15)
  0x000000010210ca93: movabs $0x0,%r10
  0x000000010210ca9d: mov    %r10,0x2b0(%r15)
  0x000000010210caa4: add    $0x40,%rsp
  0x000000010210caa8: pop    %rbp
  0x000000010210caa9: jmpq   0x000000010206e6a0  ;   {runtime_call}
  0x000000010210caae: hlt
  0x000000010210caaf: hlt
  0x000000010210cab0: hlt
  0x000000010210cab1: hlt
  0x000000010210cab2: hlt
  0x000000010210cab3: hlt
  0x000000010210cab4: hlt
  0x000000010210cab5: hlt
  0x000000010210cab6: hlt
  0x000000010210cab7: hlt
  0x000000010210cab8: hlt
  0x000000010210cab9: hlt
  0x000000010210caba: hlt
  0x000000010210cabb: hlt
  0x000000010210cabc: hlt
  0x000000010210cabd: hlt
  0x000000010210cabe: hlt
  0x000000010210cabf: hlt
[Stub Code]
  0x000000010210cac0: nop                       ;   {no_reloc}
  0x000000010210cac1: nop
  0x000000010210cac2: nop
  0x000000010210cac3: nop
  0x000000010210cac4: nop
  0x000000010210cac5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010210cacf: jmpq   0x000000010210cacf  ;   {runtime_call}
[Exception Handler]
  0x000000010210cad4: callq  0x00000001020fb9a0  ;   {runtime_call}
  0x000000010210cad9: mov    %rsp,-0x28(%rsp)
  0x000000010210cade: sub    $0x80,%rsp
  0x000000010210cae5: mov    %rax,0x78(%rsp)
  0x000000010210caea: mov    %rcx,0x70(%rsp)
  0x000000010210caef: mov    %rdx,0x68(%rsp)
  0x000000010210caf4: mov    %rbx,0x60(%rsp)
  0x000000010210caf9: mov    %rbp,0x50(%rsp)
  0x000000010210cafe: mov    %rsi,0x48(%rsp)
  0x000000010210cb03: mov    %rdi,0x40(%rsp)
  0x000000010210cb08: mov    %r8,0x38(%rsp)
  0x000000010210cb0d: mov    %r9,0x30(%rsp)
  0x000000010210cb12: mov    %r10,0x28(%rsp)
  0x000000010210cb17: mov    %r11,0x20(%rsp)
  0x000000010210cb1c: mov    %r12,0x18(%rsp)
  0x000000010210cb21: mov    %r13,0x10(%rsp)
  0x000000010210cb26: mov    %r14,0x8(%rsp)
  0x000000010210cb2b: mov    %r15,(%rsp)
  0x000000010210cb2f: movabs $0x100d1ee90,%rdi  ;   {external_word}
  0x000000010210cb39: movabs $0x10210cad9,%rsi  ;   {internal_word}
  0x000000010210cb43: mov    %rsp,%rdx
  0x000000010210cb46: and    $0xfffffffffffffff0,%rsp
  0x000000010210cb4a: callq  0x0000000100b4a196  ;   {runtime_call}
  0x000000010210cb4f: hlt
[Deopt Handler Code]
  0x000000010210cb50: movabs $0x10210cb50,%r10  ;   {section_word}
  0x000000010210cb5a: push   %r10
  0x000000010210cb5c: jmpq   0x00000001020473c0  ;   {runtime_call}
  0x000000010210cb61: hlt
  0x000000010210cb62: hlt
  0x000000010210cb63: hlt
  0x000000010210cb64: hlt
  0x000000010210cb65: hlt
  0x000000010210cb66: hlt
  0x000000010210cb67: hlt
Decoding compiled method 0x0000000102110cd0:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000115e71468} 'lastIndexOf' '(II)I' in 'java/lang/String'
  # this:     rsi:rsi   = 'java/lang/String'
  # parm0:    rdx       = int
  # parm1:    rcx       = int
  #           [sp+0x60]  (sp of caller)
  0x0000000102110e60: mov    0x8(%rsi),%r10d
  0x0000000102110e64: shl    $0x3,%r10
  0x0000000102110e68: cmp    %rax,%r10
  0x0000000102110e6b: jne    0x0000000102045e20  ;   {runtime_call}
  0x0000000102110e71: data32 data32 nopw 0x0(%rax,%rax,1)
  0x0000000102110e7c: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x0000000102110e80: mov    %eax,-0x14000(%rsp)
  0x0000000102110e87: push   %rbp
  0x0000000102110e88: sub    $0x50,%rsp
  0x0000000102110e8c: movabs $0x1160a63d0,%rax  ;   {metadata(method data for {method} {0x0000000115e71468} 'lastIndexOf' '(II)I' in 'java/lang/String')}
  0x0000000102110e96: mov    0xdc(%rax),%edi
  0x0000000102110e9c: add    $0x8,%edi
  0x0000000102110e9f: mov    %edi,0xdc(%rax)
  0x0000000102110ea5: movabs $0x115e71468,%rax  ;   {metadata({method} {0x0000000115e71468} 'lastIndexOf' '(II)I' in 'java/lang/String')}
  0x0000000102110eaf: and    $0x1ff8,%edi
  0x0000000102110eb5: cmp    $0x0,%edi
  0x0000000102110eb8: je     0x00000001021110e0  ;*iload_1
                                                ; - java.lang.String::lastIndexOf@0 (line 1649)

  0x0000000102110ebe: cmp    $0x10000,%edx
  0x0000000102110ec4: movabs $0x1160a63d0,%rax  ;   {metadata(method data for {method} {0x0000000115e71468} 'lastIndexOf' '(II)I' in 'java/lang/String')}
  0x0000000102110ece: movabs $0x108,%rdi
  0x0000000102110ed8: jge    0x0000000102110ee8
  0x0000000102110ede: movabs $0x118,%rdi
  0x0000000102110ee8: mov    (%rax,%rdi,1),%rbx
  0x0000000102110eec: lea    0x1(%rbx),%rbx
  0x0000000102110ef0: mov    %rbx,(%rax,%rdi,1)
  0x0000000102110ef4: jge    0x0000000102111096  ;*if_icmpge
                                                ; - java.lang.String::lastIndexOf@3 (line 1649)

  0x0000000102110efa: mov    0xc(%rsi),%eax
  0x0000000102110efd: shl    $0x3,%rax          ;*getfield value
                                                ; - java.lang.String::lastIndexOf@7 (line 1652)

  0x0000000102110f01: mov    0xc(%rax),%edi     ;*arraylength
                                                ; - java.lang.String::lastIndexOf@13 (line 1653)
                                                ; implicit exception: dispatches to 0x00000001021110f7
  0x0000000102110f04: dec    %edi
  0x0000000102110f06: movabs $0x1160a63d0,%rbx  ;   {metadata(method data for {method} {0x0000000115e71468} 'lastIndexOf' '(II)I' in 'java/lang/String')}
  0x0000000102110f10: addq   $0x1,0x128(%rbx)
  0x0000000102110f18: movabs $0x11603afa0,%rbx  ;   {metadata(method data for {method} {0x0000000115f64fd8} 'min' '(II)I' in 'java/lang/Math')}
  0x0000000102110f22: mov    0xdc(%rbx),%r8d
  0x0000000102110f29: add    $0x8,%r8d
  0x0000000102110f2d: mov    %r8d,0xdc(%rbx)
  0x0000000102110f34: movabs $0x115f64fd8,%rbx  ;   {metadata({method} {0x0000000115f64fd8} 'min' '(II)I' in 'java/lang/Math')}
  0x0000000102110f3e: and    $0x7ffff8,%r8d
  0x0000000102110f45: cmp    $0x0,%r8d
  0x0000000102110f49: je     0x00000001021110fc
  0x0000000102110f4f: cmp    %edi,%ecx
  0x0000000102110f51: movabs $0x11603afa0,%rbx  ;   {metadata(method data for {method} {0x0000000115f64fd8} 'min' '(II)I' in 'java/lang/Math')}
  0x0000000102110f5b: movabs $0x108,%r8
  0x0000000102110f65: jg     0x0000000102110f75
  0x0000000102110f6b: movabs $0x118,%r8
  0x0000000102110f75: mov    (%rbx,%r8,1),%r9
  0x0000000102110f79: lea    0x1(%r9),%r9
  0x0000000102110f7d: mov    %r9,(%rbx,%r8,1)
  0x0000000102110f81: jg     0x0000000102111038  ;*if_icmpgt
                                                ; - java.lang.Math::min@2 (line 1336)
                                                ; - java.lang.String::lastIndexOf@16 (line 1653)

  0x0000000102110f87: movabs $0x11603afa0,%rdi  ;   {metadata(method data for {method} {0x0000000115f64fd8} 'min' '(II)I' in 'java/lang/Math')}
  0x0000000102110f91: incl   0x128(%rdi)
  0x0000000102110f97: mov    %rcx,%rdi
  0x0000000102110f9a: jmpq   0x0000000102111038  ;*goto
                                                ; - java.lang.Math::min@6 (line 1336)
                                                ; - java.lang.String::lastIndexOf@16 (line 1653)

  0x0000000102110f9f: nop
  0x0000000102110fa0: movslq %edi,%rbx
  0x0000000102110fa3: cmp    0xc(%rax),%edi
  0x0000000102110fa6: jae    0x0000000102111113
  0x0000000102110fac: movzwl 0x10(%rax,%rbx,2),%ebx  ;*caload
                                                ; - java.lang.String::lastIndexOf@29 (line 1655)

  0x0000000102110fb1: cmp    %edx,%ebx
  0x0000000102110fb3: movabs $0x1160a63d0,%rbx  ;   {metadata(method data for {method} {0x0000000115e71468} 'lastIndexOf' '(II)I' in 'java/lang/String')}
  0x0000000102110fbd: movabs $0x158,%r8
  0x0000000102110fc7: jne    0x0000000102110fd7
  0x0000000102110fcd: movabs $0x168,%r8
  0x0000000102110fd7: mov    (%rbx,%r8,1),%r9
  0x0000000102110fdb: lea    0x1(%r9),%r9
  0x0000000102110fdf: mov    %r9,(%rbx,%r8,1)
  0x0000000102110fe3: je     0x0000000102111076  ;*if_icmpne
                                                ; - java.lang.String::lastIndexOf@31 (line 1655)

  0x0000000102110fe9: dec    %edi
  0x0000000102110feb: movabs $0x1160a63d0,%rbx  ;   {metadata(method data for {method} {0x0000000115e71468} 'lastIndexOf' '(II)I' in 'java/lang/String')}
  0x0000000102110ff5: mov    0xe0(%rbx),%r8d
  0x0000000102110ffc: add    $0x8,%r8d
  0x0000000102111000: mov    %r8d,0xe0(%rbx)
  0x0000000102111007: movabs $0x115e71468,%rbx  ;   {metadata({method} {0x0000000115e71468} 'lastIndexOf' '(II)I' in 'java/lang/String')}
  0x0000000102111011: and    $0xfff8,%r8d
  0x0000000102111018: cmp    $0x0,%r8d
  0x000000010211101c: je     0x000000010211111c  ; OopMap{rsi=Oop rax=Oop off=450}
                                                ;*goto
                                                ; - java.lang.String::lastIndexOf@40 (line 1654)

  0x0000000102111022: test   %eax,-0x9e4f28(%rip)        # 0x000000010172c100
                                                ;   {poll}
  0x0000000102111028: movabs $0x1160a63d0,%rbx  ;   {metadata(method data for {method} {0x0000000115e71468} 'lastIndexOf' '(II)I' in 'java/lang/String')}
  0x0000000102111032: incl   0x178(%rbx)        ;*goto
                                                ; - java.lang.String::lastIndexOf@40 (line 1654)

  0x0000000102111038: cmp    $0x0,%edi
  0x000000010211103b: movabs $0x1160a63d0,%rbx  ;   {metadata(method data for {method} {0x0000000115e71468} 'lastIndexOf' '(II)I' in 'java/lang/String')}
  0x0000000102111045: movabs $0x138,%r8
  0x000000010211104f: jl     0x000000010211105f
  0x0000000102111055: movabs $0x148,%r8
  0x000000010211105f: mov    (%rbx,%r8,1),%r9
  0x0000000102111063: lea    0x1(%r9),%r9
  0x0000000102111067: mov    %r9,(%rbx,%r8,1)
  0x000000010211106b: jl     0x0000000102111085
  0x0000000102111071: jmpq   0x0000000102110fa0  ;*iflt
                                                ; - java.lang.String::lastIndexOf@23 (line 1654)

  0x0000000102111076: mov    %rdi,%rax
  0x0000000102111079: add    $0x50,%rsp
  0x000000010211107d: pop    %rbp
  0x000000010211107e: test   %eax,-0x9e4f84(%rip)        # 0x000000010172c100
                                                ;   {poll_return}
  0x0000000102111084: retq                      ;*ireturn
                                                ; - java.lang.String::lastIndexOf@36 (line 1656)

  0x0000000102111085: mov    $0xffffffff,%eax
  0x000000010211108a: add    $0x50,%rsp
  0x000000010211108e: pop    %rbp
  0x000000010211108f: test   %eax,-0x9e4f95(%rip)        # 0x000000010172c100
                                                ;   {poll_return}
  0x0000000102111095: retq                      ;*ireturn
                                                ; - java.lang.String::lastIndexOf@44 (line 1659)

  0x0000000102111096: mov    %rsi,%rdi
  0x0000000102111099: movabs $0x1160a63d0,%rbx  ;   {metadata(method data for {method} {0x0000000115e71468} 'lastIndexOf' '(II)I' in 'java/lang/String')}
  0x00000001021110a3: addq   $0x1,0x190(%rbx)
  0x00000001021110ab: mov    %rdx,%rdi
  0x00000001021110ae: mov    %rdi,%rdx
  0x00000001021110b1: mov    %rcx,%rbx
  0x00000001021110b4: mov    %rbx,%rcx
  0x00000001021110b7: mov    %rsi,%rax
  0x00000001021110ba: mov    %rax,%rsi          ;*invokespecial lastIndexOfSupplementary
                                                ; - java.lang.String::lastIndexOf@48 (line 1661)

  0x00000001021110bd: mov    %edi,0x44(%rsp)
  0x00000001021110c1: mov    %ebx,0x40(%rsp)
  0x00000001021110c5: mov    %rax,0x38(%rsp)
  0x00000001021110ca: nop
  0x00000001021110cb: nop
  0x00000001021110cc: nop
  0x00000001021110cd: nop
  0x00000001021110ce: nop
  0x00000001021110cf: callq  0x0000000102046020  ; OopMap{[56]=Oop off=628}
                                                ;*invokespecial lastIndexOfSupplementary
                                                ; - java.lang.String::lastIndexOf@48 (line 1661)
                                                ;   {optimized virtual_call}
  0x00000001021110d4: add    $0x50,%rsp
  0x00000001021110d8: pop    %rbp
  0x00000001021110d9: test   %eax,-0x9e4fdf(%rip)        # 0x000000010172c100
                                                ;   {poll_return}
  0x00000001021110df: retq
  0x00000001021110e0: mov    %rax,0x8(%rsp)
  0x00000001021110e5: movq   $0xffffffffffffffff,(%rsp)
  0x00000001021110ed: callq  0x00000001020fe020  ; OopMap{rsi=Oop off=658}
                                                ;*synchronization entry
                                                ; - java.lang.String::lastIndexOf@-1 (line 1649)
                                                ;   {runtime_call}
  0x00000001021110f2: jmpq   0x0000000102110ebe
  0x00000001021110f7: callq  0x000000010206db40  ; OopMap{rsi=Oop rax=Oop off=668}
                                                ;*arraylength
                                                ; - java.lang.String::lastIndexOf@13 (line 1653)
                                                ;   {runtime_call}
  0x00000001021110fc: mov    %rbx,0x8(%rsp)
  0x0000000102111101: movq   $0xffffffffffffffff,(%rsp)
  0x0000000102111109: callq  0x00000001020fe020  ; OopMap{rsi=Oop rax=Oop off=686}
                                                ;*synchronization entry
                                                ; - java.lang.Math::min@-1 (line 1336)
                                                ; - java.lang.String::lastIndexOf@16 (line 1653)
                                                ;   {runtime_call}
  0x000000010211110e: jmpq   0x0000000102110f4f
  0x0000000102111113: mov    %rdi,(%rsp)
  0x0000000102111117: callq  0x000000010206e200  ; OopMap{rsi=Oop rax=Oop off=700}
                                                ;*caload
                                                ; - java.lang.String::lastIndexOf@29 (line 1655)
                                                ;   {runtime_call}
  0x000000010211111c: mov    %rbx,0x8(%rsp)
  0x0000000102111121: movq   $0x28,(%rsp)
  0x0000000102111129: callq  0x00000001020fe020  ; OopMap{rsi=Oop rax=Oop off=718}
                                                ;*goto
                                                ; - java.lang.String::lastIndexOf@40 (line 1654)
                                                ;   {runtime_call}
  0x000000010211112e: jmpq   0x0000000102111022
  0x0000000102111133: nop
  0x0000000102111134: nop
  0x0000000102111135: mov    0x2a8(%r15),%rax
  0x000000010211113c: movabs $0x0,%r10
  0x0000000102111146: mov    %r10,0x2a8(%r15)
  0x000000010211114d: movabs $0x0,%r10
  0x0000000102111157: mov    %r10,0x2b0(%r15)
  0x000000010211115e: add    $0x50,%rsp
  0x0000000102111162: pop    %rbp
  0x0000000102111163: jmpq   0x000000010206e6a0  ;   {runtime_call}
  0x0000000102111168: hlt
  0x0000000102111169: hlt
  0x000000010211116a: hlt
  0x000000010211116b: hlt
  0x000000010211116c: hlt
  0x000000010211116d: hlt
  0x000000010211116e: hlt
  0x000000010211116f: hlt
  0x0000000102111170: hlt
  0x0000000102111171: hlt
  0x0000000102111172: hlt
  0x0000000102111173: hlt
  0x0000000102111174: hlt
  0x0000000102111175: hlt
  0x0000000102111176: hlt
  0x0000000102111177: hlt
  0x0000000102111178: hlt
  0x0000000102111179: hlt
  0x000000010211117a: hlt
  0x000000010211117b: hlt
  0x000000010211117c: hlt
  0x000000010211117d: hlt
  0x000000010211117e: hlt
  0x000000010211117f: hlt
[Stub Code]
  0x0000000102111180: nop                       ;   {no_reloc}
  0x0000000102111181: nop
  0x0000000102111182: nop
  0x0000000102111183: nop
  0x0000000102111184: nop
  0x0000000102111185: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010211118f: jmpq   0x000000010211118f  ;   {runtime_call}
[Exception Handler]
  0x0000000102111194: callq  0x00000001020fb9a0  ;   {runtime_call}
  0x0000000102111199: mov    %rsp,-0x28(%rsp)
  0x000000010211119e: sub    $0x80,%rsp
  0x00000001021111a5: mov    %rax,0x78(%rsp)
  0x00000001021111aa: mov    %rcx,0x70(%rsp)
  0x00000001021111af: mov    %rdx,0x68(%rsp)
  0x00000001021111b4: mov    %rbx,0x60(%rsp)
  0x00000001021111b9: mov    %rbp,0x50(%rsp)
  0x00000001021111be: mov    %rsi,0x48(%rsp)
  0x00000001021111c3: mov    %rdi,0x40(%rsp)
  0x00000001021111c8: mov    %r8,0x38(%rsp)
  0x00000001021111cd: mov    %r9,0x30(%rsp)
  0x00000001021111d2: mov    %r10,0x28(%rsp)
  0x00000001021111d7: mov    %r11,0x20(%rsp)
  0x00000001021111dc: mov    %r12,0x18(%rsp)
  0x00000001021111e1: mov    %r13,0x10(%rsp)
  0x00000001021111e6: mov    %r14,0x8(%rsp)
  0x00000001021111eb: mov    %r15,(%rsp)
  0x00000001021111ef: movabs $0x100d1ee90,%rdi  ;   {external_word}
  0x00000001021111f9: movabs $0x102111199,%rsi  ;   {internal_word}
  0x0000000102111203: mov    %rsp,%rdx
  0x0000000102111206: and    $0xfffffffffffffff0,%rsp
  0x000000010211120a: callq  0x0000000100b4a196  ;   {runtime_call}
  0x000000010211120f: hlt
[Deopt Handler Code]
  0x0000000102111210: movabs $0x102111210,%r10  ;   {section_word}
  0x000000010211121a: push   %r10
  0x000000010211121c: jmpq   0x00000001020473c0  ;   {runtime_call}
  0x0000000102111221: hlt
  0x0000000102111222: hlt
  0x0000000102111223: hlt
  0x0000000102111224: hlt
  0x0000000102111225: hlt
  0x0000000102111226: hlt
  0x0000000102111227: hlt
Decoding compiled method 0x0000000102111490:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000116036470} 'getProperties' '(I)I' in 'java/lang/CharacterDataLatin1'
  # this:     rsi:rsi   = 'java/lang/CharacterDataLatin1'
  # parm0:    rdx       = int
  #           [sp+0x40]  (sp of caller)
  0x0000000102111600: mov    0x8(%rsi),%r10d
  0x0000000102111604: shl    $0x3,%r10
  0x0000000102111608: cmp    %rax,%r10
  0x000000010211160b: jne    0x0000000102045e20  ;   {runtime_call}
  0x0000000102111611: data32 data32 nopw 0x0(%rax,%rax,1)
  0x000000010211161c: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x0000000102111620: mov    %eax,-0x14000(%rsp)
  0x0000000102111627: push   %rbp
  0x0000000102111628: sub    $0x30,%rsp
  0x000000010211162c: movabs $0x1160a67f0,%rax  ;   {metadata(method data for {method} {0x0000000116036470} 'getProperties' '(I)I' in 'java/lang/CharacterDataLatin1')}
  0x0000000102111636: mov    0xdc(%rax),%edi
  0x000000010211163c: add    $0x8,%edi
  0x000000010211163f: mov    %edi,0xdc(%rax)
  0x0000000102111645: movabs $0x116036470,%rax  ;   {metadata({method} {0x0000000116036470} 'getProperties' '(I)I' in 'java/lang/CharacterDataLatin1')}
  0x000000010211164f: and    $0x1ff8,%edi
  0x0000000102111655: cmp    $0x0,%edi
  0x0000000102111658: je     0x000000010211168d  ;*iload_1
                                                ; - java.lang.CharacterDataLatin1::getProperties@0 (line 71)

  0x000000010211165e: mov    %rdx,%rax
  0x0000000102111661: and    $0xffff,%eax
  0x0000000102111667: movabs $0x7955c8ec0,%rdi  ;   {oop([I)}
  0x0000000102111671: movslq %eax,%rbx
  0x0000000102111674: cmp    0xc(%rdi),%eax     ; implicit exception: dispatches to 0x00000001021116a1
  0x0000000102111677: jae    0x00000001021116ab
  0x000000010211167d: mov    0x10(%rdi,%rbx,4),%eax  ;*iaload
                                                ; - java.lang.CharacterDataLatin1::getProperties@7 (line 72)

  0x0000000102111681: add    $0x30,%rsp
  0x0000000102111685: pop    %rbp
  0x0000000102111686: test   %eax,-0x9e558c(%rip)        # 0x000000010172c100
                                                ;   {poll_return}
  0x000000010211168c: retq
  0x000000010211168d: mov    %rax,0x8(%rsp)
  0x0000000102111692: movq   $0xffffffffffffffff,(%rsp)
  0x000000010211169a: callq  0x00000001020fe020  ; OopMap{rsi=Oop off=159}
                                                ;*synchronization entry
                                                ; - java.lang.CharacterDataLatin1::getProperties@-1 (line 71)
                                                ;   {runtime_call}
  0x000000010211169f: jmp    0x000000010211165e
  0x00000001021116a1: callq  0x000000010206db40  ; OopMap{rsi=Oop rdi=Oop off=166}
                                                ;*iaload
                                                ; - java.lang.CharacterDataLatin1::getProperties@7 (line 72)
                                                ;   {runtime_call}
  0x00000001021116a6: callq  0x000000010206db40  ; OopMap{rsi=Oop rdi=Oop off=171}
                                                ;*iaload
                                                ; - java.lang.CharacterDataLatin1::getProperties@7 (line 72)
                                                ;   {runtime_call}
  0x00000001021116ab: mov    %rax,(%rsp)
  0x00000001021116af: callq  0x000000010206e200  ; OopMap{rsi=Oop rdi=Oop off=180}
                                                ;*iaload
                                                ; - java.lang.CharacterDataLatin1::getProperties@7 (line 72)
                                                ;   {runtime_call}
  0x00000001021116b4: nop
  0x00000001021116b5: nop
  0x00000001021116b6: mov    0x2a8(%r15),%rax
  0x00000001021116bd: movabs $0x0,%r10
  0x00000001021116c7: mov    %r10,0x2a8(%r15)
  0x00000001021116ce: movabs $0x0,%r10
  0x00000001021116d8: mov    %r10,0x2b0(%r15)
  0x00000001021116df: add    $0x30,%rsp
  0x00000001021116e3: pop    %rbp
  0x00000001021116e4: jmpq   0x000000010206e6a0  ;   {runtime_call}
  0x00000001021116e9: hlt
  0x00000001021116ea: hlt
  0x00000001021116eb: hlt
  0x00000001021116ec: hlt
  0x00000001021116ed: hlt
  0x00000001021116ee: hlt
  0x00000001021116ef: hlt
  0x00000001021116f0: hlt
  0x00000001021116f1: hlt
  0x00000001021116f2: hlt
  0x00000001021116f3: hlt
  0x00000001021116f4: hlt
  0x00000001021116f5: hlt
  0x00000001021116f6: hlt
  0x00000001021116f7: hlt
  0x00000001021116f8: hlt
  0x00000001021116f9: hlt
  0x00000001021116fa: hlt
  0x00000001021116fb: hlt
  0x00000001021116fc: hlt
  0x00000001021116fd: hlt
  0x00000001021116fe: hlt
  0x00000001021116ff: hlt
[Exception Handler]
[Stub Code]
  0x0000000102111700: callq  0x00000001020fb9a0  ;   {no_reloc}
  0x0000000102111705: mov    %rsp,-0x28(%rsp)
  0x000000010211170a: sub    $0x80,%rsp
  0x0000000102111711: mov    %rax,0x78(%rsp)
  0x0000000102111716: mov    %rcx,0x70(%rsp)
  0x000000010211171b: mov    %rdx,0x68(%rsp)
  0x0000000102111720: mov    %rbx,0x60(%rsp)
  0x0000000102111725: mov    %rbp,0x50(%rsp)
  0x000000010211172a: mov    %rsi,0x48(%rsp)
  0x000000010211172f: mov    %rdi,0x40(%rsp)
  0x0000000102111734: mov    %r8,0x38(%rsp)
  0x0000000102111739: mov    %r9,0x30(%rsp)
  0x000000010211173e: mov    %r10,0x28(%rsp)
  0x0000000102111743: mov    %r11,0x20(%rsp)
  0x0000000102111748: mov    %r12,0x18(%rsp)
  0x000000010211174d: mov    %r13,0x10(%rsp)
  0x0000000102111752: mov    %r14,0x8(%rsp)
  0x0000000102111757: mov    %r15,(%rsp)
  0x000000010211175b: movabs $0x100d1ee90,%rdi  ;   {external_word}
  0x0000000102111765: movabs $0x102111705,%rsi  ;   {internal_word}
  0x000000010211176f: mov    %rsp,%rdx
  0x0000000102111772: and    $0xfffffffffffffff0,%rsp
  0x0000000102111776: callq  0x0000000100b4a196  ;   {runtime_call}
  0x000000010211177b: hlt
[Deopt Handler Code]
  0x000000010211177c: movabs $0x10211177c,%r10  ;   {section_word}
  0x0000000102111786: push   %r10
  0x0000000102111788: jmpq   0x00000001020473c0  ;   {runtime_call}
  0x000000010211178d: hlt
  0x000000010211178e: hlt
  0x000000010211178f: hlt
Decoding compiled method 0x0000000102111890:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000115fbf470} 'encode' '([CII[B)I' in 'sun/nio/cs/UTF_8$Encoder'
  # this:     rsi:rsi   = 'sun/nio/cs/UTF_8$Encoder'
  # parm0:    rdx:rdx   = '[C'
  # parm1:    rcx       = int
  # parm2:    r8        = int
  # parm3:    r9:r9     = '[B'
  #           [sp+0xa0]  (sp of caller)
  0x0000000102111a80: mov    0x8(%rsi),%r10d
  0x0000000102111a84: shl    $0x3,%r10
  0x0000000102111a88: cmp    %rax,%r10
  0x0000000102111a8b: jne    0x0000000102045e20  ;   {runtime_call}
  0x0000000102111a91: data32 data32 nopw 0x0(%rax,%rax,1)
  0x0000000102111a9c: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x0000000102111aa0: mov    %eax,-0x14000(%rsp)
  0x0000000102111aa7: push   %rbp
  0x0000000102111aa8: sub    $0x90,%rsp
  0x0000000102111aaf: mov    %rsi,0x48(%rsp)
  0x0000000102111ab4: mov    %rdx,0x68(%rsp)
  0x0000000102111ab9: mov    %r8d,0x74(%rsp)
  0x0000000102111abe: mov    %r9,0x78(%rsp)
  0x0000000102111ac3: movabs $0x1160a6918,%rax  ;   {metadata(method data for {method} {0x0000000115fbf470} 'encode' '([CII[B)I' in 'sun/nio/cs/UTF_8$Encoder')}
  0x0000000102111acd: mov    0xdc(%rax),%edi
  0x0000000102111ad3: add    $0x8,%edi
  0x0000000102111ad6: mov    %edi,0xdc(%rax)
  0x0000000102111adc: movabs $0x115fbf470,%rax  ;   {metadata({method} {0x0000000115fbf470} 'encode' '([CII[B)I' in 'sun/nio/cs/UTF_8$Encoder')}
  0x0000000102111ae6: and    $0x1ff8,%edi
  0x0000000102111aec: cmp    $0x0,%edi
  0x0000000102111aef: je     0x00000001021123cb  ;*iload_2
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@0 (line 704)

  0x0000000102111af5: mov    %rcx,%rdi
  0x0000000102111af8: add    %r8d,%edi
  0x0000000102111afb: mov    %edi,0x50(%rsp)
  0x0000000102111aff: mov    0xc(%r9),%eax      ;*arraylength
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@13 (line 706)
                                                ; implicit exception: dispatches to 0x00000001021123e2
  0x0000000102111b03: movabs $0x1160a6918,%rbx  ;   {metadata(method data for {method} {0x0000000115fbf470} 'encode' '([CII[B)I' in 'sun/nio/cs/UTF_8$Encoder')}
  0x0000000102111b0d: addq   $0x1,0x108(%rbx)
  0x0000000102111b15: movabs $0x11603afa0,%rbx  ;   {metadata(method data for {method} {0x0000000115f64fd8} 'min' '(II)I' in 'java/lang/Math')}
  0x0000000102111b1f: mov    0xdc(%rbx),%r11d
  0x0000000102111b26: add    $0x8,%r11d
  0x0000000102111b2a: mov    %r11d,0xdc(%rbx)
  0x0000000102111b31: movabs $0x115f64fd8,%rbx  ;   {metadata({method} {0x0000000115f64fd8} 'min' '(II)I' in 'java/lang/Math')}
  0x0000000102111b3b: and    $0x7ffff8,%r11d
  0x0000000102111b42: cmp    $0x0,%r11d
  0x0000000102111b46: je     0x00000001021123e7
  0x0000000102111b4c: cmp    %eax,%r8d
  0x0000000102111b4f: movabs $0x11603afa0,%rbx  ;   {metadata(method data for {method} {0x0000000115f64fd8} 'min' '(II)I' in 'java/lang/Math')}
  0x0000000102111b59: movabs $0x108,%r11
  0x0000000102111b63: jg     0x0000000102111b73
  0x0000000102111b69: movabs $0x118,%r11
  0x0000000102111b73: mov    (%rbx,%r11,1),%r13
  0x0000000102111b77: lea    0x1(%r13),%r13
  0x0000000102111b7b: mov    %r13,(%rbx,%r11,1)
  0x0000000102111b7f: jg     0x0000000102111b9d  ;*if_icmpgt
                                                ; - java.lang.Math::min@2 (line 1336)
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@14 (line 706)

  0x0000000102111b85: movabs $0x11603afa0,%rax  ;   {metadata(method data for {method} {0x0000000115f64fd8} 'min' '(II)I' in 'java/lang/Math')}
  0x0000000102111b8f: incl   0x128(%rax)
  0x0000000102111b95: mov    %r8,%rbx
  0x0000000102111b98: jmpq   0x0000000102111ba0  ;*goto
                                                ; - java.lang.Math::min@6 (line 1336)
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@14 (line 706)

  0x0000000102111b9d: mov    %rax,%rbx          ;*ireturn
                                                ; - java.lang.Math::min@10 (line 1336)
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@14 (line 706)

  0x0000000102111ba0: mov    $0x0,%eax
  0x0000000102111ba5: jmpq   0x0000000102111c6a  ;*iload
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@20 (line 709)

  0x0000000102111baa: nopw   0x0(%rax,%rax,1)
  0x0000000102111bb0: movslq %ecx,%r11
  0x0000000102111bb3: cmp    0xc(%rdx),%ecx     ; implicit exception: dispatches to 0x00000001021123fe
  0x0000000102111bb6: jae    0x0000000102112408
  0x0000000102111bbc: movzwl 0x10(%rdx,%r11,2),%r11d  ;*caload
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@29 (line 709)

  0x0000000102111bc2: cmp    $0x80,%r11d
  0x0000000102111bc9: movabs $0x1160a6918,%r13  ;   {metadata(method data for {method} {0x0000000115fbf470} 'encode' '([CII[B)I' in 'sun/nio/cs/UTF_8$Encoder')}
  0x0000000102111bd3: movabs $0x138,%r14
  0x0000000102111bdd: jge    0x0000000102111bed
  0x0000000102111be3: movabs $0x148,%r14
  0x0000000102111bed: mov    0x0(%r13,%r14,1),%rsi
  0x0000000102111bf2: lea    0x1(%rsi),%rsi
  0x0000000102111bf6: mov    %rsi,0x0(%r13,%r14,1)
  0x0000000102111bfb: jge    0x0000000102111ca7  ;*if_icmpge
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@33 (line 709)

  0x0000000102111c01: mov    %rax,%rsi
  0x0000000102111c04: inc    %esi
  0x0000000102111c06: inc    %ecx
  0x0000000102111c08: movslq %eax,%r13
  0x0000000102111c0b: cmp    0xc(%r9),%eax
  0x0000000102111c0f: jae    0x0000000102112411
  0x0000000102111c15: mov    %r11b,0x10(%r9,%r13,1)  ;*bastore
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@50 (line 710)

  0x0000000102111c1a: movabs $0x1160a6918,%rax  ;   {metadata(method data for {method} {0x0000000115fbf470} 'encode' '([CII[B)I' in 'sun/nio/cs/UTF_8$Encoder')}
  0x0000000102111c24: mov    0xe0(%rax),%r11d
  0x0000000102111c2b: add    $0x8,%r11d
  0x0000000102111c2f: mov    %r11d,0xe0(%rax)
  0x0000000102111c36: movabs $0x115fbf470,%rax  ;   {metadata({method} {0x0000000115fbf470} 'encode' '([CII[B)I' in 'sun/nio/cs/UTF_8$Encoder')}
  0x0000000102111c40: and    $0xfff8,%r11d
  0x0000000102111c47: cmp    $0x0,%r11d
  0x0000000102111c4b: je     0x000000010211241a  ; OopMap{rdx=Oop [104]=Oop r9=Oop [120]=Oop [72]=Oop off=465}
                                                ;*goto
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@51 (line 710)

  0x0000000102111c51: test   %eax,-0x9e5b57(%rip)        # 0x000000010172c100
                                                ;   {poll}
  0x0000000102111c57: movabs $0x1160a6918,%rax  ;   {metadata(method data for {method} {0x0000000115fbf470} 'encode' '([CII[B)I' in 'sun/nio/cs/UTF_8$Encoder')}
  0x0000000102111c61: incl   0x158(%rax)
  0x0000000102111c67: mov    %rsi,%rax          ;*goto
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@51 (line 710)

  0x0000000102111c6a: cmp    %ebx,%eax
  0x0000000102111c6c: movabs $0x1160a6918,%r11  ;   {metadata(method data for {method} {0x0000000115fbf470} 'encode' '([CII[B)I' in 'sun/nio/cs/UTF_8$Encoder')}
  0x0000000102111c76: movabs $0x118,%r13
  0x0000000102111c80: jge    0x0000000102111c90
  0x0000000102111c86: movabs $0x128,%r13
  0x0000000102111c90: mov    (%r11,%r13,1),%r14
  0x0000000102111c94: lea    0x1(%r14),%r14
  0x0000000102111c98: mov    %r14,(%r11,%r13,1)
  0x0000000102111c9c: jge    0x0000000102111cb5
  0x0000000102111ca2: jmpq   0x0000000102111bb0  ;*if_icmpge
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@24 (line 709)

  0x0000000102111ca7: mov    %ebx,0x54(%rsp)
  0x0000000102111cab: mov    0x48(%rsp),%rsi
  0x0000000102111cb0: jmpq   0x0000000102111cc0  ;*iload_2
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@54 (line 712)

  0x0000000102111cb5: mov    %ebx,0x54(%rsp)
  0x0000000102111cb9: mov    0x48(%rsp),%rsi
  0x0000000102111cbe: xchg   %ax,%ax
  0x0000000102111cc0: cmp    %edi,%ecx
  0x0000000102111cc2: movabs $0x1160a6918,%r11  ;   {metadata(method data for {method} {0x0000000115fbf470} 'encode' '([CII[B)I' in 'sun/nio/cs/UTF_8$Encoder')}
  0x0000000102111ccc: movabs $0x170,%r13
  0x0000000102111cd6: jge    0x0000000102111ce6
  0x0000000102111cdc: movabs $0x180,%r13
  0x0000000102111ce6: mov    (%r11,%r13,1),%r14
  0x0000000102111cea: lea    0x1(%r14),%r14
  0x0000000102111cee: mov    %r14,(%r11,%r13,1)
  0x0000000102111cf2: jge    0x00000001021123b6  ;*if_icmpge
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@57 (line 712)

  0x0000000102111cf8: mov    %rcx,%r11
  0x0000000102111cfb: inc    %r11d
  0x0000000102111cfe: movslq %ecx,%r13
  0x0000000102111d01: cmp    0xc(%rdx),%ecx     ; implicit exception: dispatches to 0x0000000102112431
  0x0000000102111d04: jae    0x000000010211243b
  0x0000000102111d0a: movzwl 0x10(%rdx,%r13,2),%ecx  ;*caload
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@65 (line 713)

  0x0000000102111d10: cmp    $0x80,%ecx
  0x0000000102111d16: movabs $0x1160a6918,%r13  ;   {metadata(method data for {method} {0x0000000115fbf470} 'encode' '([CII[B)I' in 'sun/nio/cs/UTF_8$Encoder')}
  0x0000000102111d20: movabs $0x190,%r14
  0x0000000102111d2a: jge    0x0000000102111d3a
  0x0000000102111d30: movabs $0x1a0,%r14
  0x0000000102111d3a: mov    0x0(%r13,%r14,1),%rdi
  0x0000000102111d3f: lea    0x1(%rdi),%rdi
  0x0000000102111d43: mov    %rdi,0x0(%r13,%r14,1)
  0x0000000102111d48: jge    0x0000000102111d7d  ;*if_icmpge
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@73 (line 714)

  0x0000000102111d4e: mov    %rax,%rdi
  0x0000000102111d51: inc    %edi
  0x0000000102111d53: mov    %rcx,%r13
  0x0000000102111d56: movslq %eax,%r14
  0x0000000102111d59: cmp    0xc(%r9),%eax
  0x0000000102111d5d: jae    0x0000000102112444
  0x0000000102111d63: mov    %r13b,0x10(%r9,%r14,1)  ;*bastore
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@86 (line 716)

  0x0000000102111d68: movabs $0x1160a6918,%rax  ;   {metadata(method data for {method} {0x0000000115fbf470} 'encode' '([CII[B)I' in 'sun/nio/cs/UTF_8$Encoder')}
  0x0000000102111d72: incl   0x1b0(%rax)
  0x0000000102111d78: jmpq   0x0000000102112346  ;*goto
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@87 (line 716)

  0x0000000102111d7d: cmp    $0x800,%ecx
  0x0000000102111d83: movabs $0x1160a6918,%rdi  ;   {metadata(method data for {method} {0x0000000115fbf470} 'encode' '([CII[B)I' in 'sun/nio/cs/UTF_8$Encoder')}
  0x0000000102111d8d: movabs $0x1c8,%r13
  0x0000000102111d97: jge    0x0000000102111da7
  0x0000000102111d9d: movabs $0x1d8,%r13
  0x0000000102111da7: mov    (%rdi,%r13,1),%r14
  0x0000000102111dab: lea    0x1(%r14),%r14
  0x0000000102111daf: mov    %r14,(%rdi,%r13,1)
  0x0000000102111db3: jge    0x0000000102111e18  ;*if_icmpge
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@95 (line 717)

  0x0000000102111db9: mov    %rcx,%rdi
  0x0000000102111dbc: sar    $0x6,%edi
  0x0000000102111dbf: or     $0xc0,%edi
  0x0000000102111dc5: mov    %rax,%r13
  0x0000000102111dc8: inc    %r13d
  0x0000000102111dcb: movslq %eax,%r14
  0x0000000102111dce: cmp    0xc(%r9),%eax
  0x0000000102111dd2: jae    0x000000010211244d
  0x0000000102111dd8: mov    %dil,0x10(%r9,%r14,1)  ;*bastore
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@115 (line 719)

  0x0000000102111ddd: mov    %r13,%rax
  0x0000000102111de0: inc    %eax
  0x0000000102111de2: mov    %rcx,%rdi
  0x0000000102111de5: and    $0x3f,%edi
  0x0000000102111de8: or     $0x80,%edi
  0x0000000102111dee: movslq %r13d,%r14
  0x0000000102111df1: cmp    0xc(%r9),%r13d
  0x0000000102111df5: jae    0x0000000102112456
  0x0000000102111dfb: mov    %dil,0x10(%r9,%r14,1)  ;*bastore
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@133 (line 720)

  0x0000000102111e00: movabs $0x1160a6918,%rdi  ;   {metadata(method data for {method} {0x0000000115fbf470} 'encode' '([CII[B)I' in 'sun/nio/cs/UTF_8$Encoder')}
  0x0000000102111e0a: incl   0x1e8(%rdi)
  0x0000000102111e10: mov    %rax,%rdi
  0x0000000102111e13: jmpq   0x0000000102112346  ;*goto
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@134 (line 720)

  0x0000000102111e18: movabs $0x1160a6918,%rdi  ;   {metadata(method data for {method} {0x0000000115fbf470} 'encode' '([CII[B)I' in 'sun/nio/cs/UTF_8$Encoder')}
  0x0000000102111e22: addq   $0x1,0x200(%rdi)
  0x0000000102111e2a: movabs $0x1160a6cc0,%rdi  ;   {metadata(method data for {method} {0x0000000115f07500} 'isSurrogate' '(C)Z' in 'java/lang/Character')}
  0x0000000102111e34: mov    0xdc(%rdi),%r13d
  0x0000000102111e3b: add    $0x8,%r13d
  0x0000000102111e3f: mov    %r13d,0xdc(%rdi)
  0x0000000102111e46: movabs $0x115f07500,%rdi  ;   {metadata({method} {0x0000000115f07500} 'isSurrogate' '(C)Z' in 'java/lang/Character')}
  0x0000000102111e50: and    $0x7ffff8,%r13d
  0x0000000102111e57: cmp    $0x0,%r13d
  0x0000000102111e5b: je     0x000000010211245f
  0x0000000102111e61: cmp    $0xd800,%ecx
  0x0000000102111e67: movabs $0x1160a6cc0,%rdi  ;   {metadata(method data for {method} {0x0000000115f07500} 'isSurrogate' '(C)Z' in 'java/lang/Character')}
  0x0000000102111e71: movabs $0x108,%r13
  0x0000000102111e7b: jl     0x0000000102111e8b
  0x0000000102111e81: movabs $0x118,%r13
  0x0000000102111e8b: mov    (%rdi,%r13,1),%r14
  0x0000000102111e8f: lea    0x1(%r14),%r14
  0x0000000102111e93: mov    %r14,(%rdi,%r13,1)
  0x0000000102111e97: jl     0x0000000102111ed9  ;*if_icmplt
                                                ; - java.lang.Character::isSurrogate@3 (line 4776)
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@139 (line 721)

  0x0000000102111e9d: cmp    $0xe000,%ecx
  0x0000000102111ea3: movabs $0x1160a6cc0,%rdi  ;   {metadata(method data for {method} {0x0000000115f07500} 'isSurrogate' '(C)Z' in 'java/lang/Character')}
  0x0000000102111ead: movabs $0x128,%r13
  0x0000000102111eb7: jge    0x0000000102111ec7
  0x0000000102111ebd: movabs $0x138,%r13
  0x0000000102111ec7: mov    (%rdi,%r13,1),%r14
  0x0000000102111ecb: lea    0x1(%r14),%r14
  0x0000000102111ecf: mov    %r14,(%rdi,%r13,1)
  0x0000000102111ed3: jl     0x0000000102111ee3  ;*if_icmpge
                                                ; - java.lang.Character::isSurrogate@9 (line 4776)
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@139 (line 721)

  0x0000000102111ed9: mov    $0x0,%edi
  0x0000000102111ede: jmpq   0x0000000102111ef8  ;*ireturn
                                                ; - java.lang.Character::isSurrogate@17 (line 4776)
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@139 (line 721)

  0x0000000102111ee3: movabs $0x1160a6cc0,%rdi  ;   {metadata(method data for {method} {0x0000000115f07500} 'isSurrogate' '(C)Z' in 'java/lang/Character')}
  0x0000000102111eed: incl   0x148(%rdi)
  0x0000000102111ef3: mov    $0x1,%edi          ;*goto
                                                ; - java.lang.Character::isSurrogate@13 (line 4776)
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@139 (line 721)

  0x0000000102111ef8: and    $0x1,%edi
  0x0000000102111efb: cmp    $0x0,%edi
  0x0000000102111efe: movabs $0x1160a6918,%rdi  ;   {metadata(method data for {method} {0x0000000115fbf470} 'encode' '([CII[B)I' in 'sun/nio/cs/UTF_8$Encoder')}
  0x0000000102111f08: movabs $0x210,%r13
  0x0000000102111f12: je     0x0000000102111f22
  0x0000000102111f18: movabs $0x220,%r13
  0x0000000102111f22: mov    (%rdi,%r13,1),%r14
  0x0000000102111f26: lea    0x1(%r14),%r14
  0x0000000102111f2a: mov    %r14,(%rdi,%r13,1)
  0x0000000102111f2e: je     0x00000001021122c9  ;*ifeq
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@142 (line 721)

  0x0000000102111f34: mov    0x30(%rsi),%edi
  0x0000000102111f37: shl    $0x3,%rdi          ;*getfield sgp
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@146 (line 722)

  0x0000000102111f3b: cmp    $0x0,%rdi
  0x0000000102111f3f: movabs $0x1160a6918,%rdi  ;   {metadata(method data for {method} {0x0000000115fbf470} 'encode' '([CII[B)I' in 'sun/nio/cs/UTF_8$Encoder')}
  0x0000000102111f49: movabs $0x230,%r13
  0x0000000102111f53: jne    0x0000000102111f63
  0x0000000102111f59: movabs $0x240,%r13
  0x0000000102111f63: mov    (%rdi,%r13,1),%r14
  0x0000000102111f67: lea    0x1(%r14),%r14
  0x0000000102111f6b: mov    %r14,(%rdi,%r13,1)
  0x0000000102111f6f: mov    %ecx,0x64(%rsp)
  0x0000000102111f73: mov    %r11d,0x60(%rsp)
  0x0000000102111f78: mov    %eax,0x70(%rsp)
  0x0000000102111f7c: jne    0x0000000102111fe6  ;*ifnonnull
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@149 (line 722)

  0x0000000102111f82: nopw   0x0(%rax,%rax,1)
  0x0000000102111f88: jmpq   0x0000000102112485  ;   {no_reloc}
  0x0000000102111f8d: add    %al,(%rax)
  0x0000000102111f8f: add    %al,(%rax)
  0x0000000102111f91: add    %ch,%cl
  0x0000000102111f93: clc
  0x0000000102111f94: add    $0x0,%al
  0x0000000102111f96: add    %cl,-0x75(%rax)    ;*new  ; - sun.nio.cs.UTF_8$Encoder::encode@153 (line 723)

  0x0000000102111f99: rorb   -0x41(%rax)        ;   {metadata(method data for {method} {0x0000000115fbf470} 'encode' '([CII[B)I' in 'sun/nio/cs/UTF_8$Encoder')}
  0x0000000102111f9c: sbb    %ch,0xa(%rcx)
  0x0000000102111f9f: (bad)
  0x0000000102111fa0: add    %eax,(%rax)
  0x0000000102111fa2: add    %al,(%rax)
  0x0000000102111fa4: addq   $0x1,0x250(%rdi)
  0x0000000102111fac: mov    %rax,%rsi          ;*invokespecial <init>
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@157 (line 723)

  0x0000000102111faf: mov    %rax,0x58(%rsp)
  0x0000000102111fb4: nop
  0x0000000102111fb5: nop
  0x0000000102111fb6: nop
  0x0000000102111fb7: callq  0x0000000102046020  ; OopMap{[72]=Oop [88]=Oop [104]=Oop [120]=Oop off=1340}
                                                ;*invokespecial <init>
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@157 (line 723)
                                                ;   {optimized virtual_call}
  0x0000000102111fbc: mov    0x48(%rsp),%rsi
  0x0000000102111fc1: mov    0x58(%rsp),%rax
  0x0000000102111fc6: mov    %rax,%r10
  0x0000000102111fc9: shr    $0x3,%r10
  0x0000000102111fcd: mov    %r10d,0x30(%rsi)
  0x0000000102111fd1: mov    %rsi,%rdx
  0x0000000102111fd4: shr    $0x9,%rdx
  0x0000000102111fd8: movabs $0x10d9c0000,%rcx
  0x0000000102111fe2: movb   $0x0,(%rdx,%rcx,1)  ;*putfield sgp
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@160 (line 723)

  0x0000000102111fe6: mov    0x30(%rsi),%edi
  0x0000000102111fe9: shl    $0x3,%rdi          ;*getfield sgp
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@164 (line 724)

  0x0000000102111fed: cmp    (%rdi),%rax        ; implicit exception: dispatches to 0x000000010211249c
  0x0000000102111ff0: mov    %rdi,%rdx
  0x0000000102111ff3: movabs $0x1160a6918,%rcx  ;   {metadata(method data for {method} {0x0000000115fbf470} 'encode' '([CII[B)I' in 'sun/nio/cs/UTF_8$Encoder')}
  0x0000000102111ffd: mov    0x8(%rdx),%edx
  0x0000000102112000: shl    $0x3,%rdx
  0x0000000102112004: cmp    0x268(%rcx),%rdx
  0x000000010211200b: jne    0x000000010211201a
  0x000000010211200d: addq   $0x1,0x270(%rcx)
  0x0000000102112015: jmpq   0x0000000102112080
  0x000000010211201a: cmp    0x278(%rcx),%rdx
  0x0000000102112021: jne    0x0000000102112030
  0x0000000102112023: addq   $0x1,0x280(%rcx)
  0x000000010211202b: jmpq   0x0000000102112080
  0x0000000102112030: cmpq   $0x0,0x268(%rcx)
  0x000000010211203b: jne    0x0000000102112054
  0x000000010211203d: mov    %rdx,0x268(%rcx)
  0x0000000102112044: movq   $0x1,0x270(%rcx)
  0x000000010211204f: jmpq   0x0000000102112080
  0x0000000102112054: cmpq   $0x0,0x278(%rcx)
  0x000000010211205f: jne    0x0000000102112078
  0x0000000102112061: mov    %rdx,0x278(%rcx)
  0x0000000102112068: movq   $0x1,0x280(%rcx)
  0x0000000102112073: jmpq   0x0000000102112080
  0x0000000102112078: addq   $0x1,0x260(%rcx)
  0x0000000102112080: mov    0x60(%rsp),%r11d
  0x0000000102112085: dec    %r11d
  0x0000000102112088: mov    0x64(%rsp),%edx
  0x000000010211208c: mov    0x68(%rsp),%rcx
  0x0000000102112091: mov    %r11,%r8
  0x0000000102112094: mov    0x50(%rsp),%r9d
  0x0000000102112099: mov    %rdi,%rsi          ;*invokevirtual parse
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@175 (line 724)

  0x000000010211209c: nop
  0x000000010211209d: movabs $0xffffffffffffffff,%rax
  0x00000001021120a7: callq  0x0000000102046220  ; OopMap{[104]=Oop [120]=Oop [72]=Oop off=1580}
                                                ;*invokevirtual parse
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@175 (line 724)
                                                ;   {virtual_call}
  0x00000001021120ac: cmp    $0x0,%eax
  0x00000001021120af: movabs $0x1160a6918,%rsi  ;   {metadata(method data for {method} {0x0000000115fbf470} 'encode' '([CII[B)I' in 'sun/nio/cs/UTF_8$Encoder')}
  0x00000001021120b9: movabs $0x290,%rdi
  0x00000001021120c3: jge    0x00000001021120d3
  0x00000001021120c9: movabs $0x2a0,%rdi
  0x00000001021120d3: mov    (%rsi,%rdi,1),%rbx
  0x00000001021120d7: lea    0x1(%rbx),%rbx
  0x00000001021120db: mov    %rbx,(%rsi,%rdi,1)
  0x00000001021120df: jge    0x0000000102112202  ;*ifge
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@182 (line 725)

  0x00000001021120e5: mov    0x48(%rsp),%rsi
  0x00000001021120ea: mov    %rsi,%rdi
  0x00000001021120ed: movabs $0x1160a6918,%rbx  ;   {metadata(method data for {method} {0x0000000115fbf470} 'encode' '([CII[B)I' in 'sun/nio/cs/UTF_8$Encoder')}
  0x00000001021120f7: mov    0x8(%rdi),%edi
  0x00000001021120fa: shl    $0x3,%rdi
  0x00000001021120fe: cmp    0x2b8(%rbx),%rdi
  0x0000000102112105: jne    0x0000000102112114
  0x0000000102112107: addq   $0x1,0x2c0(%rbx)
  0x000000010211210f: jmpq   0x000000010211217a
  0x0000000102112114: cmp    0x2c8(%rbx),%rdi
  0x000000010211211b: jne    0x000000010211212a
  0x000000010211211d: addq   $0x1,0x2d0(%rbx)
  0x0000000102112125: jmpq   0x000000010211217a
  0x000000010211212a: cmpq   $0x0,0x2b8(%rbx)
  0x0000000102112135: jne    0x000000010211214e
  0x0000000102112137: mov    %rdi,0x2b8(%rbx)
  0x000000010211213e: movq   $0x1,0x2c0(%rbx)
  0x0000000102112149: jmpq   0x000000010211217a
  0x000000010211214e: cmpq   $0x0,0x2c8(%rbx)
  0x0000000102112159: jne    0x0000000102112172
  0x000000010211215b: mov    %rdi,0x2c8(%rbx)
  0x0000000102112162: movq   $0x1,0x2d0(%rbx)
  0x000000010211216d: jmpq   0x000000010211217a
  0x0000000102112172: addq   $0x1,0x2b0(%rbx)
  0x000000010211217a: mov    0x20(%rsi),%edi
  0x000000010211217d: shl    $0x3,%rdi          ;*getfield malformedInputAction
                                                ; - java.nio.charset.CharsetEncoder::malformedInputAction@1 (line 365)
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@186 (line 726)

  0x0000000102112181: movabs $0x795596980,%r10  ;   {oop(a 'java/nio/charset/CodingErrorAction')}
  0x000000010211218b: cmp    %r10,%rdi
  0x000000010211218e: movabs $0x1160a6918,%rdi  ;   {metadata(method data for {method} {0x0000000115fbf470} 'encode' '([CII[B)I' in 'sun/nio/cs/UTF_8$Encoder')}
  0x0000000102112198: movabs $0x2e0,%rbx
  0x00000001021121a2: je     0x00000001021121b2
  0x00000001021121a8: movabs $0x2f0,%rbx
  0x00000001021121b2: mov    (%rdi,%rbx,1),%rdx
  0x00000001021121b6: lea    0x1(%rdx),%rdx
  0x00000001021121ba: mov    %rdx,(%rdi,%rbx,1)
  0x00000001021121be: jne    0x00000001021123a2  ;*if_acmpeq
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@192 (line 726)

  0x00000001021121c4: mov    0x70(%rsp),%edi
  0x00000001021121c8: mov    0x78(%rsp),%r9
  0x00000001021121cd: mov    %rdi,%rbx
  0x00000001021121d0: inc    %ebx
  0x00000001021121d2: movsbl 0x2c(%rsi),%edx    ;*getfield repl
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@205 (line 728)

  0x00000001021121d6: movslq %edi,%rcx
  0x00000001021121d9: cmp    0xc(%r9),%edi
  0x00000001021121dd: jae    0x00000001021124a1
  0x00000001021121e3: mov    %dl,0x10(%r9,%rcx,1)  ;*bastore
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@208 (line 728)

  0x00000001021121e8: movabs $0x1160a6918,%rax  ;   {metadata(method data for {method} {0x0000000115fbf470} 'encode' '([CII[B)I' in 'sun/nio/cs/UTF_8$Encoder')}
  0x00000001021121f2: incl   0x300(%rax)
  0x00000001021121f8: mov    0x60(%rsp),%r11d
  0x00000001021121fd: jmpq   0x00000001021122ad  ;*goto
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@209 (line 728)

  0x0000000102112202: mov    0x70(%rsp),%edi
  0x0000000102112206: mov    0x78(%rsp),%r9
  0x000000010211220b: mov    0x48(%rsp),%rsi
  0x0000000102112210: mov    %rax,%rbx
  0x0000000102112213: sar    $0x12,%ebx
  0x0000000102112216: or     $0xf0,%ebx
  0x000000010211221c: mov    %rdi,%rdx
  0x000000010211221f: inc    %edx
  0x0000000102112221: movslq %edi,%rcx
  0x0000000102112224: cmp    0xc(%r9),%edi
  0x0000000102112228: jae    0x00000001021124aa
  0x000000010211222e: mov    %bl,0x10(%r9,%rcx,1)  ;*bastore
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@229 (line 730)

  0x0000000102112233: mov    %rax,%rdi
  0x0000000102112236: sar    $0xc,%edi
  0x0000000102112239: and    $0x3f,%edi
  0x000000010211223c: or     $0x80,%edi
  0x0000000102112242: mov    %rdx,%rbx
  0x0000000102112245: inc    %ebx
  0x0000000102112247: movslq %edx,%rcx
  0x000000010211224a: cmp    0xc(%r9),%edx
  0x000000010211224e: jae    0x00000001021124b3
  0x0000000102112254: mov    %dil,0x10(%r9,%rcx,1)  ;*bastore
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@250 (line 731)

  0x0000000102112259: mov    %rax,%rdi
  0x000000010211225c: sar    $0x6,%edi
  0x000000010211225f: and    $0x3f,%edi
  0x0000000102112262: or     $0x80,%edi
  0x0000000102112268: mov    %rbx,%rdx
  0x000000010211226b: inc    %edx
  0x000000010211226d: movslq %ebx,%rcx
  0x0000000102112270: cmp    0xc(%r9),%ebx
  0x0000000102112274: jae    0x00000001021124bc
  0x000000010211227a: mov    %dil,0x10(%r9,%rcx,1)  ;*bastore
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@271 (line 732)

  0x000000010211227f: mov    %rdx,%rdi
  0x0000000102112282: inc    %edi
  0x0000000102112284: mov    %rax,%rbx
  0x0000000102112287: and    $0x3f,%ebx
  0x000000010211228a: or     $0x80,%ebx
  0x0000000102112290: movslq %edx,%rcx
  0x0000000102112293: cmp    0xc(%r9),%edx
  0x0000000102112297: jae    0x00000001021124c5
  0x000000010211229d: mov    %bl,0x10(%r9,%rcx,1)  ;*bastore
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@289 (line 733)

  0x00000001021122a2: mov    0x60(%rsp),%r11d
  0x00000001021122a7: inc    %r11d
  0x00000001021122aa: mov    %rdi,%rbx
  0x00000001021122ad: movabs $0x1160a6918,%rax  ;   {metadata(method data for {method} {0x0000000115fbf470} 'encode' '([CII[B)I' in 'sun/nio/cs/UTF_8$Encoder')}
  0x00000001021122b7: incl   0x318(%rax)
  0x00000001021122bd: mov    %rbx,%rdi
  0x00000001021122c0: mov    0x64(%rsp),%ecx
  0x00000001021122c4: jmpq   0x0000000102112346  ;*goto
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@293 (line 736)

  0x00000001021122c9: mov    %ecx,0x64(%rsp)
  0x00000001021122cd: mov    %rax,%rdi
  0x00000001021122d0: mov    0x64(%rsp),%ecx
  0x00000001021122d4: sar    $0xc,%ecx
  0x00000001021122d7: or     $0xe0,%ecx
  0x00000001021122dd: mov    %rdi,%rax
  0x00000001021122e0: inc    %eax
  0x00000001021122e2: movslq %edi,%rbx
  0x00000001021122e5: cmp    0xc(%r9),%edi
  0x00000001021122e9: jae    0x00000001021124ce
  0x00000001021122ef: mov    %cl,0x10(%r9,%rbx,1)  ;*bastore
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@313 (line 738)

  0x00000001021122f4: mov    0x64(%rsp),%ecx
  0x00000001021122f8: sar    $0x6,%ecx
  0x00000001021122fb: and    $0x3f,%ecx
  0x00000001021122fe: or     $0x80,%ecx
  0x0000000102112304: mov    %rax,%rdi
  0x0000000102112307: inc    %edi
  0x0000000102112309: movslq %eax,%rbx
  0x000000010211230c: cmp    0xc(%r9),%eax
  0x0000000102112310: jae    0x00000001021124d7
  0x0000000102112316: mov    %cl,0x10(%r9,%rbx,1)  ;*bastore
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@334 (line 739)

  0x000000010211231b: mov    %rdi,%rax
  0x000000010211231e: inc    %eax
  0x0000000102112320: mov    0x64(%rsp),%ecx
  0x0000000102112324: and    $0x3f,%ecx
  0x0000000102112327: or     $0x80,%ecx
  0x000000010211232d: movslq %edi,%rbx
  0x0000000102112330: cmp    0xc(%r9),%edi
  0x0000000102112334: jae    0x00000001021124e0
  0x000000010211233a: mov    %cl,0x10(%r9,%rbx,1)  ;*bastore
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@352 (line 740)

  0x000000010211233f: mov    %rax,%rdi          ;*goto
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@353 (line 742)

  0x0000000102112342: mov    0x64(%rsp),%ecx
  0x0000000102112346: movabs $0x1160a6918,%rax  ;   {metadata(method data for {method} {0x0000000115fbf470} 'encode' '([CII[B)I' in 'sun/nio/cs/UTF_8$Encoder')}
  0x0000000102112350: mov    0xe0(%rax),%ebx
  0x0000000102112356: add    $0x8,%ebx
  0x0000000102112359: mov    %ebx,0xe0(%rax)
  0x000000010211235f: movabs $0x115fbf470,%rax  ;   {metadata({method} {0x0000000115fbf470} 'encode' '([CII[B)I' in 'sun/nio/cs/UTF_8$Encoder')}
  0x0000000102112369: and    $0xfff8,%ebx
  0x000000010211236f: cmp    $0x0,%ebx
  0x0000000102112372: je     0x00000001021124e9  ; OopMap{[104]=Oop rsi=Oop [72]=Oop r9=Oop [120]=Oop off=2296}
                                                ;*goto
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@353 (line 742)

  0x0000000102112378: test   %eax,-0x9e627e(%rip)        # 0x000000010172c100
                                                ;   {poll}
  0x000000010211237e: movabs $0x1160a6918,%rax  ;   {metadata(method data for {method} {0x0000000115fbf470} 'encode' '([CII[B)I' in 'sun/nio/cs/UTF_8$Encoder')}
  0x0000000102112388: incl   0x330(%rax)
  0x000000010211238e: mov    %r11,%rcx
  0x0000000102112391: mov    %rdi,%rax
  0x0000000102112394: mov    0x50(%rsp),%edi
  0x0000000102112398: mov    0x68(%rsp),%rdx
  0x000000010211239d: jmpq   0x0000000102111cc0  ;*goto
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@353 (line 742)

  0x00000001021123a2: mov    $0xffffffff,%eax
  0x00000001021123a7: add    $0x90,%rsp
  0x00000001021123ae: pop    %rbp
  0x00000001021123af: test   %eax,-0x9e62b5(%rip)        # 0x000000010172c100
                                                ;   {poll_return}
  0x00000001021123b5: retq                      ;*ireturn
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@196 (line 727)

  0x00000001021123b6: mov    %rax,%rdi
  0x00000001021123b9: mov    %rdi,%rax
  0x00000001021123bc: add    $0x90,%rsp
  0x00000001021123c3: pop    %rbp
  0x00000001021123c4: test   %eax,-0x9e62ca(%rip)        # 0x000000010172c100
                                                ;   {poll_return}
  0x00000001021123ca: retq
  0x00000001021123cb: mov    %rax,0x8(%rsp)
  0x00000001021123d0: movq   $0xffffffffffffffff,(%rsp)
  0x00000001021123d8: callq  0x00000001020fe020  ; OopMap{rsi=Oop [72]=Oop rdx=Oop [104]=Oop r9=Oop [120]=Oop off=2397}
                                                ;*synchronization entry
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@-1 (line 704)
                                                ;   {runtime_call}
  0x00000001021123dd: jmpq   0x0000000102111af5
  0x00000001021123e2: callq  0x000000010206db40  ; OopMap{rsi=Oop [72]=Oop rdx=Oop [104]=Oop r9=Oop [120]=Oop off=2407}
                                                ;*arraylength
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@13 (line 706)
                                                ;   {runtime_call}
  0x00000001021123e7: mov    %rbx,0x8(%rsp)
  0x00000001021123ec: movq   $0xffffffffffffffff,(%rsp)
  0x00000001021123f4: callq  0x00000001020fe020  ; OopMap{rsi=Oop [72]=Oop rdx=Oop [104]=Oop r9=Oop [120]=Oop off=2425}
                                                ;*synchronization entry
                                                ; - java.lang.Math::min@-1 (line 1336)
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@14 (line 706)
                                                ;   {runtime_call}
  0x00000001021123f9: jmpq   0x0000000102111b4c
  0x00000001021123fe: callq  0x000000010206db40  ; OopMap{rdx=Oop [104]=Oop r9=Oop [120]=Oop [72]=Oop off=2435}
                                                ;*caload
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@29 (line 709)
                                                ;   {runtime_call}
  0x0000000102112403: callq  0x000000010206db40  ; OopMap{rdx=Oop [104]=Oop r9=Oop [120]=Oop [72]=Oop off=2440}
                                                ;*caload
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@29 (line 709)
                                                ;   {runtime_call}
  0x0000000102112408: mov    %rcx,(%rsp)
  0x000000010211240c: callq  0x000000010206e200  ; OopMap{rdx=Oop [104]=Oop r9=Oop [120]=Oop [72]=Oop off=2449}
                                                ;*caload
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@29 (line 709)
                                                ;   {runtime_call}
  0x0000000102112411: mov    %rax,(%rsp)
  0x0000000102112415: callq  0x000000010206e200  ; OopMap{rdx=Oop [104]=Oop r9=Oop [120]=Oop [72]=Oop off=2458}
                                                ;*bastore
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@50 (line 710)
                                                ;   {runtime_call}
  0x000000010211241a: mov    %rax,0x8(%rsp)
  0x000000010211241f: movq   $0x33,(%rsp)
  0x0000000102112427: callq  0x00000001020fe020  ; OopMap{rdx=Oop [104]=Oop r9=Oop [120]=Oop [72]=Oop off=2476}
                                                ;*goto
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@51 (line 710)
                                                ;   {runtime_call}
  0x000000010211242c: jmpq   0x0000000102111c51
  0x0000000102112431: callq  0x000000010206db40  ; OopMap{rdx=Oop [104]=Oop r9=Oop [120]=Oop rsi=Oop [72]=Oop off=2486}
                                                ;*caload
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@65 (line 713)
                                                ;   {runtime_call}
  0x0000000102112436: callq  0x000000010206db40  ; OopMap{rdx=Oop [104]=Oop r9=Oop [120]=Oop rsi=Oop [72]=Oop off=2491}
                                                ;*caload
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@65 (line 713)
                                                ;   {runtime_call}
  0x000000010211243b: mov    %rcx,(%rsp)
  0x000000010211243f: callq  0x000000010206e200  ; OopMap{rdx=Oop [104]=Oop r9=Oop [120]=Oop rsi=Oop [72]=Oop off=2500}
                                                ;*caload
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@65 (line 713)
                                                ;   {runtime_call}
  0x0000000102112444: mov    %rax,(%rsp)
  0x0000000102112448: callq  0x000000010206e200  ; OopMap{rdx=Oop [104]=Oop r9=Oop [120]=Oop rsi=Oop [72]=Oop off=2509}
                                                ;*bastore
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@86 (line 716)
                                                ;   {runtime_call}
  0x000000010211244d: mov    %rax,(%rsp)
  0x0000000102112451: callq  0x000000010206e200  ; OopMap{rdx=Oop [104]=Oop r9=Oop [120]=Oop rsi=Oop [72]=Oop off=2518}
                                                ;*bastore
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@115 (line 719)
                                                ;   {runtime_call}
  0x0000000102112456: mov    %r13,(%rsp)
  0x000000010211245a: callq  0x000000010206e200  ; OopMap{rdx=Oop [104]=Oop r9=Oop [120]=Oop rsi=Oop [72]=Oop off=2527}
                                                ;*bastore
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@133 (line 720)
                                                ;   {runtime_call}
  0x000000010211245f: mov    %rdi,0x8(%rsp)
  0x0000000102112464: movq   $0xffffffffffffffff,(%rsp)
  0x000000010211246c: callq  0x00000001020fe020  ; OopMap{rdx=Oop [104]=Oop r9=Oop [120]=Oop rsi=Oop [72]=Oop off=2545}
                                                ;*synchronization entry
                                                ; - java.lang.Character::isSurrogate@-1 (line 4776)
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@139 (line 721)
                                                ;   {runtime_call}
  0x0000000102112471: jmpq   0x0000000102111e61
  0x0000000102112476: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x0000000102112480: mov    $0xa050f00,%eax
  0x0000000102112485: callq  0x00000001020fd020  ; OopMap{[120]=Oop [72]=Oop [104]=Oop off=2570}
                                                ;*new  ; - sun.nio.cs.UTF_8$Encoder::encode@153 (line 723)
                                                ;   {runtime_call}
  0x000000010211248a: jmpq   0x0000000102111f88
  0x000000010211248f: mov    %rdx,%rdx
  0x0000000102112492: callq  0x000000010206d620  ; OopMap{[120]=Oop [72]=Oop [104]=Oop off=2583}
                                                ;*new  ; - sun.nio.cs.UTF_8$Encoder::encode@153 (line 723)
                                                ;   {runtime_call}
  0x0000000102112497: jmpq   0x0000000102111f97
  0x000000010211249c: callq  0x000000010206db40  ; OopMap{[104]=Oop [120]=Oop rsi=Oop [72]=Oop rdi=Oop off=2593}
                                                ;*invokevirtual parse
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@175 (line 724)
                                                ;   {runtime_call}
  0x00000001021124a1: mov    %rdi,(%rsp)
  0x00000001021124a5: callq  0x000000010206e200  ; OopMap{[104]=Oop rsi=Oop [72]=Oop r9=Oop [120]=Oop off=2602}
                                                ;*bastore
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@208 (line 728)
                                                ;   {runtime_call}
  0x00000001021124aa: mov    %rdi,(%rsp)
  0x00000001021124ae: callq  0x000000010206e200  ; OopMap{[104]=Oop rsi=Oop [72]=Oop r9=Oop [120]=Oop off=2611}
                                                ;*bastore
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@229 (line 730)
                                                ;   {runtime_call}
  0x00000001021124b3: mov    %rdx,(%rsp)
  0x00000001021124b7: callq  0x000000010206e200  ; OopMap{[104]=Oop rsi=Oop [72]=Oop r9=Oop [120]=Oop off=2620}
                                                ;*bastore
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@250 (line 731)
                                                ;   {runtime_call}
  0x00000001021124bc: mov    %rbx,(%rsp)
  0x00000001021124c0: callq  0x000000010206e200  ; OopMap{[104]=Oop rsi=Oop [72]=Oop r9=Oop [120]=Oop off=2629}
                                                ;*bastore
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@271 (line 732)
                                                ;   {runtime_call}
  0x00000001021124c5: mov    %rdx,(%rsp)
  0x00000001021124c9: callq  0x000000010206e200  ; OopMap{[104]=Oop rsi=Oop [72]=Oop r9=Oop [120]=Oop off=2638}
                                                ;*bastore
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@289 (line 733)
                                                ;   {runtime_call}
  0x00000001021124ce: mov    %rdi,(%rsp)
  0x00000001021124d2: callq  0x000000010206e200  ; OopMap{[104]=Oop rsi=Oop [72]=Oop r9=Oop [120]=Oop off=2647}
                                                ;*bastore
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@313 (line 738)
                                                ;   {runtime_call}
  0x00000001021124d7: mov    %rax,(%rsp)
  0x00000001021124db: callq  0x000000010206e200  ; OopMap{[104]=Oop rsi=Oop [72]=Oop r9=Oop [120]=Oop off=2656}
                                                ;*bastore
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@334 (line 739)
                                                ;   {runtime_call}
  0x00000001021124e0: mov    %rdi,(%rsp)
  0x00000001021124e4: callq  0x000000010206e200  ; OopMap{[104]=Oop rsi=Oop [72]=Oop r9=Oop [120]=Oop off=2665}
                                                ;*bastore
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@352 (line 740)
                                                ;   {runtime_call}
  0x00000001021124e9: mov    %rax,0x8(%rsp)
  0x00000001021124ee: movq   $0x161,(%rsp)
  0x00000001021124f6: callq  0x00000001020fe020  ; OopMap{[104]=Oop rsi=Oop [72]=Oop r9=Oop [120]=Oop off=2683}
                                                ;*goto
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@353 (line 742)
                                                ;   {runtime_call}
  0x00000001021124fb: jmpq   0x0000000102112378
  0x0000000102112500: nop
  0x0000000102112501: nop
  0x0000000102112502: mov    0x2a8(%r15),%rax
  0x0000000102112509: movabs $0x0,%r10
  0x0000000102112513: mov    %r10,0x2a8(%r15)
  0x000000010211251a: movabs $0x0,%r10
  0x0000000102112524: mov    %r10,0x2b0(%r15)
  0x000000010211252b: add    $0x90,%rsp
  0x0000000102112532: pop    %rbp
  0x0000000102112533: jmpq   0x000000010206e6a0  ;   {runtime_call}
  0x0000000102112538: hlt
  0x0000000102112539: hlt
  0x000000010211253a: hlt
  0x000000010211253b: hlt
  0x000000010211253c: hlt
  0x000000010211253d: hlt
  0x000000010211253e: hlt
  0x000000010211253f: hlt
[Stub Code]
  0x0000000102112540: nop                       ;   {no_reloc}
  0x0000000102112541: nop
  0x0000000102112542: nop
  0x0000000102112543: nop
  0x0000000102112544: nop
  0x0000000102112545: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010211254f: jmpq   0x000000010211254f  ;   {runtime_call}
  0x0000000102112554: nop
  0x0000000102112555: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010211255f: jmpq   0x000000010211255f  ;   {runtime_call}
[Exception Handler]
  0x0000000102112564: callq  0x00000001020fb9a0  ;   {runtime_call}
  0x0000000102112569: mov    %rsp,-0x28(%rsp)
  0x000000010211256e: sub    $0x80,%rsp
  0x0000000102112575: mov    %rax,0x78(%rsp)
  0x000000010211257a: mov    %rcx,0x70(%rsp)
  0x000000010211257f: mov    %rdx,0x68(%rsp)
  0x0000000102112584: mov    %rbx,0x60(%rsp)
  0x0000000102112589: mov    %rbp,0x50(%rsp)
  0x000000010211258e: mov    %rsi,0x48(%rsp)
  0x0000000102112593: mov    %rdi,0x40(%rsp)
  0x0000000102112598: mov    %r8,0x38(%rsp)
  0x000000010211259d: mov    %r9,0x30(%rsp)
  0x00000001021125a2: mov    %r10,0x28(%rsp)
  0x00000001021125a7: mov    %r11,0x20(%rsp)
  0x00000001021125ac: mov    %r12,0x18(%rsp)
  0x00000001021125b1: mov    %r13,0x10(%rsp)
  0x00000001021125b6: mov    %r14,0x8(%rsp)
  0x00000001021125bb: mov    %r15,(%rsp)
  0x00000001021125bf: movabs $0x100d1ee90,%rdi  ;   {external_word}
  0x00000001021125c9: movabs $0x102112569,%rsi  ;   {internal_word}
  0x00000001021125d3: mov    %rsp,%rdx
  0x00000001021125d6: and    $0xfffffffffffffff0,%rsp
  0x00000001021125da: callq  0x0000000100b4a196  ;   {runtime_call}
  0x00000001021125df: hlt
[Deopt Handler Code]
  0x00000001021125e0: movabs $0x1021125e0,%r10  ;   {section_word}
  0x00000001021125ea: push   %r10
  0x00000001021125ec: jmpq   0x00000001020473c0  ;   {runtime_call}
  0x00000001021125f1: hlt
  0x00000001021125f2: hlt
  0x00000001021125f3: hlt
  0x00000001021125f4: hlt
  0x00000001021125f5: hlt
  0x00000001021125f6: hlt
  0x00000001021125f7: hlt
Decoding compiled method 0x0000000102112fd0:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000115e70e90} 'startsWith' '(Ljava/lang/String;I)Z' in 'java/lang/String'
  # this:     rsi:rsi   = 'java/lang/String'
  # parm0:    rdx:rdx   = 'java/lang/String'
  # parm1:    rcx       = int
  #           [sp+0x40]  (sp of caller)
  0x0000000102113140: mov    0x8(%rsi),%r10d
  0x0000000102113144: shl    $0x3,%r10
  0x0000000102113148: cmp    %rax,%r10
  0x000000010211314b: jne    0x0000000102045e20  ;   {runtime_call}
  0x0000000102113151: data32 data32 nopw 0x0(%rax,%rax,1)
  0x000000010211315c: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x0000000102113160: mov    %eax,-0x14000(%rsp)
  0x0000000102113167: push   %rbp
  0x0000000102113168: sub    $0x30,%rsp
  0x000000010211316c: mov    %rsi,0x20(%rsp)
  0x0000000102113171: movabs $0x1160a6e38,%rax  ;   {metadata(method data for {method} {0x0000000115e70e90} 'startsWith' '(Ljava/lang/String;I)Z' in 'java/lang/String')}
  0x000000010211317b: mov    0xdc(%rax),%edi
  0x0000000102113181: add    $0x8,%edi
  0x0000000102113184: mov    %edi,0xdc(%rax)
  0x000000010211318a: movabs $0x115e70e90,%rax  ;   {metadata({method} {0x0000000115e70e90} 'startsWith' '(Ljava/lang/String;I)Z' in 'java/lang/String')}
  0x0000000102113194: and    $0x1ff8,%edi
  0x000000010211319a: cmp    $0x0,%edi
  0x000000010211319d: je     0x000000010211335e  ;*aload_0
                                                ; - java.lang.String::startsWith@0 (line 1403)

  0x00000001021131a3: mov    0xc(%rsi),%eax
  0x00000001021131a6: shl    $0x3,%rax          ;*getfield value
                                                ; - java.lang.String::startsWith@1 (line 1403)

  0x00000001021131aa: mov    0xc(%rdx),%edi     ; implicit exception: dispatches to 0x0000000102113375
  0x00000001021131ad: shl    $0x3,%rdi          ;*getfield value
                                                ; - java.lang.String::startsWith@9 (line 1405)

  0x00000001021131b1: mov    0xc(%rdi),%ebx     ;*arraylength
                                                ; - java.lang.String::startsWith@21 (line 1407)
                                                ; implicit exception: dispatches to 0x000000010211337a
  0x00000001021131b4: cmp    $0x0,%ecx
  0x00000001021131b7: movabs $0x1160a6e38,%r8   ;   {metadata(method data for {method} {0x0000000115e70e90} 'startsWith' '(Ljava/lang/String;I)Z' in 'java/lang/String')}
  0x00000001021131c1: movabs $0x108,%r9
  0x00000001021131cb: jl     0x00000001021131db
  0x00000001021131d1: movabs $0x118,%r9
  0x00000001021131db: mov    (%r8,%r9,1),%r11
  0x00000001021131df: lea    0x1(%r11),%r11
  0x00000001021131e3: mov    %r11,(%r8,%r9,1)
  0x00000001021131e7: jl     0x000000010211332b  ;*iflt
                                                ; - java.lang.String::startsWith@25 (line 1409)

  0x00000001021131ed: mov    0xc(%rax),%r8d     ;*arraylength
                                                ; - java.lang.String::startsWith@33 (line 1409)
                                                ; implicit exception: dispatches to 0x000000010211337f
  0x00000001021131f1: sub    %ebx,%r8d
  0x00000001021131f4: cmp    %r8d,%ecx
  0x00000001021131f7: movabs $0x1160a6e38,%r8   ;   {metadata(method data for {method} {0x0000000115e70e90} 'startsWith' '(Ljava/lang/String;I)Z' in 'java/lang/String')}
  0x0000000102113201: movabs $0x128,%r9
  0x000000010211320b: jle    0x000000010211321b
  0x0000000102113211: movabs $0x138,%r9
  0x000000010211321b: mov    (%r8,%r9,1),%r11
  0x000000010211321f: lea    0x1(%r11),%r11
  0x0000000102113223: mov    %r11,(%r8,%r9,1)
  0x0000000102113227: jg     0x000000010211332b  ;*if_icmple
                                                ; - java.lang.String::startsWith@37 (line 1409)

  0x000000010211322d: mov    %rcx,%r8
  0x0000000102113230: mov    $0x0,%r9d
  0x0000000102113236: jmpq   0x00000001021132eb  ;*iinc
                                                ; - java.lang.String::startsWith@42 (line 1412)

  0x000000010211323b: nopl   0x0(%rax,%rax,1)
  0x0000000102113240: mov    %r8,%r11
  0x0000000102113243: inc    %r11d
  0x0000000102113246: movslq %r8d,%r13
  0x0000000102113249: cmp    0xc(%rax),%r8d
  0x000000010211324d: jae    0x0000000102113384
  0x0000000102113253: movzwl 0x10(%rax,%r13,2),%r8d  ;*caload
                                                ; - java.lang.String::startsWith@56 (line 1413)

  0x0000000102113259: mov    %r9,%r13
  0x000000010211325c: inc    %r13d
  0x000000010211325f: movslq %r9d,%r14
  0x0000000102113262: cmp    0xc(%rdi),%r9d
  0x0000000102113266: jae    0x000000010211338d
  0x000000010211326c: movzwl 0x10(%rdi,%r14,2),%r9d  ;*caload
                                                ; - java.lang.String::startsWith@64 (line 1413)

  0x0000000102113272: movabs $0x1160a6e38,%r14  ;   {metadata(method data for {method} {0x0000000115e70e90} 'startsWith' '(Ljava/lang/String;I)Z' in 'java/lang/String')}
  0x000000010211327c: mov    0xe0(%r14),%esi
  0x0000000102113283: add    $0x8,%esi
  0x0000000102113286: mov    %esi,0xe0(%r14)
  0x000000010211328d: movabs $0x115e70e90,%r14  ;   {metadata({method} {0x0000000115e70e90} 'startsWith' '(Ljava/lang/String;I)Z' in 'java/lang/String')}
  0x0000000102113297: and    $0xfff8,%esi
  0x000000010211329d: cmp    $0x0,%esi
  0x00000001021132a0: je     0x0000000102113396  ; OopMap{rdi=Oop rax=Oop rdx=Oop [32]=Oop off=358}
                                                ;*if_icmpeq
                                                ; - java.lang.String::startsWith@65 (line 1413)

  0x00000001021132a6: test   %eax,-0x9e71ac(%rip)        # 0x000000010172c100
                                                ;   {poll}
  0x00000001021132ac: cmp    %r9d,%r8d
  0x00000001021132af: movabs $0x1160a6e38,%rsi  ;   {metadata(method data for {method} {0x0000000115e70e90} 'startsWith' '(Ljava/lang/String;I)Z' in 'java/lang/String')}
  0x00000001021132b9: movabs $0x168,%r8
  0x00000001021132c3: je     0x00000001021132d3
  0x00000001021132c9: movabs $0x178,%r8
  0x00000001021132d3: mov    (%rsi,%r8,1),%r9
  0x00000001021132d7: lea    0x1(%r9),%r9
  0x00000001021132db: mov    %r9,(%rsi,%r8,1)
  0x00000001021132df: jne    0x000000010211333c  ;*if_icmpeq
                                                ; - java.lang.String::startsWith@65 (line 1413)

  0x00000001021132e5: mov    %r13,%r9
  0x00000001021132e8: mov    %r11,%r8           ;*iinc
                                                ; - java.lang.String::startsWith@42 (line 1412)

  0x00000001021132eb: dec    %ebx
  0x00000001021132ed: cmp    $0x0,%ebx
  0x00000001021132f0: movabs $0x1160a6e38,%r11  ;   {metadata(method data for {method} {0x0000000115e70e90} 'startsWith' '(Ljava/lang/String;I)Z' in 'java/lang/String')}
  0x00000001021132fa: movabs $0x148,%r13
  0x0000000102113304: jl     0x0000000102113314
  0x000000010211330a: movabs $0x158,%r13
  0x0000000102113314: mov    (%r11,%r13,1),%r14
  0x0000000102113318: lea    0x1(%r14),%r14
  0x000000010211331c: mov    %r14,(%r11,%r13,1)
  0x0000000102113320: jl     0x000000010211334d
  0x0000000102113326: jmpq   0x0000000102113240  ;*iflt
                                                ; - java.lang.String::startsWith@47 (line 1412)

  0x000000010211332b: mov    $0x0,%eax
  0x0000000102113330: add    $0x30,%rsp
  0x0000000102113334: pop    %rbp
  0x0000000102113335: test   %eax,-0x9e723b(%rip)        # 0x000000010172c100
                                                ;   {poll_return}
  0x000000010211333b: retq                      ;*ireturn
                                                ; - java.lang.String::startsWith@41 (line 1410)

  0x000000010211333c: mov    $0x0,%eax
  0x0000000102113341: add    $0x30,%rsp
  0x0000000102113345: pop    %rbp
  0x0000000102113346: test   %eax,-0x9e724c(%rip)        # 0x000000010172c100
                                                ;   {poll_return}
  0x000000010211334c: retq                      ;*ireturn
                                                ; - java.lang.String::startsWith@69 (line 1414)

  0x000000010211334d: mov    $0x1,%eax
  0x0000000102113352: add    $0x30,%rsp
  0x0000000102113356: pop    %rbp
  0x0000000102113357: test   %eax,-0x9e725d(%rip)        # 0x000000010172c100
                                                ;   {poll_return}
  0x000000010211335d: retq
  0x000000010211335e: mov    %rax,0x8(%rsp)
  0x0000000102113363: movq   $0xffffffffffffffff,(%rsp)
  0x000000010211336b: callq  0x00000001020fe020  ; OopMap{rsi=Oop [32]=Oop rdx=Oop off=560}
                                                ;*synchronization entry
                                                ; - java.lang.String::startsWith@-1 (line 1403)
                                                ;   {runtime_call}
  0x0000000102113370: jmpq   0x00000001021131a3
  0x0000000102113375: callq  0x000000010206db40  ; OopMap{rsi=Oop [32]=Oop rdx=Oop rax=Oop off=570}
                                                ;*getfield value
                                                ; - java.lang.String::startsWith@9 (line 1405)
                                                ;   {runtime_call}
  0x000000010211337a: callq  0x000000010206db40  ; OopMap{rsi=Oop [32]=Oop rdx=Oop rax=Oop rdi=Oop off=575}
                                                ;*arraylength
                                                ; - java.lang.String::startsWith@21 (line 1407)
                                                ;   {runtime_call}
  0x000000010211337f: callq  0x000000010206db40  ; OopMap{rdi=Oop rax=Oop rdx=Oop rsi=Oop [32]=Oop off=580}
                                                ;*arraylength
                                                ; - java.lang.String::startsWith@33 (line 1409)
                                                ;   {runtime_call}
  0x0000000102113384: mov    %r8,(%rsp)
  0x0000000102113388: callq  0x000000010206e200  ; OopMap{rdi=Oop rax=Oop rdx=Oop [32]=Oop off=589}
                                                ;*caload
                                                ; - java.lang.String::startsWith@56 (line 1413)
                                                ;   {runtime_call}
  0x000000010211338d: mov    %r9,(%rsp)
  0x0000000102113391: callq  0x000000010206e200  ; OopMap{rdi=Oop rax=Oop rdx=Oop [32]=Oop off=598}
                                                ;*caload
                                                ; - java.lang.String::startsWith@64 (line 1413)
                                                ;   {runtime_call}
  0x0000000102113396: mov    %r14,0x8(%rsp)
  0x000000010211339b: movq   $0x41,(%rsp)
  0x00000001021133a3: callq  0x00000001020fe020  ; OopMap{rdi=Oop rax=Oop rdx=Oop [32]=Oop off=616}
                                                ;*if_icmpeq
                                                ; - java.lang.String::startsWith@65 (line 1413)
                                                ;   {runtime_call}
  0x00000001021133a8: jmpq   0x00000001021132a6
  0x00000001021133ad: nop
  0x00000001021133ae: nop
  0x00000001021133af: mov    0x2a8(%r15),%rax
  0x00000001021133b6: movabs $0x0,%r10
  0x00000001021133c0: mov    %r10,0x2a8(%r15)
  0x00000001021133c7: movabs $0x0,%r10
  0x00000001021133d1: mov    %r10,0x2b0(%r15)
  0x00000001021133d8: add    $0x30,%rsp
  0x00000001021133dc: pop    %rbp
  0x00000001021133dd: jmpq   0x000000010206e6a0  ;   {runtime_call}
  0x00000001021133e2: hlt
  0x00000001021133e3: hlt
  0x00000001021133e4: hlt
  0x00000001021133e5: hlt
  0x00000001021133e6: hlt
  0x00000001021133e7: hlt
  0x00000001021133e8: hlt
  0x00000001021133e9: hlt
  0x00000001021133ea: hlt
  0x00000001021133eb: hlt
  0x00000001021133ec: hlt
  0x00000001021133ed: hlt
  0x00000001021133ee: hlt
  0x00000001021133ef: hlt
  0x00000001021133f0: hlt
  0x00000001021133f1: hlt
  0x00000001021133f2: hlt
  0x00000001021133f3: hlt
  0x00000001021133f4: hlt
  0x00000001021133f5: hlt
  0x00000001021133f6: hlt
  0x00000001021133f7: hlt
  0x00000001021133f8: hlt
  0x00000001021133f9: hlt
  0x00000001021133fa: hlt
  0x00000001021133fb: hlt
  0x00000001021133fc: hlt
  0x00000001021133fd: hlt
  0x00000001021133fe: hlt
  0x00000001021133ff: hlt
[Exception Handler]
[Stub Code]
  0x0000000102113400: callq  0x00000001020fb9a0  ;   {no_reloc}
  0x0000000102113405: mov    %rsp,-0x28(%rsp)
  0x000000010211340a: sub    $0x80,%rsp
  0x0000000102113411: mov    %rax,0x78(%rsp)
  0x0000000102113416: mov    %rcx,0x70(%rsp)
  0x000000010211341b: mov    %rdx,0x68(%rsp)
  0x0000000102113420: mov    %rbx,0x60(%rsp)
  0x0000000102113425: mov    %rbp,0x50(%rsp)
  0x000000010211342a: mov    %rsi,0x48(%rsp)
  0x000000010211342f: mov    %rdi,0x40(%rsp)
  0x0000000102113434: mov    %r8,0x38(%rsp)
  0x0000000102113439: mov    %r9,0x30(%rsp)
  0x000000010211343e: mov    %r10,0x28(%rsp)
  0x0000000102113443: mov    %r11,0x20(%rsp)
  0x0000000102113448: mov    %r12,0x18(%rsp)
  0x000000010211344d: mov    %r13,0x10(%rsp)
  0x0000000102113452: mov    %r14,0x8(%rsp)
  0x0000000102113457: mov    %r15,(%rsp)
  0x000000010211345b: movabs $0x100d1ee90,%rdi  ;   {external_word}
  0x0000000102113465: movabs $0x102113405,%rsi  ;   {internal_word}
  0x000000010211346f: mov    %rsp,%rdx
  0x0000000102113472: and    $0xfffffffffffffff0,%rsp
  0x0000000102113476: callq  0x0000000100b4a196  ;   {runtime_call}
  0x000000010211347b: hlt
[Deopt Handler Code]
  0x000000010211347c: movabs $0x10211347c,%r10  ;   {section_word}
  0x0000000102113486: push   %r10
  0x0000000102113488: jmpq   0x00000001020473c0  ;   {runtime_call}
  0x000000010211348d: hlt
  0x000000010211348e: hlt
  0x000000010211348f: hlt
Decoding compiled method 0x0000000102113790:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x0000000116035d38} 'of' '(I)Ljava/lang/CharacterData;' in 'java/lang/CharacterData'
  # parm0:    rsi       = int
  #           [sp+0x40]  (sp of caller)
  0x0000000102113940: mov    %eax,-0x14000(%rsp)
  0x0000000102113947: push   %rbp
  0x0000000102113948: sub    $0x30,%rsp
  0x000000010211394c: movabs $0x1160a2c90,%rax  ;   {metadata(method data for {method} {0x0000000116035d38} 'of' '(I)Ljava/lang/CharacterData;' in 'java/lang/CharacterData')}
  0x0000000102113956: mov    0xdc(%rax),%edi
  0x000000010211395c: add    $0x8,%edi
  0x000000010211395f: mov    %edi,0xdc(%rax)
  0x0000000102113965: movabs $0x116035d38,%rax  ;   {metadata({method} {0x0000000116035d38} 'of' '(I)Ljava/lang/CharacterData;' in 'java/lang/CharacterData')}
  0x000000010211396f: and    $0x1ff8,%edi
  0x0000000102113975: cmp    $0x0,%edi
  0x0000000102113978: je     0x0000000102113b04  ;*iload_0
                                                ; - java.lang.CharacterData::of@0 (line 77)

  0x000000010211397e: mov    %rsi,%rax
  0x0000000102113981: shr    $0x8,%eax
  0x0000000102113984: cmp    $0x0,%eax
  0x0000000102113987: movabs $0x1160a2c90,%rax  ;   {metadata(method data for {method} {0x0000000116035d38} 'of' '(I)Ljava/lang/CharacterData;' in 'java/lang/CharacterData')}
  0x0000000102113991: movabs $0x108,%rdi
  0x000000010211399b: jne    0x00000001021139ab
  0x00000001021139a1: movabs $0x118,%rdi
  0x00000001021139ab: mov    (%rax,%rdi,1),%rbx
  0x00000001021139af: lea    0x1(%rbx),%rbx
  0x00000001021139b3: mov    %rbx,(%rax,%rdi,1)
  0x00000001021139b7: je     0x0000000102113aee  ;*ifne
                                                ; - java.lang.CharacterData::of@4 (line 77)

  0x00000001021139bd: mov    %rsi,%rax
  0x00000001021139c0: shr    $0x10,%eax
  0x00000001021139c3: cmp    $0x0,%eax
  0x00000001021139c6: je     0x0000000102113ac6
  0x00000001021139cc: cmp    $0x1,%eax
  0x00000001021139cf: je     0x0000000102113a9e
  0x00000001021139d5: cmp    $0x2,%eax
  0x00000001021139d8: je     0x0000000102113a76
  0x00000001021139de: cmp    $0xe,%eax
  0x00000001021139e1: je     0x0000000102113a4e
  0x00000001021139e7: cmp    $0xf,%eax
  0x00000001021139ea: je     0x00000001021139f9
  0x00000001021139f0: cmp    $0x10,%eax
  0x00000001021139f3: jne    0x0000000102113a26  ;*tableswitch
                                                ; - java.lang.CharacterData::of@15 (line 80)

  0x00000001021139f9: nopl   0x0(%rax)
  0x0000000102113a00: jmpq   0x0000000102113b78  ;   {no_reloc}
  0x0000000102113a05: add    %al,(%rax)
  0x0000000102113a07: add    %al,(%rax)
  0x0000000102113a09: add    %ah,0xf(%rsi)
  0x0000000102113a0c: (bad)
  0x0000000102113a0d: add    %r8b,(%rax)
  0x0000000102113a10: jmpq   0x0000000102113b92  ; implicit exception: dispatches to 0x0000000102113b82
  0x0000000102113a15: nop
  0x0000000102113a16: shl    $0x3,%rax          ;*getstatic instance
                                                ; - java.lang.CharacterData::of@112 (line 91)

  0x0000000102113a1a: add    $0x30,%rsp
  0x0000000102113a1e: pop    %rbp
  0x0000000102113a1f: test   %eax,-0x9e7925(%rip)        # 0x000000010172c100
                                                ;   {poll_return}
  0x0000000102113a25: retq                      ;*areturn
                                                ; - java.lang.CharacterData::of@115 (line 91)

  0x0000000102113a26: xchg   %ax,%ax
  0x0000000102113a28: jmpq   0x0000000102113bf9  ;   {no_reloc}
  0x0000000102113a2d: add    %al,(%rax)
  0x0000000102113a2f: add    %al,(%rax)
  0x0000000102113a31: add    %ah,0xf(%rsi)
  0x0000000102113a34: (bad)
  0x0000000102113a35: add    %r8b,(%rax)
  0x0000000102113a38: jmpq   0x0000000102113c13  ; implicit exception: dispatches to 0x0000000102113c03
  0x0000000102113a3d: nop
  0x0000000102113a3e: shl    $0x3,%rax          ;*getstatic instance
                                                ; - java.lang.CharacterData::of@116 (line 93)

  0x0000000102113a42: add    $0x30,%rsp
  0x0000000102113a46: pop    %rbp
  0x0000000102113a47: test   %eax,-0x9e794d(%rip)        # 0x000000010172c100
                                                ;   {poll_return}
  0x0000000102113a4d: retq                      ;*areturn
                                                ; - java.lang.CharacterData::of@119 (line 93)

  0x0000000102113a4e: xchg   %ax,%ax
  0x0000000102113a50: jmpq   0x0000000102113c7a  ;   {no_reloc}
  0x0000000102113a55: add    %al,(%rax)
  0x0000000102113a57: add    %al,(%rax)
  0x0000000102113a59: add    %ah,0xf(%rsi)
  0x0000000102113a5c: (bad)
  0x0000000102113a5d: add    %r8b,(%rax)
  0x0000000102113a60: jmpq   0x0000000102113c94  ; implicit exception: dispatches to 0x0000000102113c84
  0x0000000102113a65: nop
  0x0000000102113a66: shl    $0x3,%rax          ;*getstatic instance
                                                ; - java.lang.CharacterData::of@108 (line 88)

  0x0000000102113a6a: add    $0x30,%rsp
  0x0000000102113a6e: pop    %rbp
  0x0000000102113a6f: test   %eax,-0x9e7975(%rip)        # 0x000000010172c100
                                                ;   {poll_return}
  0x0000000102113a75: retq                      ;*areturn
                                                ; - java.lang.CharacterData::of@111 (line 88)

  0x0000000102113a76: xchg   %ax,%ax
  0x0000000102113a78: jmpq   0x0000000102113cfb  ;   {no_reloc}
  0x0000000102113a7d: add    %al,(%rax)
  0x0000000102113a7f: add    %al,(%rax)
  0x0000000102113a81: add    %ah,0xf(%rsi)
  0x0000000102113a84: (bad)
  0x0000000102113a85: add    %r8b,(%rax)
  0x0000000102113a88: jmpq   0x0000000102113d15  ; implicit exception: dispatches to 0x0000000102113d05
  0x0000000102113a8d: nop
  0x0000000102113a8e: shl    $0x3,%rax          ;*getstatic instance
                                                ; - java.lang.CharacterData::of@104 (line 86)

  0x0000000102113a92: add    $0x30,%rsp
  0x0000000102113a96: pop    %rbp
  0x0000000102113a97: test   %eax,-0x9e799d(%rip)        # 0x000000010172c100
                                                ;   {poll_return}
  0x0000000102113a9d: retq                      ;*areturn
                                                ; - java.lang.CharacterData::of@107 (line 86)

  0x0000000102113a9e: xchg   %ax,%ax
  0x0000000102113aa0: jmpq   0x0000000102113d7c  ;   {no_reloc}
  0x0000000102113aa5: add    %al,(%rax)
  0x0000000102113aa7: add    %al,(%rax)
  0x0000000102113aa9: add    %ah,0xf(%rsi)
  0x0000000102113aac: (bad)
  0x0000000102113aad: add    %r8b,(%rax)
  0x0000000102113ab0: jmpq   0x0000000102113d96  ; implicit exception: dispatches to 0x0000000102113d86
  0x0000000102113ab5: nop
  0x0000000102113ab6: shl    $0x3,%rax          ;*getstatic instance
                                                ; - java.lang.CharacterData::of@100 (line 84)

  0x0000000102113aba: add    $0x30,%rsp
  0x0000000102113abe: pop    %rbp
  0x0000000102113abf: test   %eax,-0x9e79c5(%rip)        # 0x000000010172c100
                                                ;   {poll_return}
  0x0000000102113ac5: retq                      ;*areturn
                                                ; - java.lang.CharacterData::of@103 (line 84)

  0x0000000102113ac6: xchg   %ax,%ax
  0x0000000102113ac8: jmpq   0x0000000102113dfd  ;   {no_reloc}
  0x0000000102113acd: add    %al,(%rax)
  0x0000000102113acf: add    %al,(%rax)
  0x0000000102113ad1: add    %ah,0xf(%rsi)
  0x0000000102113ad4: (bad)
  0x0000000102113ad5: add    %r8b,(%rax)
  0x0000000102113ad8: jmpq   0x0000000102113e17  ; implicit exception: dispatches to 0x0000000102113e07
  0x0000000102113add: nop
  0x0000000102113ade: shl    $0x3,%rax          ;*getstatic instance
                                                ; - java.lang.CharacterData::of@96 (line 82)

  0x0000000102113ae2: add    $0x30,%rsp
  0x0000000102113ae6: pop    %rbp
  0x0000000102113ae7: test   %eax,-0x9e79ed(%rip)        # 0x000000010172c100
                                                ;   {poll_return}
  0x0000000102113aed: retq                      ;*areturn
                                                ; - java.lang.CharacterData::of@99 (line 82)

  0x0000000102113aee: movabs $0x7955c8eb0,%rax  ;   {oop(a 'java/lang/CharacterDataLatin1')}
  0x0000000102113af8: add    $0x30,%rsp
  0x0000000102113afc: pop    %rbp
  0x0000000102113afd: test   %eax,-0x9e7a03(%rip)        # 0x000000010172c100
                                                ;   {poll_return}
  0x0000000102113b03: retq
  0x0000000102113b04: mov    %rax,0x8(%rsp)
  0x0000000102113b09: movq   $0xffffffffffffffff,(%rsp)
  0x0000000102113b11: callq  0x00000001020fe020  ; OopMap{off=470}
                                                ;*synchronization entry
                                                ; - java.lang.CharacterData::of@-1 (line 77)
                                                ;   {runtime_call}
  0x0000000102113b16: jmpq   0x000000010211397e
  0x0000000102113b1b: movabs $0x0,%rax          ;   {oop(NULL)}
  0x0000000102113b25: push   %rax
  0x0000000102113b26: push   %rbx
  0x0000000102113b27: mov    0x48(%rax),%rbx
  0x0000000102113b2b: push   %rdi
  0x0000000102113b2c: push   %rsi
  0x0000000102113b2d: push   %rdx
  0x0000000102113b2e: push   %rcx
  0x0000000102113b2f: push   %r8
  0x0000000102113b31: push   %r9
  0x0000000102113b33: push   %r10
  0x0000000102113b35: mov    %rsp,%r10
  0x0000000102113b38: and    $0xfffffffffffffff0,%rsp
  0x0000000102113b3c: push   %r10
  0x0000000102113b3e: push   %r11
  0x0000000102113b40: mov    $0x102,%edi
  0x0000000102113b45: movabs $0x7fff8e9d3aa2,%r10  ;   {runtime_call}
  0x0000000102113b4f: callq  *%r10
  0x0000000102113b52: pop    %r11
  0x0000000102113b54: pop    %rsp
  0x0000000102113b55: pop    %r10
  0x0000000102113b57: pop    %r9
  0x0000000102113b59: pop    %r8
  0x0000000102113b5b: pop    %rcx
  0x0000000102113b5c: pop    %rdx
  0x0000000102113b5d: pop    %rsi
  0x0000000102113b5e: pop    %rdi
  0x0000000102113b5f: cmp    0x118(%rbx),%rax
  0x0000000102113b66: pop    %rbx
  0x0000000102113b67: pop    %rax
  0x0000000102113b68: jne    0x0000000102113b78
  0x0000000102113b6e: jmpq   0x0000000102113a0a
  0x0000000102113b73: mov    $0xa535d00,%eax
  0x0000000102113b78: callq  0x00000001020fd420  ; OopMap{off=573}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@112 (line 91)
                                                ;   {runtime_call}
  0x0000000102113b7d: jmpq   0x0000000102113a00
  0x0000000102113b82: callq  0x000000010206db40  ; OopMap{rax=Oop off=583}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@112 (line 91)
                                                ;   {runtime_call}
  0x0000000102113b87: mov    0x0(%rax),%eax
  0x0000000102113b8d: mov    $0x6050b00,%eax
  0x0000000102113b92: callq  0x00000001020fcc20  ; OopMap{rax=Oop off=599}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@112 (line 91)
                                                ;   {runtime_call}
  0x0000000102113b97: jmpq   0x0000000102113a10
  0x0000000102113b9c: movabs $0x0,%rax          ;   {oop(NULL)}
  0x0000000102113ba6: push   %rax
  0x0000000102113ba7: push   %rbx
  0x0000000102113ba8: mov    0x48(%rax),%rbx
  0x0000000102113bac: push   %rdi
  0x0000000102113bad: push   %rsi
  0x0000000102113bae: push   %rdx
  0x0000000102113baf: push   %rcx
  0x0000000102113bb0: push   %r8
  0x0000000102113bb2: push   %r9
  0x0000000102113bb4: push   %r10
  0x0000000102113bb6: mov    %rsp,%r10
  0x0000000102113bb9: and    $0xfffffffffffffff0,%rsp
  0x0000000102113bbd: push   %r10
  0x0000000102113bbf: push   %r11
  0x0000000102113bc1: mov    $0x102,%edi
  0x0000000102113bc6: movabs $0x7fff8e9d3aa2,%r10  ;   {runtime_call}
  0x0000000102113bd0: callq  *%r10
  0x0000000102113bd3: pop    %r11
  0x0000000102113bd5: pop    %rsp
  0x0000000102113bd6: pop    %r10
  0x0000000102113bd8: pop    %r9
  0x0000000102113bda: pop    %r8
  0x0000000102113bdc: pop    %rcx
  0x0000000102113bdd: pop    %rdx
  0x0000000102113bde: pop    %rsi
  0x0000000102113bdf: pop    %rdi
  0x0000000102113be0: cmp    0x118(%rbx),%rax
  0x0000000102113be7: pop    %rbx
  0x0000000102113be8: pop    %rax
  0x0000000102113be9: jne    0x0000000102113bf9
  0x0000000102113bef: jmpq   0x0000000102113a32
  0x0000000102113bf4: mov    $0xa535d00,%eax
  0x0000000102113bf9: callq  0x00000001020fd420  ; OopMap{off=702}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@116 (line 93)
                                                ;   {runtime_call}
  0x0000000102113bfe: jmpq   0x0000000102113a28
  0x0000000102113c03: callq  0x000000010206db40  ; OopMap{rax=Oop off=712}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@116 (line 93)
                                                ;   {runtime_call}
  0x0000000102113c08: mov    0x0(%rax),%eax
  0x0000000102113c0e: mov    $0x6050b00,%eax
  0x0000000102113c13: callq  0x00000001020fcc20  ; OopMap{rax=Oop off=728}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@116 (line 93)
                                                ;   {runtime_call}
  0x0000000102113c18: jmpq   0x0000000102113a38
  0x0000000102113c1d: movabs $0x0,%rax          ;   {oop(NULL)}
  0x0000000102113c27: push   %rax
  0x0000000102113c28: push   %rbx
  0x0000000102113c29: mov    0x48(%rax),%rbx
  0x0000000102113c2d: push   %rdi
  0x0000000102113c2e: push   %rsi
  0x0000000102113c2f: push   %rdx
  0x0000000102113c30: push   %rcx
  0x0000000102113c31: push   %r8
  0x0000000102113c33: push   %r9
  0x0000000102113c35: push   %r10
  0x0000000102113c37: mov    %rsp,%r10
  0x0000000102113c3a: and    $0xfffffffffffffff0,%rsp
  0x0000000102113c3e: push   %r10
  0x0000000102113c40: push   %r11
  0x0000000102113c42: mov    $0x102,%edi
  0x0000000102113c47: movabs $0x7fff8e9d3aa2,%r10  ;   {runtime_call}
  0x0000000102113c51: callq  *%r10
  0x0000000102113c54: pop    %r11
  0x0000000102113c56: pop    %rsp
  0x0000000102113c57: pop    %r10
  0x0000000102113c59: pop    %r9
  0x0000000102113c5b: pop    %r8
  0x0000000102113c5d: pop    %rcx
  0x0000000102113c5e: pop    %rdx
  0x0000000102113c5f: pop    %rsi
  0x0000000102113c60: pop    %rdi
  0x0000000102113c61: cmp    0x118(%rbx),%rax
  0x0000000102113c68: pop    %rbx
  0x0000000102113c69: pop    %rax
  0x0000000102113c6a: jne    0x0000000102113c7a
  0x0000000102113c70: jmpq   0x0000000102113a5a
  0x0000000102113c75: mov    $0xa535d00,%eax
  0x0000000102113c7a: callq  0x00000001020fd420  ; OopMap{off=831}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@108 (line 88)
                                                ;   {runtime_call}
  0x0000000102113c7f: jmpq   0x0000000102113a50
  0x0000000102113c84: callq  0x000000010206db40  ; OopMap{rax=Oop off=841}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@108 (line 88)
                                                ;   {runtime_call}
  0x0000000102113c89: mov    0x0(%rax),%eax
  0x0000000102113c8f: mov    $0x6050b00,%eax
  0x0000000102113c94: callq  0x00000001020fcc20  ; OopMap{rax=Oop off=857}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@108 (line 88)
                                                ;   {runtime_call}
  0x0000000102113c99: jmpq   0x0000000102113a60
  0x0000000102113c9e: movabs $0x0,%rax          ;   {oop(NULL)}
  0x0000000102113ca8: push   %rax
  0x0000000102113ca9: push   %rbx
  0x0000000102113caa: mov    0x48(%rax),%rbx
  0x0000000102113cae: push   %rdi
  0x0000000102113caf: push   %rsi
  0x0000000102113cb0: push   %rdx
  0x0000000102113cb1: push   %rcx
  0x0000000102113cb2: push   %r8
  0x0000000102113cb4: push   %r9
  0x0000000102113cb6: push   %r10
  0x0000000102113cb8: mov    %rsp,%r10
  0x0000000102113cbb: and    $0xfffffffffffffff0,%rsp
  0x0000000102113cbf: push   %r10
  0x0000000102113cc1: push   %r11
  0x0000000102113cc3: mov    $0x102,%edi
  0x0000000102113cc8: movabs $0x7fff8e9d3aa2,%r10  ;   {runtime_call}
  0x0000000102113cd2: callq  *%r10
  0x0000000102113cd5: pop    %r11
  0x0000000102113cd7: pop    %rsp
  0x0000000102113cd8: pop    %r10
  0x0000000102113cda: pop    %r9
  0x0000000102113cdc: pop    %r8
  0x0000000102113cde: pop    %rcx
  0x0000000102113cdf: pop    %rdx
  0x0000000102113ce0: pop    %rsi
  0x0000000102113ce1: pop    %rdi
  0x0000000102113ce2: cmp    0x118(%rbx),%rax
  0x0000000102113ce9: pop    %rbx
  0x0000000102113cea: pop    %rax
  0x0000000102113ceb: jne    0x0000000102113cfb
  0x0000000102113cf1: jmpq   0x0000000102113a82
  0x0000000102113cf6: mov    $0xa535d00,%eax
  0x0000000102113cfb: callq  0x00000001020fd420  ; OopMap{off=960}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@104 (line 86)
                                                ;   {runtime_call}
  0x0000000102113d00: jmpq   0x0000000102113a78
  0x0000000102113d05: callq  0x000000010206db40  ; OopMap{rax=Oop off=970}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@104 (line 86)
                                                ;   {runtime_call}
  0x0000000102113d0a: mov    0x0(%rax),%eax
  0x0000000102113d10: mov    $0x6050b00,%eax
  0x0000000102113d15: callq  0x00000001020fcc20  ; OopMap{rax=Oop off=986}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@104 (line 86)
                                                ;   {runtime_call}
  0x0000000102113d1a: jmpq   0x0000000102113a88
  0x0000000102113d1f: movabs $0x0,%rax          ;   {oop(NULL)}
  0x0000000102113d29: push   %rax
  0x0000000102113d2a: push   %rbx
  0x0000000102113d2b: mov    0x48(%rax),%rbx
  0x0000000102113d2f: push   %rdi
  0x0000000102113d30: push   %rsi
  0x0000000102113d31: push   %rdx
  0x0000000102113d32: push   %rcx
  0x0000000102113d33: push   %r8
  0x0000000102113d35: push   %r9
  0x0000000102113d37: push   %r10
  0x0000000102113d39: mov    %rsp,%r10
  0x0000000102113d3c: and    $0xfffffffffffffff0,%rsp
  0x0000000102113d40: push   %r10
  0x0000000102113d42: push   %r11
  0x0000000102113d44: mov    $0x102,%edi
  0x0000000102113d49: movabs $0x7fff8e9d3aa2,%r10  ;   {runtime_call}
  0x0000000102113d53: callq  *%r10
  0x0000000102113d56: pop    %r11
  0x0000000102113d58: pop    %rsp
  0x0000000102113d59: pop    %r10
  0x0000000102113d5b: pop    %r9
  0x0000000102113d5d: pop    %r8
  0x0000000102113d5f: pop    %rcx
  0x0000000102113d60: pop    %rdx
  0x0000000102113d61: pop    %rsi
  0x0000000102113d62: pop    %rdi
  0x0000000102113d63: cmp    0x118(%rbx),%rax
  0x0000000102113d6a: pop    %rbx
  0x0000000102113d6b: pop    %rax
  0x0000000102113d6c: jne    0x0000000102113d7c
  0x0000000102113d72: jmpq   0x0000000102113aaa
  0x0000000102113d77: mov    $0xa535d00,%eax
  0x0000000102113d7c: callq  0x00000001020fd420  ; OopMap{off=1089}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@100 (line 84)
                                                ;   {runtime_call}
  0x0000000102113d81: jmpq   0x0000000102113aa0
  0x0000000102113d86: callq  0x000000010206db40  ; OopMap{rax=Oop off=1099}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@100 (line 84)
                                                ;   {runtime_call}
  0x0000000102113d8b: mov    0x0(%rax),%eax
  0x0000000102113d91: mov    $0x6050b00,%eax
  0x0000000102113d96: callq  0x00000001020fcc20  ; OopMap{rax=Oop off=1115}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@100 (line 84)
                                                ;   {runtime_call}
  0x0000000102113d9b: jmpq   0x0000000102113ab0
  0x0000000102113da0: movabs $0x0,%rax          ;   {oop(NULL)}
  0x0000000102113daa: push   %rax
  0x0000000102113dab: push   %rbx
  0x0000000102113dac: mov    0x48(%rax),%rbx
  0x0000000102113db0: push   %rdi
  0x0000000102113db1: push   %rsi
  0x0000000102113db2: push   %rdx
  0x0000000102113db3: push   %rcx
  0x0000000102113db4: push   %r8
  0x0000000102113db6: push   %r9
  0x0000000102113db8: push   %r10
  0x0000000102113dba: mov    %rsp,%r10
  0x0000000102113dbd: and    $0xfffffffffffffff0,%rsp
  0x0000000102113dc1: push   %r10
  0x0000000102113dc3: push   %r11
  0x0000000102113dc5: mov    $0x102,%edi
  0x0000000102113dca: movabs $0x7fff8e9d3aa2,%r10  ;   {runtime_call}
  0x0000000102113dd4: callq  *%r10
  0x0000000102113dd7: pop    %r11
  0x0000000102113dd9: pop    %rsp
  0x0000000102113dda: pop    %r10
  0x0000000102113ddc: pop    %r9
  0x0000000102113dde: pop    %r8
  0x0000000102113de0: pop    %rcx
  0x0000000102113de1: pop    %rdx
  0x0000000102113de2: pop    %rsi
  0x0000000102113de3: pop    %rdi
  0x0000000102113de4: cmp    0x118(%rbx),%rax
  0x0000000102113deb: pop    %rbx
  0x0000000102113dec: pop    %rax
  0x0000000102113ded: jne    0x0000000102113dfd
  0x0000000102113df3: jmpq   0x0000000102113ad2
  0x0000000102113df8: mov    $0xa535d00,%eax
  0x0000000102113dfd: callq  0x00000001020fd420  ; OopMap{off=1218}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@96 (line 82)
                                                ;   {runtime_call}
  0x0000000102113e02: jmpq   0x0000000102113ac8
  0x0000000102113e07: callq  0x000000010206db40  ; OopMap{rax=Oop off=1228}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@96 (line 82)
                                                ;   {runtime_call}
  0x0000000102113e0c: mov    0x0(%rax),%eax
  0x0000000102113e12: mov    $0x6050b00,%eax
  0x0000000102113e17: callq  0x00000001020fcc20  ; OopMap{rax=Oop off=1244}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@96 (line 82)
                                                ;   {runtime_call}
  0x0000000102113e1c: jmpq   0x0000000102113ad8
  0x0000000102113e21: nop
  0x0000000102113e22: nop
  0x0000000102113e23: mov    0x2a8(%r15),%rax
  0x0000000102113e2a: movabs $0x0,%r10
  0x0000000102113e34: mov    %r10,0x2a8(%r15)
  0x0000000102113e3b: movabs $0x0,%r10
  0x0000000102113e45: mov    %r10,0x2b0(%r15)
  0x0000000102113e4c: add    $0x30,%rsp
  0x0000000102113e50: pop    %rbp
  0x0000000102113e51: jmpq   0x000000010206e6a0  ;   {runtime_call}
  0x0000000102113e56: hlt
  0x0000000102113e57: hlt
  0x0000000102113e58: hlt
  0x0000000102113e59: hlt
  0x0000000102113e5a: hlt
  0x0000000102113e5b: hlt
  0x0000000102113e5c: hlt
  0x0000000102113e5d: hlt
  0x0000000102113e5e: hlt
  0x0000000102113e5f: hlt
[Exception Handler]
[Stub Code]
  0x0000000102113e60: callq  0x00000001020fb9a0  ;   {no_reloc}
  0x0000000102113e65: mov    %rsp,-0x28(%rsp)
  0x0000000102113e6a: sub    $0x80,%rsp
  0x0000000102113e71: mov    %rax,0x78(%rsp)
  0x0000000102113e76: mov    %rcx,0x70(%rsp)
  0x0000000102113e7b: mov    %rdx,0x68(%rsp)
  0x0000000102113e80: mov    %rbx,0x60(%rsp)
  0x0000000102113e85: mov    %rbp,0x50(%rsp)
  0x0000000102113e8a: mov    %rsi,0x48(%rsp)
  0x0000000102113e8f: mov    %rdi,0x40(%rsp)
  0x0000000102113e94: mov    %r8,0x38(%rsp)
  0x0000000102113e99: mov    %r9,0x30(%rsp)
  0x0000000102113e9e: mov    %r10,0x28(%rsp)
  0x0000000102113ea3: mov    %r11,0x20(%rsp)
  0x0000000102113ea8: mov    %r12,0x18(%rsp)
  0x0000000102113ead: mov    %r13,0x10(%rsp)
  0x0000000102113eb2: mov    %r14,0x8(%rsp)
  0x0000000102113eb7: mov    %r15,(%rsp)
  0x0000000102113ebb: movabs $0x100d1ee90,%rdi  ;   {external_word}
  0x0000000102113ec5: movabs $0x102113e65,%rsi  ;   {internal_word}
  0x0000000102113ecf: mov    %rsp,%rdx
  0x0000000102113ed2: and    $0xfffffffffffffff0,%rsp
  0x0000000102113ed6: callq  0x0000000100b4a196  ;   {runtime_call}
  0x0000000102113edb: hlt
[Deopt Handler Code]
  0x0000000102113edc: movabs $0x102113edc,%r10  ;   {section_word}
  0x0000000102113ee6: push   %r10
  0x0000000102113ee8: jmpq   0x00000001020473c0  ;   {runtime_call}
  0x0000000102113eed: hlt
  0x0000000102113eee: hlt
  0x0000000102113eef: hlt
Decoding compiled method 0x0000000102114250:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000115e94ea0} 'get' '()Ljava/lang/Object;' in 'java/lang/ref/Reference'
  #           [sp+0x40]  (sp of caller)
  0x00000001021143a0: mov    0x8(%rsi),%r10d
  0x00000001021143a4: shl    $0x3,%r10
  0x00000001021143a8: cmp    %rax,%r10
  0x00000001021143ab: jne    0x0000000102045e20  ;   {runtime_call}
  0x00000001021143b1: data32 data32 nopw 0x0(%rax,%rax,1)
  0x00000001021143bc: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x00000001021143c0: mov    %eax,-0x14000(%rsp)
  0x00000001021143c7: push   %rbp
  0x00000001021143c8: sub    $0x30,%rsp
  0x00000001021143cc: mov    0xc(%rsi),%eax
  0x00000001021143cf: shl    $0x3,%rax          ;*aload_0
                                                ; - java.lang.ref.Reference::get@0 (line 254)

  0x00000001021143d3: add    $0x30,%rsp
  0x00000001021143d7: pop    %rbp
  0x00000001021143d8: test   %eax,-0x9e82de(%rip)        # 0x000000010172c100
                                                ;   {poll_return}
  0x00000001021143de: retq
  0x00000001021143df: nop
  0x00000001021143e0: nop
  0x00000001021143e1: mov    0x2a8(%r15),%rax
  0x00000001021143e8: movabs $0x0,%r10
  0x00000001021143f2: mov    %r10,0x2a8(%r15)
  0x00000001021143f9: movabs $0x0,%r10
  0x0000000102114403: mov    %r10,0x2b0(%r15)
  0x000000010211440a: add    $0x30,%rsp
  0x000000010211440e: pop    %rbp
  0x000000010211440f: jmpq   0x000000010206e6a0  ;   {runtime_call}
  0x0000000102114414: hlt
  0x0000000102114415: hlt
  0x0000000102114416: hlt
  0x0000000102114417: hlt
  0x0000000102114418: hlt
  0x0000000102114419: hlt
  0x000000010211441a: hlt
  0x000000010211441b: hlt
  0x000000010211441c: hlt
  0x000000010211441d: hlt
  0x000000010211441e: hlt
  0x000000010211441f: hlt
[Exception Handler]
[Stub Code]
  0x0000000102114420: callq  0x00000001020fb9a0  ;   {no_reloc}
  0x0000000102114425: mov    %rsp,-0x28(%rsp)
  0x000000010211442a: sub    $0x80,%rsp
  0x0000000102114431: mov    %rax,0x78(%rsp)
  0x0000000102114436: mov    %rcx,0x70(%rsp)
  0x000000010211443b: mov    %rdx,0x68(%rsp)
  0x0000000102114440: mov    %rbx,0x60(%rsp)
  0x0000000102114445: mov    %rbp,0x50(%rsp)
  0x000000010211444a: mov    %rsi,0x48(%rsp)
  0x000000010211444f: mov    %rdi,0x40(%rsp)
  0x0000000102114454: mov    %r8,0x38(%rsp)
  0x0000000102114459: mov    %r9,0x30(%rsp)
  0x000000010211445e: mov    %r10,0x28(%rsp)
  0x0000000102114463: mov    %r11,0x20(%rsp)
  0x0000000102114468: mov    %r12,0x18(%rsp)
  0x000000010211446d: mov    %r13,0x10(%rsp)
  0x0000000102114472: mov    %r14,0x8(%rsp)
  0x0000000102114477: mov    %r15,(%rsp)
  0x000000010211447b: movabs $0x100d1ee90,%rdi  ;   {external_word}
  0x0000000102114485: movabs $0x102114425,%rsi  ;   {internal_word}
  0x000000010211448f: mov    %rsp,%rdx
  0x0000000102114492: and    $0xfffffffffffffff0,%rsp
  0x0000000102114496: callq  0x0000000100b4a196  ;   {runtime_call}
  0x000000010211449b: hlt
[Deopt Handler Code]
  0x000000010211449c: movabs $0x10211449c,%r10  ;   {section_word}
  0x00000001021144a6: push   %r10
  0x00000001021144a8: jmpq   0x00000001020473c0  ;   {runtime_call}
  0x00000001021144ad: hlt
  0x00000001021144ae: hlt
  0x00000001021144af: hlt
Decoding compiled method 0x0000000102114510:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000116036c40} 'toLowerCase' '(I)I' in 'java/lang/CharacterDataLatin1'
  # this:     rsi:rsi   = 'java/lang/CharacterDataLatin1'
  # parm0:    rdx       = int
  #           [sp+0x50]  (sp of caller)
  0x0000000102114680: mov    0x8(%rsi),%r10d
  0x0000000102114684: shl    $0x3,%r10
  0x0000000102114688: cmp    %rax,%r10
  0x000000010211468b: jne    0x0000000102045e20  ;   {runtime_call}
  0x0000000102114691: data32 data32 nopw 0x0(%rax,%rax,1)
  0x000000010211469c: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x00000001021146a0: mov    %eax,-0x14000(%rsp)
  0x00000001021146a7: push   %rbp
  0x00000001021146a8: sub    $0x40,%rsp
  0x00000001021146ac: movabs $0x1160a6fe8,%rax  ;   {metadata(method data for {method} {0x0000000116036c40} 'toLowerCase' '(I)I' in 'java/lang/CharacterDataLatin1')}
  0x00000001021146b6: mov    0xdc(%rax),%edi
  0x00000001021146bc: add    $0x8,%edi
  0x00000001021146bf: mov    %edi,0xdc(%rax)
  0x00000001021146c5: movabs $0x116036c40,%rax  ;   {metadata({method} {0x0000000116036c40} 'toLowerCase' '(I)I' in 'java/lang/CharacterDataLatin1')}
  0x00000001021146cf: and    $0x1ff8,%edi
  0x00000001021146d5: cmp    $0x0,%edi
  0x00000001021146d8: je     0x00000001021147fa  ;*iload_1
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@0 (line 133)

  0x00000001021146de: mov    %rsi,%rax
  0x00000001021146e1: movabs $0x1160a6fe8,%rdi  ;   {metadata(method data for {method} {0x0000000116036c40} 'toLowerCase' '(I)I' in 'java/lang/CharacterDataLatin1')}
  0x00000001021146eb: movabs $0x7c0037468,%r10  ;   {metadata('java/lang/CharacterDataLatin1')}
  0x00000001021146f5: mov    %r10,0x110(%rdi)
  0x00000001021146fc: addq   $0x1,0x118(%rdi)
  0x0000000102114704: movabs $0x1160a67f0,%rax  ;   {metadata(method data for {method} {0x0000000116036470} 'getProperties' '(I)I' in 'java/lang/CharacterDataLatin1')}
  0x000000010211470e: mov    0xdc(%rax),%edi
  0x0000000102114714: add    $0x8,%edi
  0x0000000102114717: mov    %edi,0xdc(%rax)
  0x000000010211471d: movabs $0x116036470,%rax  ;   {metadata({method} {0x0000000116036470} 'getProperties' '(I)I' in 'java/lang/CharacterDataLatin1')}
  0x0000000102114727: and    $0x7ffff8,%edi
  0x000000010211472d: cmp    $0x0,%edi
  0x0000000102114730: je     0x0000000102114811
  0x0000000102114736: mov    %rdx,%rax
  0x0000000102114739: and    $0xffff,%eax
  0x000000010211473f: movabs $0x7955c8ec0,%rdi  ;   {oop([I)}
  0x0000000102114749: movslq %eax,%rbx
  0x000000010211474c: cmp    0xc(%rdi),%eax     ; implicit exception: dispatches to 0x0000000102114828
  0x000000010211474f: jae    0x0000000102114832
  0x0000000102114755: mov    0x10(%rdi,%rbx,4),%eax  ;*iaload
                                                ; - java.lang.CharacterDataLatin1::getProperties@7 (line 72)
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@4 (line 134)

  0x0000000102114759: mov    %rax,%rsi
  0x000000010211475c: and    $0x20000,%esi
  0x0000000102114762: cmp    $0x0,%esi
  0x0000000102114765: movabs $0x1160a6fe8,%rsi  ;   {metadata(method data for {method} {0x0000000116036c40} 'toLowerCase' '(I)I' in 'java/lang/CharacterDataLatin1')}
  0x000000010211476f: movabs $0x138,%rdi
  0x0000000102114779: je     0x0000000102114789
  0x000000010211477f: movabs $0x148,%rdi
  0x0000000102114789: mov    (%rsi,%rdi,1),%rbx
  0x000000010211478d: lea    0x1(%rbx),%rbx
  0x0000000102114791: mov    %rbx,(%rsi,%rdi,1)
  0x0000000102114795: je     0x00000001021147eb  ;*ifeq
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@12 (line 136)

  0x000000010211479b: mov    %rax,%rsi
  0x000000010211479e: and    $0x7fc0000,%esi
  0x00000001021147a4: cmp    $0x7fc0000,%esi
  0x00000001021147aa: movabs $0x1160a6fe8,%rsi  ;   {metadata(method data for {method} {0x0000000116036c40} 'toLowerCase' '(I)I' in 'java/lang/CharacterDataLatin1')}
  0x00000001021147b4: movabs $0x158,%rdi
  0x00000001021147be: je     0x00000001021147ce
  0x00000001021147c4: movabs $0x168,%rdi
  0x00000001021147ce: mov    (%rsi,%rdi,1),%rbx
  0x00000001021147d2: lea    0x1(%rbx),%rbx
  0x00000001021147d6: mov    %rbx,(%rsi,%rdi,1)
  0x00000001021147da: je     0x00000001021147eb  ;*if_icmpeq
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@21 (line 136)

  0x00000001021147e0: shl    $0x5,%eax
  0x00000001021147e3: sar    $0x17,%eax
  0x00000001021147e6: add    %edx,%eax
  0x00000001021147e8: mov    %rax,%rdx          ;*iload_2
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@37 (line 141)

  0x00000001021147eb: mov    %rdx,%rax
  0x00000001021147ee: add    $0x40,%rsp
  0x00000001021147f2: pop    %rbp
  0x00000001021147f3: test   %eax,-0x9e86f9(%rip)        # 0x000000010172c100
                                                ;   {poll_return}
  0x00000001021147f9: retq
  0x00000001021147fa: mov    %rax,0x8(%rsp)
  0x00000001021147ff: movq   $0xffffffffffffffff,(%rsp)
  0x0000000102114807: callq  0x00000001020fe020  ; OopMap{rsi=Oop off=396}
                                                ;*synchronization entry
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@-1 (line 133)
                                                ;   {runtime_call}
  0x000000010211480c: jmpq   0x00000001021146de
  0x0000000102114811: mov    %rax,0x8(%rsp)
  0x0000000102114816: movq   $0xffffffffffffffff,(%rsp)
  0x000000010211481e: callq  0x00000001020fe020  ; OopMap{rsi=Oop off=419}
                                                ;*synchronization entry
                                                ; - java.lang.CharacterDataLatin1::getProperties@-1 (line 71)
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@4 (line 134)
                                                ;   {runtime_call}
  0x0000000102114823: jmpq   0x0000000102114736
  0x0000000102114828: callq  0x000000010206db40  ; OopMap{rsi=Oop rdi=Oop off=429}
                                                ;*iaload
                                                ; - java.lang.CharacterDataLatin1::getProperties@7 (line 72)
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@4 (line 134)
                                                ;   {runtime_call}
  0x000000010211482d: callq  0x000000010206db40  ; OopMap{rsi=Oop rdi=Oop off=434}
                                                ;*iaload
                                                ; - java.lang.CharacterDataLatin1::getProperties@7 (line 72)
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@4 (line 134)
                                                ;   {runtime_call}
  0x0000000102114832: mov    %rax,(%rsp)
  0x0000000102114836: callq  0x000000010206e200  ; OopMap{rsi=Oop rdi=Oop off=443}
                                                ;*iaload
                                                ; - java.lang.CharacterDataLatin1::getProperties@7 (line 72)
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@4 (line 134)
                                                ;   {runtime_call}
  0x000000010211483b: nop
  0x000000010211483c: nop
  0x000000010211483d: mov    0x2a8(%r15),%rax
  0x0000000102114844: movabs $0x0,%r10
  0x000000010211484e: mov    %r10,0x2a8(%r15)
  0x0000000102114855: movabs $0x0,%r10
  0x000000010211485f: mov    %r10,0x2b0(%r15)
  0x0000000102114866: add    $0x40,%rsp
  0x000000010211486a: pop    %rbp
  0x000000010211486b: jmpq   0x000000010206e6a0  ;   {runtime_call}
  0x0000000102114870: hlt
  0x0000000102114871: hlt
  0x0000000102114872: hlt
  0x0000000102114873: hlt
  0x0000000102114874: hlt
  0x0000000102114875: hlt
  0x0000000102114876: hlt
  0x0000000102114877: hlt
  0x0000000102114878: hlt
  0x0000000102114879: hlt
  0x000000010211487a: hlt
  0x000000010211487b: hlt
  0x000000010211487c: hlt
  0x000000010211487d: hlt
  0x000000010211487e: hlt
  0x000000010211487f: hlt
[Exception Handler]
[Stub Code]
  0x0000000102114880: callq  0x00000001020fb9a0  ;   {no_reloc}
  0x0000000102114885: mov    %rsp,-0x28(%rsp)
  0x000000010211488a: sub    $0x80,%rsp
  0x0000000102114891: mov    %rax,0x78(%rsp)
  0x0000000102114896: mov    %rcx,0x70(%rsp)
  0x000000010211489b: mov    %rdx,0x68(%rsp)
  0x00000001021148a0: mov    %rbx,0x60(%rsp)
  0x00000001021148a5: mov    %rbp,0x50(%rsp)
  0x00000001021148aa: mov    %rsi,0x48(%rsp)
  0x00000001021148af: mov    %rdi,0x40(%rsp)
  0x00000001021148b4: mov    %r8,0x38(%rsp)
  0x00000001021148b9: mov    %r9,0x30(%rsp)
  0x00000001021148be: mov    %r10,0x28(%rsp)
  0x00000001021148c3: mov    %r11,0x20(%rsp)
  0x00000001021148c8: mov    %r12,0x18(%rsp)
  0x00000001021148cd: mov    %r13,0x10(%rsp)
  0x00000001021148d2: mov    %r14,0x8(%rsp)
  0x00000001021148d7: mov    %r15,(%rsp)
  0x00000001021148db: movabs $0x100d1ee90,%rdi  ;   {external_word}
  0x00000001021148e5: movabs $0x102114885,%rsi  ;   {internal_word}
  0x00000001021148ef: mov    %rsp,%rdx
  0x00000001021148f2: and    $0xfffffffffffffff0,%rsp
  0x00000001021148f6: callq  0x0000000100b4a196  ;   {runtime_call}
  0x00000001021148fb: hlt
[Deopt Handler Code]
  0x00000001021148fc: movabs $0x1021148fc,%r10  ;   {section_word}
  0x0000000102114906: push   %r10
  0x0000000102114908: jmpq   0x00000001020473c0  ;   {runtime_call}
  0x000000010211490d: hlt
  0x000000010211490e: hlt
  0x000000010211490f: hlt
Decoding compiled method 0x0000000102114a90:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x0000000115f58548} 'hash' '(Ljava/lang/Object;)I' in 'java/util/HashMap'
  # parm0:    rsi:rsi   = 'java/lang/Object'
  #           [sp+0x40]  (sp of caller)
  0x0000000102114c00: mov    %eax,-0x14000(%rsp)
  0x0000000102114c07: push   %rbp
  0x0000000102114c08: sub    $0x30,%rsp
  0x0000000102114c0c: movabs $0x1160a71a8,%rdi  ;   {metadata(method data for {method} {0x0000000115f58548} 'hash' '(Ljava/lang/Object;)I' in 'java/util/HashMap')}
  0x0000000102114c16: mov    0xdc(%rdi),%ebx
  0x0000000102114c1c: add    $0x8,%ebx
  0x0000000102114c1f: mov    %ebx,0xdc(%rdi)
  0x0000000102114c25: movabs $0x115f58548,%rdi  ;   {metadata({method} {0x0000000115f58548} 'hash' '(Ljava/lang/Object;)I' in 'java/util/HashMap')}
  0x0000000102114c2f: and    $0x1ff8,%ebx
  0x0000000102114c35: cmp    $0x0,%ebx
  0x0000000102114c38: je     0x0000000102114d5c  ;*aload_0
                                                ; - java.util.HashMap::hash@0 (line 338)

  0x0000000102114c3e: cmp    $0x0,%rsi
  0x0000000102114c42: movabs $0x1160a71a8,%rdi  ;   {metadata(method data for {method} {0x0000000115f58548} 'hash' '(Ljava/lang/Object;)I' in 'java/util/HashMap')}
  0x0000000102114c4c: movabs $0x108,%rbx
  0x0000000102114c56: jne    0x0000000102114c66
  0x0000000102114c5c: movabs $0x118,%rbx
  0x0000000102114c66: mov    (%rdi,%rbx,1),%rax
  0x0000000102114c6a: lea    0x1(%rax),%rax
  0x0000000102114c6e: mov    %rax,(%rdi,%rbx,1)
  0x0000000102114c72: jne    0x0000000102114c92  ;*ifnonnull
                                                ; - java.util.HashMap::hash@1 (line 338)

  0x0000000102114c78: movabs $0x1160a71a8,%rsi  ;   {metadata(method data for {method} {0x0000000115f58548} 'hash' '(Ljava/lang/Object;)I' in 'java/util/HashMap')}
  0x0000000102114c82: incl   0x128(%rsi)
  0x0000000102114c88: mov    $0x0,%esi
  0x0000000102114c8d: jmpq   0x0000000102114d4d  ;*goto
                                                ; - java.util.HashMap::hash@5 (line 338)

  0x0000000102114c92: cmp    (%rsi),%rax        ; implicit exception: dispatches to 0x0000000102114d73
  0x0000000102114c95: mov    %rsi,%rdi
  0x0000000102114c98: movabs $0x1160a71a8,%rbx  ;   {metadata(method data for {method} {0x0000000115f58548} 'hash' '(Ljava/lang/Object;)I' in 'java/util/HashMap')}
  0x0000000102114ca2: mov    0x8(%rdi),%edi
  0x0000000102114ca5: shl    $0x3,%rdi
  0x0000000102114ca9: cmp    0x148(%rbx),%rdi
  0x0000000102114cb0: jne    0x0000000102114cbf
  0x0000000102114cb2: addq   $0x1,0x150(%rbx)
  0x0000000102114cba: jmpq   0x0000000102114d25
  0x0000000102114cbf: cmp    0x158(%rbx),%rdi
  0x0000000102114cc6: jne    0x0000000102114cd5
  0x0000000102114cc8: addq   $0x1,0x160(%rbx)
  0x0000000102114cd0: jmpq   0x0000000102114d25
  0x0000000102114cd5: cmpq   $0x0,0x148(%rbx)
  0x0000000102114ce0: jne    0x0000000102114cf9
  0x0000000102114ce2: mov    %rdi,0x148(%rbx)
  0x0000000102114ce9: movq   $0x1,0x150(%rbx)
  0x0000000102114cf4: jmpq   0x0000000102114d25
  0x0000000102114cf9: cmpq   $0x0,0x158(%rbx)
  0x0000000102114d04: jne    0x0000000102114d1d
  0x0000000102114d06: mov    %rdi,0x158(%rbx)
  0x0000000102114d0d: movq   $0x1,0x160(%rbx)
  0x0000000102114d18: jmpq   0x0000000102114d25
  0x0000000102114d1d: addq   $0x1,0x140(%rbx)
  0x0000000102114d25: mov    %rsi,%rdi
  0x0000000102114d28: mov    %rdi,%rsi          ;*invokevirtual hashCode
                                                ; - java.util.HashMap::hash@9 (line 338)

  0x0000000102114d2b: mov    %rdi,0x20(%rsp)
  0x0000000102114d30: nop
  0x0000000102114d31: nop
  0x0000000102114d32: nop
  0x0000000102114d33: nop
  0x0000000102114d34: nop
  0x0000000102114d35: movabs $0xffffffffffffffff,%rax
  0x0000000102114d3f: callq  0x0000000102046220  ; OopMap{[32]=Oop off=324}
                                                ;*invokevirtual hashCode
                                                ; - java.util.HashMap::hash@9 (line 338)
                                                ;   {virtual_call}
  0x0000000102114d44: mov    %rax,%rsi
  0x0000000102114d47: shr    $0x10,%esi
  0x0000000102114d4a: xor    %rax,%rsi
  0x0000000102114d4d: mov    %rsi,%rax
  0x0000000102114d50: add    $0x30,%rsp
  0x0000000102114d54: pop    %rbp
  0x0000000102114d55: test   %eax,-0x9e8c5b(%rip)        # 0x000000010172c100
                                                ;   {poll_return}
  0x0000000102114d5b: retq
  0x0000000102114d5c: mov    %rdi,0x8(%rsp)
  0x0000000102114d61: movq   $0xffffffffffffffff,(%rsp)
  0x0000000102114d69: callq  0x00000001020fe020  ; OopMap{rsi=Oop off=366}
                                                ;*synchronization entry
                                                ; - java.util.HashMap::hash@-1 (line 338)
                                                ;   {runtime_call}
  0x0000000102114d6e: jmpq   0x0000000102114c3e
  0x0000000102114d73: callq  0x000000010206db40  ; OopMap{rsi=Oop off=376}
                                                ;*invokevirtual hashCode
                                                ; - java.util.HashMap::hash@9 (line 338)
                                                ;   {runtime_call}
  0x0000000102114d78: nop
  0x0000000102114d79: nop
  0x0000000102114d7a: mov    0x2a8(%r15),%rax
  0x0000000102114d81: movabs $0x0,%r10
  0x0000000102114d8b: mov    %r10,0x2a8(%r15)
  0x0000000102114d92: movabs $0x0,%r10
  0x0000000102114d9c: mov    %r10,0x2b0(%r15)
  0x0000000102114da3: add    $0x30,%rsp
  0x0000000102114da7: pop    %rbp
  0x0000000102114da8: jmpq   0x000000010206e6a0  ;   {runtime_call}
  0x0000000102114dad: hlt
  0x0000000102114dae: hlt
  0x0000000102114daf: hlt
  0x0000000102114db0: hlt
  0x0000000102114db1: hlt
  0x0000000102114db2: hlt
  0x0000000102114db3: hlt
  0x0000000102114db4: hlt
  0x0000000102114db5: hlt
  0x0000000102114db6: hlt
  0x0000000102114db7: hlt
  0x0000000102114db8: hlt
  0x0000000102114db9: hlt
  0x0000000102114dba: hlt
  0x0000000102114dbb: hlt
  0x0000000102114dbc: hlt
  0x0000000102114dbd: hlt
  0x0000000102114dbe: hlt
  0x0000000102114dbf: hlt
[Stub Code]
  0x0000000102114dc0: nop                       ;   {no_reloc}
  0x0000000102114dc1: nop
  0x0000000102114dc2: nop
  0x0000000102114dc3: nop
  0x0000000102114dc4: nop
  0x0000000102114dc5: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000102114dcf: jmpq   0x0000000102114dcf  ;   {runtime_call}
[Exception Handler]
  0x0000000102114dd4: callq  0x00000001020fb9a0  ;   {runtime_call}
  0x0000000102114dd9: mov    %rsp,-0x28(%rsp)
  0x0000000102114dde: sub    $0x80,%rsp
  0x0000000102114de5: mov    %rax,0x78(%rsp)
  0x0000000102114dea: mov    %rcx,0x70(%rsp)
  0x0000000102114def: mov    %rdx,0x68(%rsp)
  0x0000000102114df4: mov    %rbx,0x60(%rsp)
  0x0000000102114df9: mov    %rbp,0x50(%rsp)
  0x0000000102114dfe: mov    %rsi,0x48(%rsp)
  0x0000000102114e03: mov    %rdi,0x40(%rsp)
  0x0000000102114e08: mov    %r8,0x38(%rsp)
  0x0000000102114e0d: mov    %r9,0x30(%rsp)
  0x0000000102114e12: mov    %r10,0x28(%rsp)
  0x0000000102114e17: mov    %r11,0x20(%rsp)
  0x0000000102114e1c: mov    %r12,0x18(%rsp)
  0x0000000102114e21: mov    %r13,0x10(%rsp)
  0x0000000102114e26: mov    %r14,0x8(%rsp)
  0x0000000102114e2b: mov    %r15,(%rsp)
  0x0000000102114e2f: movabs $0x100d1ee90,%rdi  ;   {external_word}
  0x0000000102114e39: movabs $0x102114dd9,%rsi  ;   {internal_word}
  0x0000000102114e43: mov    %rsp,%rdx
  0x0000000102114e46: and    $0xfffffffffffffff0,%rsp
  0x0000000102114e4a: callq  0x0000000100b4a196  ;   {runtime_call}
  0x0000000102114e4f: hlt
[Deopt Handler Code]
  0x0000000102114e50: movabs $0x102114e50,%r10  ;   {section_word}
  0x0000000102114e5a: push   %r10
  0x0000000102114e5c: jmpq   0x00000001020473c0  ;   {runtime_call}
  0x0000000102114e61: hlt
  0x0000000102114e62: hlt
  0x0000000102114e63: hlt
  0x0000000102114e64: hlt
  0x0000000102114e65: hlt
  0x0000000102114e66: hlt
  0x0000000102114e67: hlt
[Loaded sun.misc.URLClassPath$FileLoader from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.misc.Resource from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.misc.URLClassPath$FileLoader$1 from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.Package from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.nio.ByteBuffered from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.security.PermissionCollection from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.security.Permissions from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.net.URLConnection from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.net.www.URLConnection from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.net.www.protocol.file.FileURLConnection from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.net.www.MessageHeader from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.io.FilePermission from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.io.FilePermission$1 from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
Decoding compiled method 0x0000000102115710:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000115efa6e0} 'getProtocol' '()Ljava/lang/String;' in 'java/net/URL'
  #           [sp+0x40]  (sp of caller)
  0x0000000102115860: mov    0x8(%rsi),%r10d
  0x0000000102115864: shl    $0x3,%r10
  0x0000000102115868: cmp    %rax,%r10
  0x000000010211586b: jne    0x0000000102045e20  ;   {runtime_call}
  0x0000000102115871: data32 data32 nopw 0x0(%rax,%rax,1)
  0x000000010211587c: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x0000000102115880: mov    %eax,-0x14000(%rsp)
  0x0000000102115887: push   %rbp
  0x0000000102115888: sub    $0x30,%rsp         ;*aload_0
                                                ; - java.net.URL::getProtocol@0 (line 799)

  0x000000010211588c: mov    0x14(%rsi),%eax
  0x000000010211588f: shl    $0x3,%rax          ;*getfield protocol
                                                ; - java.net.URL::getProtocol@1 (line 799)

  0x0000000102115893: add    $0x30,%rsp
  0x0000000102115897: pop    %rbp
  0x0000000102115898: test   %eax,-0x9e979e(%rip)        # 0x000000010172c100
                                                ;   {poll_return}
  0x000000010211589e: retq
  0x000000010211589f: nop
  0x00000001021158a0: nop
  0x00000001021158a1: mov    0x2a8(%r15),%rax
  0x00000001021158a8: movabs $0x0,%r10
  0x00000001021158b2: mov    %r10,0x2a8(%r15)
  0x00000001021158b9: movabs $0x0,%r10
  0x00000001021158c3: mov    %r10,0x2b0(%r15)
  0x00000001021158ca: add    $0x30,%rsp
  0x00000001021158ce: pop    %rbp
  0x00000001021158cf: jmpq   0x000000010206e6a0  ;   {runtime_call}
  0x00000001021158d4: hlt
  0x00000001021158d5: hlt
  0x00000001021158d6: hlt
  0x00000001021158d7: hlt
  0x00000001021158d8: hlt
  0x00000001021158d9: hlt
  0x00000001021158da: hlt
  0x00000001021158db: hlt
  0x00000001021158dc: hlt
  0x00000001021158dd: hlt
  0x00000001021158de: hlt
  0x00000001021158df: hlt
[Exception Handler]
[Stub Code]
  0x00000001021158e0: callq  0x00000001020fb9a0  ;   {no_reloc}
  0x00000001021158e5: mov    %rsp,-0x28(%rsp)
  0x00000001021158ea: sub    $0x80,%rsp
  0x00000001021158f1: mov    %rax,0x78(%rsp)
  0x00000001021158f6: mov    %rcx,0x70(%rsp)
  0x00000001021158fb: mov    %rdx,0x68(%rsp)
  0x0000000102115900: mov    %rbx,0x60(%rsp)
  0x0000000102115905: mov    %rbp,0x50(%rsp)
  0x000000010211590a: mov    %rsi,0x48(%rsp)
  0x000000010211590f: mov    %rdi,0x40(%rsp)
  0x0000000102115914: mov    %r8,0x38(%rsp)
  0x0000000102115919: mov    %r9,0x30(%rsp)
  0x000000010211591e: mov    %r10,0x28(%rsp)
  0x0000000102115923: mov    %r11,0x20(%rsp)
  0x0000000102115928: mov    %r12,0x18(%rsp)
  0x000000010211592d: mov    %r13,0x10(%rsp)
  0x0000000102115932: mov    %r14,0x8(%rsp)
  0x0000000102115937: mov    %r15,(%rsp)
  0x000000010211593b: movabs $0x100d1ee90,%rdi  ;   {external_word}
  0x0000000102115945: movabs $0x1021158e5,%rsi  ;   {internal_word}
  0x000000010211594f: mov    %rsp,%rdx
  0x0000000102115952: and    $0xfffffffffffffff0,%rsp
  0x0000000102115956: callq  0x0000000100b4a196  ;   {runtime_call}
  0x000000010211595b: hlt
[Deopt Handler Code]
  0x000000010211595c: movabs $0x10211595c,%r10  ;   {section_word}
  0x0000000102115966: push   %r10
  0x0000000102115968: jmpq   0x00000001020473c0  ;   {runtime_call}
  0x000000010211596d: hlt
  0x000000010211596e: hlt
  0x000000010211596f: hlt
[Loaded java.io.FilePermissionCollection from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.security.AllPermission from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.security.UnresolvedPermission from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.security.BasicPermissionCollection from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded main.java.mo.multithread.volatiletest.Bar from file:/Users/M/work/mine/collection/target/classes/]
Decoding compiled method 0x0000000102115a10:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000115efa3e8} 'getPath' '()Ljava/lang/String;' in 'java/net/URL'
  #           [sp+0x40]  (sp of caller)
  0x0000000102115b60: mov    0x8(%rsi),%r10d
  0x0000000102115b64: shl    $0x3,%r10
  0x0000000102115b68: cmp    %rax,%r10
  0x0000000102115b6b: jne    0x0000000102045e20  ;   {runtime_call}
  0x0000000102115b71: data32 data32 nopw 0x0(%rax,%rax,1)
  0x0000000102115b7c: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x0000000102115b80: mov    %eax,-0x14000(%rsp)
  0x0000000102115b87: push   %rbp
  0x0000000102115b88: sub    $0x30,%rsp         ;*aload_0
                                                ; -[Loaded sun.launcher.LauncherHelper$FXHelper from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
 java.net.URL::getPath@0 (line 747)

  0x0000000102115b8c: mov    0x28(%rsi),%eax
  0x0000000102115b8f: shl    $0x3,%rax          ;*getfield path
                                                ; - java.net.URL::getPath@1 (line 747)

  0x0000000102115b93: add    $0x30,%rsp
  0x0000000102115b97: pop    %rbp
  0x0000000102115b98: test   %eax,-0x9e9a9e(%rip)        # 0x000000010172c100
                                                ;   {poll_return}
  0x0000000102115b9e: retq
  0x0000000102115b9f: nop
  0x0000000102115ba0: nop
  0x0000000102115ba1: mov    0x2a8(%r15),%rax
  0x0000000102115ba8: movabs $0x0,%r10
  0x0000000102115bb2: mov    %r10,0x2a8(%r15)
  0x0000000102115bb9: movabs $0x0,%r10
  0x0000000102115bc3: mov    %r10,0x2b0(%r15)
  0x0000000102115bca: add    $0x30,%rsp
  0x0000000102115bce: pop    %rbp
  0x0000000102115bcf: jmpq   0x000000010206e6a0  ;   {runtime_call}
  0x0000000102115bd4: hlt
  0x0000000102115bd5: hlt
  0x0000000102115bd6: hlt
  0x0000000102115bd7: hlt
  0x0000000102115bd8: hlt
  0x0000000102115bd9: hlt
  0x0000000102115bda: hlt
  0x0000000102115bdb: hlt
  0x0000000102115bdc: hlt
  0x0000000102115bdd: hlt
  0x0000000102115bde: hlt
  0x0000000102115bdf: hlt
[Exception Handler]
[Stub Code]
  0x0000000102115be0: callq  0x00000001020fb9a0  ;   {no_reloc}
  0x0000000102115be5: mov    %rsp,-0x28(%rsp)
  0x0000000102115bea: sub    $0x80,%rsp
  0x0000000102115bf1: mov    %rax,0x78(%rsp)
  0x0000000102115bf6: mov    %rcx,0x70(%rsp)
  0x0000000102115bfb: mov    %rdx,0x68(%rsp)
  0x0000000102115c00: mov    %rbx,0x60(%rsp)
  0x0000000102115c05: mov    %rbp,0x50(%rsp)
  0x0000000102115c0a: mov    %rsi,0x48(%rsp)
  0x0000000102115c0f: mov    %rdi,0x40(%rsp)
  0x0000000102115c14: mov    %r8,0x38(%rsp)
  0x0000000102115c19: mov    %r9,0x30(%rsp)
  0x0000000102115c1e: mov    %r10,0x28(%rsp)
  0x0000000102115c23: mov    %r11,0x20(%rsp)
  0x0000000102115c28: mov    %r12,0x18(%rsp)
  0x0000000102115c2d: mov    %r13,0x10(%rsp)
  0x0000000102115c32: mov    %r14,0x8(%rsp)
  0x0000000102115c37: mov    %r15,(%rsp)
  0x0000000102115c3b: movabs $0x100d1ee90,%rdi  ;   {external_word}
  0x0000000102115c45: movabs $0x102115be5,%rsi  ;   {internal_word}
  0x0000000102115c4f: mov    %rsp,%rdx
  0x0000000102115c52: and    $0xfffffffffffffff0,%rsp
  0x0000000102115c56: callq  0x0000000100b4a196  ;   {runtime_call}
  0x0000000102115c5b: hlt
[Deopt Handler Code]
  0x0000000102115c5c: movabs $0x102115c5c,%r10  ;   {section_word}
  0x0000000102115c66: push   %r10
  0x0000000102115c68: jmpq   0x00000001020473c0  ;   {runtime_call}
  0x0000000102115c6d: hlt
  0x0000000102115c6e: hlt
  0x0000000102115c6f: hlt
Decoding compiled method 0x0000000102115d10:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000115efa518} 'getAuthority' '()Ljava/lang/String;' in 'java/net/URL'
  #           [sp+0x40]  (sp of caller)
  0x0000000102115e60: mov    0x8(%rsi),%r10d
  0x0000000102115e64: shl    $0x3,%r10
  0x0000000102115e68: cmp    %rax,%r10
  0x0000000102115e6b: jne    0x0000000102045e20  ;   {runtime_call}
  0x0000000102115e71: data32 data32 nopw 0x0(%rax,%rax,1)
  0x0000000102115e7c: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x0000000102115e80: mov    %eax,-0x14000(%rsp)
  0x0000000102115e87: push   %rbp
  0x0000000102115e88: sub    $0x30,%rsp         ;*aload_0
                                                ; - java.net.URL::getAuthority@0 (line 768)

  0x0000000102115e8c: mov    0x24(%rsi),%eax
  0x0000000102115e8f: shl    $0x3,%rax          ;*getfield authority
                                                ; - java.net.URL::getAuthority@1 (line 768)

  0x0000000102115e93: add    $0x30,%rsp
  0x0000000102115e97: pop    %rbp
  0x0000000102115e98: test   %eax,-0x9e9d9e(%rip)        # 0x000000010172c100
                                                ;   {poll_return}
  0x0000000102115e9e: retq
  0x0000000102115e9f: nop
  0x0000000102115ea0: nop
  0x0000000102115ea1: mov    0x2a8(%r15),%rax
  0x0000000102115ea8: movabs $0x0,%r10
  0x0000000102115eb2: mov    %r10,0x2a8(%r15)
  0x0000000102115eb9: movabs $0x0,%r10
  0x0000000102115ec3: mov    %r10,0x2b0(%r15)
  0x0000000102115eca: add    $0x30,%rsp
  0x0000000102115ece: pop    %rbp
  0x0000000102115ecf: jmpq   0x000000010206e6a0  ;   {runtime_call}
  0x0000000102115ed4: hlt
  0x0000000102115ed5: hlt
  0x0000000102115ed6: hlt
  0x0000000102115ed7: hlt
  0x0000000102115ed8: hlt
  0x0000000102115ed9: hlt
  0x0000000102115eda: hlt
  0x0000000102115edb: hlt
  0x0000000102115edc: hlt
  0x0000000102115edd: hlt
  0x0000000102115ede: hlt
  0x0000000102115edf: hlt
[Exception Handler]
[Stub Code]
  0x0000000102115ee0: callq  0x00000001020fb9a0  ;   {no_reloc}
  0x0000000102115ee5: mov    %rsp,-0x28(%rsp)
  0x0000000102115eea: sub    $0x80,%rsp
  0x0000000102115ef1: mov    %rax,0x78(%rsp)
  0x0000000102115ef6: mov    %rcx,0x70(%rsp)
  0x0000000102115efb: mov    %rdx,0x68(%rsp)
  0x0000000102115f00: mov    %rbx,0x60(%rsp)
  0x0000000102115f05: mov    %rbp,0x50(%rsp)
  0x0000000102115f0a: mov    %rsi,0x48(%rsp)
  0x0000000102115f0f: mov    %rdi,0x40(%rsp)
  0x0000000102115f14: mov    %r8,0x38(%rsp)
  0x0000000102115f19: mov    %r9,0x30(%rsp)
  0x0000000102115f1e: mov    %r10,0x28(%rsp)
  0x0000000102115f23: mov    %r11,0x20(%rsp)
  0x0000000102115f28: mov    %r12,0x18(%rsp)
  0x0000000102115f2d: mov    %r13,0x10(%rsp)
  0x0000000102115f32: mov    %r14,0x8(%rsp)
  0x0000000102115f37: mov    %r15,(%rsp)
  0x0000000102115f3b: movabs $0x100d1ee90,%rdi  ;   {external_word}
  0x0000000102115f45: movabs $0x102115ee5,%rsi  ;   {internal_word}
  0x0000000102115f4f: mov    %rsp,%rdx
  0x0000000102115f52: and    $0xfffffffffffffff0,%rsp
  0x0000000102115f56: callq  0x0000000100b4a196  ;   {runtime_call}
  0x0000000102115f5b: hlt
[Deopt Handler Code]
  0x0000000102115f5c: movabs $0x102115f5c,%r10  ;   {section_word}
  0x0000000102115f66: push   %r10
  0x0000000102115f68: jmpq   0x00000001020473c0  ;   {runtime_call}
  0x0000000102115f6d: hlt
  0x0000000102115f6e: hlt
  0x0000000102115f6f: hlt
Decoding compiled method 0x0000000102116010:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000115fe1548} 'requestedCharsetName' '()Ljava/lang/String;' in 'java/lang/StringCoding$StringEncoder'
  #           [sp+0x40]  (sp of caller)
  0x0000000102116160: mov    0x8(%rsi),%r10d
  0x0000000102116164: shl    $0x3,%r10
  0x0000000102116168: cmp    %rax,%r10
  0x000000010211616b: jne    0x0000000102045e20  ;   {runtime_call}
  0x0000000102116171: data32 data32 nopw 0x0(%rax,%rax,1)
  0x000000010211617c: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x0000000102116180: mov    %eax,-0x14000(%rsp)
  0x0000000102116187: push   %rbp
  0x0000000102116188: sub    $0x30,%rsp         ;*aload_0
                                                ; - java.lang.StringCoding$StringEncoder::requestedCharsetName@0 (line 295)

  0x000000010211618c: mov    0x18(%rsi),%eax
  0x000000010211618f: shl    $0x3,%rax          ;*getfield requestedCharsetName
                                                ; - java.lang.StringCoding$StringEncoder::requestedCharsetName@1 (line 295)

  0x0000000102116193: add    $0x30,%rsp
  0x0000000102116197: pop    %rbp
  0x0000000102116198: test   %eax,-0x9ea09e(%rip)        # 0x000000010172c100
                                                ;   {poll_return}
  0x000000010211619e: retq
  0x000000010211619f: nop
  0x00000001021161a0: nop
  0x00000001021161a1: mov    0x2a8(%r15),%rax
  0x00000001021161a8: movabs $0x0,%r10
  0x00000001021161b2: mov    %r10,0x2a8(%r15)
  0x00000001021161b9: movabs $0x0,%r10
  0x00000001021161c3: mov    %r10,0x2b0(%r15)
  0x00000001021161ca: add    $0x30,%rsp
  0x00000001021161ce: pop    %rbp
  0x00000001021161cf: jmpq   0x000000010206e6a0  ;   {runtime_call}
  0x00000001021161d4: hlt
  0x00000001021161d5: hlt
  0x00000001021161d6: hlt
  0x00000001021161d7: hlt
  0x00000001021161d8: hlt
  0x00000001021161d9: hlt
  0x00000001021161da: hlt
  0x00000001021161db: hlt
  0x00000001021161dc: hlt
  0x00000001021161dd: hlt
  0x00000001021161de: hlt
  0x00000001021161df: hlt
[Exception Handler]
[Stub Code]
  0x00000001021161e0: callq  0x00000001020fb9a0  ;   {no_reloc}
  0x00000001021161e5: mov    %rsp,-0x28(%rsp)
  0x00000001021161ea: sub    $0x80,%rsp
  0x00000001021161f1: mov    %rax,0x78(%rsp)
  0x00000001021161f6: mov    %rcx,0x70(%rsp)
  0x00000001021161fb: mov    %rdx,0x68(%rsp)
  0x0000000102116200: mov    %rbx,0x60(%rsp)
  0x0000000102116205: mov    %rbp,0x50(%rsp)
  0x000000010211620a: mov    %rsi,0x48(%rsp)
  0x000000010211620f: mov    %rdi,0x40(%rsp)
  0x0000000102116214: mov    %r8,0x38(%rsp)
  0x0000000102116219: mov    %r9,0x30(%rsp)
  0x000000010211621e: mov    %r10,0x28(%rsp)
  0x0000000102116223: mov    %r11,0x20(%rsp)
  0x0000000102116228: mov    %r12,0x18(%rsp)
  0x000000010211622d: mov    %r13,0x10(%rsp)
  0x0000000102116232: mov    %r14,0x8(%rsp)
  0x0000000102116237: mov    %r15,(%rsp)
  0x000000010211623b: movabs $0x100d1ee90,%rdi  ;   {external_word}
  0x0000000102116245: movabs $0x1021161e5,%rsi  ;   {internal_word}
  0x000000010211624f: mov    %rsp,%rdx
  0x0000000102116252: and    $0xfffffffffffffff0,%rsp
  0x0000000102116256: callq  0x0000000100b4a196  ;   {runtime_call}
  0x000000010211625b: hlt
[Deopt Handler Code]
  0x000000010211625c: movabs $0x10211625c,%r10  ;   {section_word}
  0x0000000102116266: push   %r10
  0x0000000102116268: jmpq   0x00000001020473c0  ;   {runtime_call}
  0x000000010211626d: hlt
  0x000000010211626e: hlt
  0x000000010211626f: hlt
Decoding compiled method 0x0000000102116310:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000115efa810} 'getFile' '()Ljava/lang/String;' in 'java/net/URL'
  #           [sp+0x40]  (sp of caller)
  0x0000000102116460: mov    0x8(%rsi),%r10d
  0x0000000102116464: shl    $0x3,%r10
  0x0000000102116468: cmp    %rax,%r10
  0x000000010211646b: jne    0x0000000102045e20  ;   {runtime_call}
  0x0000000102116471: data32 data32 nopw 0x0(%rax,%rax,1)
  0x000000010211647c: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x0000000102116480: mov    %eax,-0x14000(%rsp)
  0x0000000102116487: push   %rbp
  0x0000000102116488: sub    $0x30,%rsp         ;*aload_0
                                                ; - java.net.URL::getFile@0 (line 826)

  0x000000010211648c: mov    0x1c(%rsi),%eax
  0x000000010211648f: shl    $0x3,%rax          ;*getfield file
                                                ; - java.net.URL::getFile@1 (line 826)

  0x0000000102116493: add    $0x30,%rsp
  0x0000000102116497: pop    %rbp
  0x0000000102116498: test   %eax,-0x9ea39e(%rip)        # 0x000000010172c100
                                                ;   {poll_return}
  0x000000010211649e: retq
  0x000000010211649f: nop
  0x00000001021164a0: nop
  0x00000001021164a1: mov    0x2a8(%r15),%rax
  0x00000001021164a8: movabs $0x0,%r10
  0x00000001021164b2: mov    %r10,0x2a8(%r15)
  0x00000001021164b9: movabs $0x0,%r10
  0x00000001021164c3: mov    %r10,0x2b0(%r15)
  0x00000001021164ca: add    $0x30,%rsp
  0x00000001021164ce: pop    %rbp
  0x00000001021164cf: jmpq   0x000000010206e6a0  ;   {runtime_call}
  0x00000001021164d4: hlt
  0x00000001021164d5: hlt
  0x00000001021164d6: hlt
  0x00000001021164d7: hlt
  0x00000001021164d8: hlt
  0x00000001021164d9: hlt
  0x00000001021164da: hlt
  0x00000001021164db: hlt
  0x00000001021164dc: hlt
  0x00000001021164dd: hlt
  0x00000001021164de: hlt
  0x00000001021164df: hlt
[Exception Handler]
[Stub Code]
  0x00000001021164e0: callq  0x00000001020fb9a0  ;   {no_reloc}
  0x00000001021164e5: mov    %rsp,-0x28(%rsp)
  0x00000001021164ea: sub    $0x80,%rsp
  0x00000001021164f1: mov    %rax,0x78(%rsp)
  0x00000001021164f6: mov    %rcx,0x70(%rsp)
  0x00000001021164fb: mov    %rdx,0x68(%rsp)
  0x0000000102116500: mov    %rbx,0x60(%rsp)
  0x0000000102116505: mov    %rbp,0x50(%rsp)
  0x000000010211650a: mov    %rsi,0x48(%rsp)
  0x000000010211650f: mov    %rdi,0x40(%rsp)
  0x0000000102116514: mov    %r8,0x38(%rsp)
  0x0000000102116519: mov    %r9,0x30(%rsp)
  0x000000010211651e: mov    %r10,0x28(%rsp)
  0x0000000102116523: mov    %r11,0x20(%rsp)
  0x0000000102116528: mov    %r12,0x18(%rsp)
  0x000000010211652d: mov    %r13,0x10(%rsp)
  0x0000000102116532: mov    %r14,0x8(%rsp)
  0x0000000102116537: mov    %r15,(%rsp)
  0x000000010211653b: movabs $0x100d1ee90,%rdi  ;   {external_word}
  0x0000000102116545: movabs $0x1021164e5,%rsi  ;   {internal_word}
  0x000000010211654f: mov    %rsp,%rdx
  0x0000000102116552: and    $0xfffffffffffffff0,%rsp
  0x0000000102116556: callq  0x0000000100b4a196  ;   {runtime_call}
  0x000000010211655b: hlt
[Deopt Handler Code]
  0x000000010211655c: movabs $0x10211655c,%r10  ;   {section_word}
  0x0000000102116566: push   %r10
  0x0000000102116568: jmpq   0x00000001020473c0  ;   {runtime_call}
  0x000000010211656d: hlt
  0x000000010211656e: hlt
  0x000000010211656f: hlt
Decoding compiled method 0x0000000102116610:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000115f32398} 'size' '()I' in 'java/[Loaded java.lang.Class$MethodArray from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
util/Vector'
  #           [sp+0x50]  (sp of caller)
  0x0000000102116760: mov    0x8(%rsi),%r10d
  0x0000000102116764: shl    $0x3,%r10
  0x0000000102116768: cmp    %rax,%r10
  0x000000010211676b: jne    0x0000000102045e20  ;   {runtime_call}
  0x0000000102116771: data32 data32 nopw 0x0(%rax,%rax,1)
  0x000000010211677c: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x0000000102116780: mov    %eax,-0x14000(%rsp)
  0x0000000102116787: push   %rbp
  0x0000000102116788: sub    $0x40,%rsp
  0x000000010211678c: lea    0x20(%rsp),%rdi
  0x0000000102116791: mov    %rsi,0x8(%rdi)
  0x0000000102116795: mov    (%rsi),%rax
  0x0000000102116798: mov    %rax,%rbx
  0x000000010211679b: and    $0x7,%rbx
  0x000000010211679f: cmp    $0x5,%rbx
  0x00000001021167a3: jne    0x000000010211682a
  0x00000001021167a9: mov    0x8(%rsi),%ebx
  0x00000001021167ac: shl    $0x3,%rbx
  0x00000001021167b0: mov    0xa8(%rbx),%rbx
  0x00000001021167b7: or     %r15,%rbx
  0x00000001021167ba: xor    %rax,%rbx
  0x00000001021167bd: and    $0xffffffffffffff87,%rbx
  0x00000001021167c1: je     0x0000000102116852
  0x00000001021167c7: test   $0x7,%rbx
  0x00000001021167ce: jne    0x0000000102116817
  0x00000001021167d0: test   $0x300,%rbx
  0x00000001021167d7: jne    0x00000001021167f6
  0x00000001021167d9: and    $0x37f,%rax
  0x00000001021167e0: mov    %rax,%rbx
  0x00000001021167e3: or     %r15,%rbx
  0x00000001021167e6: lock cmpxchg %rbx,(%rsi)
  0x00000001021167eb: jne    0x0000000102116895
  0x00000001021167f1: jmpq   0x0000000102116852
  0x00000001021167f6: mov    0x8(%rsi),%ebx
  0x00000001021167f9: shl    $0x3,%rbx
  0x00000001021167fd: mov    0xa8(%rbx),%rbx
  0x0000000102116804: or     %r15,%rbx
  0x0000000102116807: lock cmpxchg %rbx,(%rsi)
  0x000000010211680c: jne    0x0000000102116895
  0x0000000102116812: jmpq   0x0000000102116852
  0x0000000102116817: mov    0x8(%rsi),%ebx
  0x000000010211681a: shl    $0x3,%rbx
  0x000000010211681e: mov    0xa8(%rbx),%rbx
  0x0000000102116825: lock cmpxchg %rbx,(%rsi)
  0x000000010211682a: mov    (%rsi),%rax
  0x000000010211682d: or     $0x1,%rax
  0x0000000102116831: mov    %rax,(%rdi)
  0x0000000102116834: lock cmpxchg %rdi,(%rsi)
  0x0000000102116839: je     0x0000000102116852
  0x000000010211683f: sub    %rsp,%rax
  0x0000000102116842: and    $0xfffffffffffff007,%rax
  0x0000000102116849: mov    %rax,(%rdi)
  0x000000010211684c: jne    0x0000000102116895  ;*aload_0
                                                ; - java.util.Vector::size@0 (line 315)

  0x0000000102116852: mov    0x10(%rsi),%esi    ;*getfield elementCount
                                                ; - java.util.Vector::size@1 (line 315)

  0x0000000102116855: lea    0x20(%rsp),%rax
  0x000000010211685a: mov    0x8(%rax),%rbx
  0x000000010211685e: mov    (%rbx),%rdi
  0x0000000102116861: and    $0x7,%rdi
  0x0000000102116865: cmp    $0x5,%rdi
  0x0000000102116869: je     0x0000000102116886
  0x000000010211686f: mov    (%rax),%rdi
  0x0000000102116872: test   %rdi,%rdi
  0x0000000102116875: je     0x0000000102116886
  0x000000010211687b: lock cmpxchg %rdi,(%rbx)
  0x0000000102116880: jne    0x00000001021168a5  ;*ireturn
                                                ; - java.util.Vector::size@4 (line 315)

  0x0000000102116886: mov    %rsi,%rax
  0x0000000102116889: add    $0x40,%rsp
  0x000000010211688d: pop    %rbp
  0x000000010211688e: test   %eax,-0x9ea794(%rip)        # 0x000000010172c100
                                                ;   {poll_return}
  0x0000000102116894: retq
  0x0000000102116895: mov    %rsi,0x8(%rsp)
  0x000000010211689a: mov    %rdi,(%rsp)
  0x000000010211689e: callq  0x00000001020fc4a0  ; OopMap{rsi=Oop [40]=Oop off=323}
                                                ;*synchronization entry
                                                ; - java.util.Vector::size@-1 (line 315)
                                                ;   {runtime_call}
  0x00000001021168a3: jmp    0x0000000102116852
  0x00000001021168a5: lea    0x20(%rsp),%rax
  0x00000001021168aa: mov    %rax,(%rsp)
  0x00000001021168ae: callq  0x00000001020fc860  ;   {runtime_call}
  0x00000001021168b3: jmp    0x0000000102116886
  0x00000001021168b5: nop
  0x00000001021168b6: nop
  0x00000001021168b7: mov    0x2a8(%r15),%rax
  0x00000001021168be: movabs $0x0,%r10
  0x00000001021168c8: mov    %r10,0x2a8(%r15)
  0x00000001021168cf: movabs $0x0,%r10
  0x00000001021168d9: mov    %r10,0x2b0(%r15)
  0x00000001021168e0: mov    %rax,%rbx
  0x00000001021168e3: lea    0x20(%rsp),%rax
  0x00000001021168e8: mov    0x8(%rax),%rsi
  0x00000001021168ec: mov    (%rsi),%rdi
  0x00000001021168ef: and    $0x7,%rdi
  0x00000001021168f3: cmp    $0x5,%rdi
  0x00000001021168f7: je     0x0000000102116914
  0x00000001021168fd: mov    (%rax),%rdi
  0x0000000102116900: test   %rdi,%rdi
  0x0000000102116903: je     0x0000000102116914
  0x0000000102116909: lock cmpxchg %rdi,(%rsi)
  0x000000010211690e: jne    0x0000000102116921
  0x0000000102116914: mov    %rbx,%rax
  0x0000000102116917: add    $0x40,%rsp
  0x000000010211691b: pop    %rbp
  0x000000010211691c: jmpq   0x000000010206e6a0  ;   {runtime_call}
  0x0000000102116921: lea    0x20(%rsp),%rax
  0x0000000102116926: mov    %rax,(%rsp)
  0x000000010211692a: callq  0x00000001020fc860  ;   {runtime_call}
  0x000000010211692f: jmp    0x0000000102116914
  0x0000000102116931: hlt
  0x0000000102116932: hlt
  0x0000000102116933: hlt
  0x0000000102116934: hlt
  0x0000000102116935: hlt
  0x0000000102116936: hlt
  0x0000000102116937: hlt
  0x0000000102116938: hlt
  0x0000000102116939: hlt
  0x000000010211693a: hlt
  0x000000010211693b: hlt
  0x000000010211693c: hlt
  0x000000010211693d: hlt
  0x000000010211693e: hlt
  0x000000010211693f: hlt
[Exception Handler]
[Stub Code]
  0x0000000102116940: callq  0x00000001020fb9a0  ;   {no_reloc}
  0x0000000102116945: mov    %rsp,-0x28(%rsp)
  0x000000010211694a: sub    $0x80,%rsp
  0x0000000102116951: mov    %rax,0x78(%rsp)
  0x0000000102116956: mov    %rcx,0x70(%rsp)
  0x000000010211695b: mov    %rdx,0x68(%rsp)
  0x0000000102116960: mov    %rbx,0x60(%rsp)
  0x0000000102116965: mov    %rbp,0x50(%rsp)
  0x000000010211696a: mov    %rsi,0x48(%rsp)
  0x000000010211696f: mov    %rdi,0x40(%rsp)
  0x0000000102116974: mov    %r8,0x38(%rsp)
  0x0000000102116979: mov    %r9,0x30(%rsp)
  0x000000010211697e: mov    %r10,0x28(%rsp)
  0x0000000102116983: mov    %r11,0x20(%rsp)
  0x0000000102116988: mov    %r12,0x18(%rsp)
  0x000000010211698d: mov    %r13,0x10(%rsp)
  0x0000000102116992: mov    %r14,0x8(%rsp)
  0x0000000102116997: mov    %r15,(%rsp)
  0x000000010211699b: movabs $0x100d1ee90,%rdi  ;   {external_word}
  0x00000001021169a5: movabs $0x102116945,%rsi  ;   {internal_word}
  0x00000001021169af: mov    %rsp,%rdx
  0x00000001021169b2: and    $0xfffffffffffffff0,%rsp
  0x00000001021169b6: callq  0x0000000100b4a196  ;   {runtime_call}
  0x00000001021169bb: hlt
[Deopt Handler Code]
  0x00000001021169bc: movabs $0x1021169bc,%r10  ;   {section_word}
  0x00000001021169c6: push   %r10
  0x00000001021169c8: jmpq   0x00000001020473c0  ;   {runtime_call}
  0x00000001021169cd: hlt
  0x00000001021169ce: hlt
  0x00000001021169cf: hlt
Decoding compiled method 0x0000000102116a90:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000115f3ecd8} 'size' '()I' in 'java/util/ArrayList'
  #           [sp+0x40]  (sp of caller)
  0x0000000102116be0: mov    0x8(%rsi),%r10d
  0x0000000102116be4: shl    $0x3,%r10
  0x0000000102116be8: cmp    %rax,%r10
  0x0000000102116beb: jne    0x0000000102045e20  ;   {runtime_call}
  0x0000000102116bf1: data32 data32 nopw 0x0(%rax,%rax,1)
  0x0000000102116bfc: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x0000000102116c00: mov    %eax,-0x14000(%rsp)
  0x0000000102116c07: push   %rbp
  0x0000000102116c08: sub    $0x30,%rsp         ;*aload_0
                                                ; - java.util.ArrayList::size@0 (line 278)

  0x0000000102116c0c: mov    0x10(%rsi),%eax    ;*getfield size
                                                ; - java.util.ArrayList::size@1 (line 278)

  0x0000000102116c0f: add    $0x30,%rsp
  0x0000000102116c13: pop    %rbp
  0x0000000102116c14: test   %eax,-0x9eab1a(%rip)        # 0x000000010172c100
                                                ;   {poll_return}
  0x0000000102116c1a: retq
  0x0000000102116c1b: nop
  0x0000000102116c1c: nop
  0x0000000102116c1d: mov    0x2a8(%r15),%rax
  0x0000000102116c24: movabs $0x0,%r10
  0x0000000102116c2e: mov    %r10,0x2a8(%r15)
  0x0000000102116c35: movabs $0x0,%r10
  0x0000000102116c3f: mov    %r10,0x2b0(%r15)
  0x0000000102116c46: add    $0x30,%rsp
  0x0000000102116c4a: pop    %rbp
  0x0000000102116c4b: jmpq   0x000000010206e6a0  ;   {runtime_call}
  0x0000000102116c50: hlt
  0x0000000102116c51: hlt
  0x0000000102116c52: hlt
  0x0000000102116c53: hlt
  0x0000000102116c54: hlt
  0x0000000102116c55: hlt
  0x0000000102116c56: hlt
  0x0000000102116c57: hlt
  0x0000000102116c58: hlt
  0x0000000102116c59: hlt
  0x0000000102116c5a: hlt
  0x0000000102116c5b: hlt
  0x0000000102116c5c: hlt
  0x0000000102116c5d: hlt
  0x0000000102116c5e: hlt
  0x0000000102116c5f: hlt
[Exception Handler]
[Stub Code]
  0x0000000102116c60: callq  0x00000001020fb9a0  ;   {no_reloc}
  0x0000000102116c65: mov    %rsp,-0x28(%rsp)
  0x0000000102116c6a: sub    $0x80,%rsp
  0x0000000102116c71: mov    %rax,0x78(%rsp)
  0x0000000102116c76: mov    %rcx,0x70(%rsp)
  0x0000000102116c7b: mov    %rdx,0x68(%rsp)
  0x0000000102116c80: mov    %rbx,0x60(%rsp)
  0x0000000102116c85: mov    %rbp,0x50(%rsp)
  0x0000000102116c8a: mov    %rsi,0x48(%rsp)
  0x0000000102116c8f: mov    %rdi,0x40(%rsp)
  0x0000000102116c94: mov    %r8,0x38(%rsp)
  0x0000000102116c99: mov    %r9,0x30(%rsp)
  0x0000000102116c9e: mov    %r10,0x28(%rsp)
  0x0000000102116ca3: mov    %r11,0x20(%rsp)
  0x0000000102116ca8: mov    %r12,0x18(%rsp)
  0x0000000102116cad: mov    %r13,0x10(%rsp)
  0x0000000102116cb2: mov    %r14,0x8(%rsp)
  0x0000000102116cb7: mov    %r15,(%rsp)
  0x0000000102116cbb: movabs $0x100d1ee90,%rdi  ;   {external_word}
  0x0000000102116cc5: movabs $0x102116c65,%rsi  ;   {internal_word}
  0x0000000102116ccf: mov    %rsp,%rdx
  0x0000000102116cd2: and    $0xfffffffffffffff0,%rsp
  0x0000000102116cd6: callq  0x0000000100b4a196  ;   {runtime_call}
  0x0000000102116cdb: hlt
[Deopt Handler Code]
  0x0000000102116cdc: movabs $0x102116cdc,%r10  ;   {section_word}
  0x0000000102116ce6: push   %r10
  0x0000000102116ce8: jmpq   0x00000001020473c0  ;   {runtime_call}
  0x0000000102116ced: hlt
  0x0000000102116cee: hlt
  0x0000000102116cef: hlt
